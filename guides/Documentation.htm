<html>
    <head>
        <title>Hatch Game Engine Documentation</title>
        <style>
            body {
                background-color: white;
                font-family: sans-serif;
                margin: 64px;
            }
            codefrag {
                display: inline;
                margin: 0px;
                font-family: monospace;
            }
            a {
                text-decoration: none;
                color: #4141F2;
            }
            .function_list {
                font-family: monospace;
                margin-top: 0.5em;
            }
            .function_list li {
                margin-top: 0.125em;
                margin-bottom: 0.125em;
            }
            code, pre.code {
                background-color: #f2f2f2;
                border-radius: 3px;
                padding: 3px;
            }
            codeBlock {
                background-color: #f2f2f2;
                border-radius: 3px;
                padding: 3px;
                line-height: 100%;
                word-break: normal;
                font-family: monospace;
            }
        </style>
    </head>
    <body>
        <div style="position: fixed; margin-top: -32px; margin-left: -96px; width: 100%; text-align: right; ">
            <a href="#Reference_top">Back to top</a>
        </div>
        <h1 id="Reference_top">Hatch Game Engine Reference</h1>
        <h3>Namespaces</h3>
        <ul>
            <li><a href="#Reference_Animator">Animator</a></li>
            <li><a href="#Reference_Application">Application</a></li>
            <li><a href="#Reference_Array">Array</a></li>
            <li><a href="#Reference_Audio">Audio</a></li>
            <li><a href="#Reference_Controller">Controller</a></li>
            <li><a href="#Reference_Date">Date</a></li>
            <li><a href="#Reference_Device">Device</a></li>
            <li><a href="#Reference_Directory">Directory</a></li>
            <li><a href="#Reference_Display">Display</a></li>
            <li><a href="#Reference_Draw">Draw</a></li>
            <li><a href="#Reference_Ease">Ease</a></li>
            <li><a href="#Reference_File">File</a></li>
            <li><a href="#Reference_HTTP">HTTP</a></li>
            <li><a href="#Reference_Input">Input</a></li>
            <li><a href="#Reference_Instance">Instance</a></li>
            <li><a href="#Reference_JSON">JSON</a></li>
            <li><a href="#Reference_Math">Math</a></li>
            <li><a href="#Reference_Matrix">Matrix</a></li>
            <li><a href="#Reference_Model">Model</a></li>
            <li><a href="#Reference_Music">Music</a></li>
            <li><a href="#Reference_Number">Number</a></li>
            <li><a href="#Reference_Object">Object</a></li>
            <li><a href="#Reference_Palette">Palette</a></li>
            <li><a href="#Reference_Resources">Resources</a></li>
            <li><a href="#Reference_Scene">Scene</a></li>
            <li><a href="#Reference_Scene3D">Scene3D</a></li>
            <li><a href="#Reference_Serializer">Serializer</a></li>
            <li><a href="#Reference_Settings">Settings</a></li>
            <li><a href="#Reference_Shader">Shader</a></li>
            <li><a href="#Reference_SocketClient">SocketClient</a></li>
            <li><a href="#Reference_Sound">Sound</a></li>
            <li><a href="#Reference_Sprite">Sprite</a></li>
            <li><a href="#Reference_Stream">Stream</a></li>
            <li><a href="#Reference_String">String</a></li>
            <li><a href="#Reference_Texture">Texture</a></li>
            <li><a href="#Reference_Thread">Thread</a></li>
            <li><a href="#Reference_TileCollision">TileCollision</a></li>
            <li><a href="#Reference_TileInfo">TileInfo</a></li>
            <li><a href="#Reference_Touch">Touch</a></li>
            <li><a href="#Reference_VertexBuffer">VertexBuffer</a></li>
            <li><a href="#Reference_Video">Video</a></li>
            <li><a href="#Reference_View">View</a></li>
            <li><a href="#Reference_Window">Window</a></li>
            <li><a href="#Reference_XML">XML</a></li>
        </ul>
        <h3>Instance methods</h3>
        <ul>
            <li><a href="#Reference_Instance">Instance</a></li>
        </ul>
        <h3>Enums</h3>
        <ul>
            <li><a href="#Reference_ACTIVE_*">ACTIVE_*</a></li>
            <li><a href="#Reference_Axis_*">Axis_*</a></li>
            <li><a href="#Reference_BlendFactor_*">BlendFactor_*</a></li>
            <li><a href="#Reference_BlendMode_*">BlendMode_*</a></li>
            <li><a href="#Reference_Button_*">Button_*</a></li>
            <li><a href="#Reference_CMODE_*">CMODE_*</a></li>
            <li><a href="#Reference_C_*">C_*</a></li>
            <li><a href="#Reference_Controller_*">Controller_*</a></li>
            <li><a href="#Reference_DrawBehavior_*">DrawBehavior_*</a></li>
            <li><a href="#Reference_DrawMode_*">DrawMode_*</a></li>
            <li><a href="#Reference_FLIP_*">FLIP_*</a></li>
            <li><a href="#Reference_FaceCull_*">FaceCull_*</a></li>
            <li><a href="#Reference_FileStream_*">FileStream_*</a></li>
            <li><a href="#Reference_Filter_*">Filter_*</a></li>
            <li><a href="#Reference_FogEquation_*">FogEquation_*</a></li>
            <li><a href="#Reference_KeyBind_*">KeyBind_*</a></li>
            <li><a href="#Reference_Persistence_*">Persistence_*</a></li>
            <li><a href="#Reference_Platform_*">Platform_*</a></li>
            <li><a href="#Reference_SCOPE_*">SCOPE_*</a></li>
            <li><a href="#Reference_SensorDirection_*">SensorDirection_*</a></li>
            <li><a href="#Reference_TILECOLLISION_*">TILECOLLISION_*</a></li>
            <li><a href="#Reference_TintMode_*">TintMode_*</a></li>
        </ul>
        <h3>Constants</h3>
        <ul>
                    <li><a href="#Reference_constants_NUM_CONTROLLER_BUTTONS">NUM_CONTROLLER_BUTTONS</a></li>
                    <li><a href="#Reference_constants_NUM_CONTROLLER_AXES">NUM_CONTROLLER_AXES</a></li>
                    <li><a href="#Reference_constants_MAX_SCENE_VIEWS">MAX_SCENE_VIEWS</a></li>
                    <li><a href="#Reference_constants_Math_PI">Math_PI</a></li>
                    <li><a href="#Reference_constants_Math_PI_DOUBLE">Math_PI_DOUBLE</a></li>
                    <li><a href="#Reference_constants_Math_PI_HALF">Math_PI_HALF</a></li>
                    <li><a href="#Reference_constants_Math_R_PI">Math_R_PI</a></li>
                    <li><a href="#Reference_constants_NUM_KEYBOARD_KEYS">NUM_KEYBOARD_KEYS</a></li>
        </ul>
        <h3>Globals</h3>
        <ul>
                    <li><a href="#Reference_globals_CameraX">CameraX</a></li>
                    <li><a href="#Reference_globals_CameraY">CameraY</a></li>
                    <li><a href="#Reference_globals_LowPassFilter">LowPassFilter</a></li>
                    <li><a href="#Reference_globals_CurrentView">CurrentView</a></li>
                    <li><a href="#Reference_globals_Scene_Frame">Scene_Frame</a></li>
                    <li><a href="#Reference_globals_Scene_TimeEnabled">Scene_TimeEnabled</a></li>
                    <li><a href="#Reference_globals_Scene_TimeCounter">Scene_TimeCounter</a></li>
                    <li><a href="#Reference_globals_Scene_Minutes">Scene_Minutes</a></li>
                    <li><a href="#Reference_globals_Scene_Seconds">Scene_Seconds</a></li>
                    <li><a href="#Reference_globals_Scene_Milliseconds">Scene_Milliseconds</a></li>
                    <li><a href="#Reference_globals_Scene_Filter">Scene_Filter</a></li>
                    <li><a href="#Reference_globals_Scene_ListPos">Scene_ListPos</a></li>
                    <li><a href="#Reference_globals_Scene_ActiveCategory">Scene_ActiveCategory</a></li>
                    <li><a href="#Reference_globals_Scene_DebugMode">Scene_DebugMode</a></li>
        </ul>
        <hr/>
        <h3>Class methods</h3>
            <p id="Reference_Animator">
                <h2>Animator</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Animator_Create">Animator.Create</a></li>
                    <li><a href="#Reference_functions_Animator_SetAnimation">Animator.SetAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_Animate">Animator.Animate</a></li>
                    <li><a href="#Reference_functions_Animator_GetSprite">Animator.GetSprite</a></li>
                    <li><a href="#Reference_functions_Animator_GetCurrentAnimation">Animator.GetCurrentAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_GetCurrentFrame">Animator.GetCurrentFrame</a></li>
                    <li><a href="#Reference_functions_Animator_GetHitbox">Animator.GetHitbox</a></li>
                    <li><a href="#Reference_functions_Animator_GetPreviousAnimation">Animator.GetPreviousAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_GetAnimationSpeed">Animator.GetAnimationSpeed</a></li>
                    <li><a href="#Reference_functions_Animator_GetAnimationTimer">Animator.GetAnimationTimer</a></li>
                    <li><a href="#Reference_functions_Animator_GetDuration">Animator.GetDuration</a></li>
                    <li><a href="#Reference_functions_Animator_GetFrameCount">Animator.GetFrameCount</a></li>
                    <li><a href="#Reference_functions_Animator_GetLoopIndex">Animator.GetLoopIndex</a></li>
                    <li><a href="#Reference_functions_Animator_SetSprite">Animator.SetSprite</a></li>
                    <li><a href="#Reference_functions_Animator_SetCurrentAnimation">Animator.SetCurrentAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_SetCurrentFrame">Animator.SetCurrentFrame</a></li>
                    <li><a href="#Reference_functions_Animator_SetAnimationSpeed">Animator.SetAnimationSpeed</a></li>
                    <li><a href="#Reference_functions_Animator_SetAnimationTimer">Animator.SetAnimationTimer</a></li>
                    <li><a href="#Reference_functions_Animator_SetDuration">Animator.SetDuration</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustCurrentAnimation">Animator.AdjustCurrentAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustCurrentFrame">Animator.AdjustCurrentFrame</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustAnimationSpeed">Animator.AdjustAnimationSpeed</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustAnimationTimer">Animator.AdjustAnimationTimer</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustDuration">Animator.AdjustDuration</a></li>
                </ul>
            </p>
            <p id="Reference_Application">
                <h2>Application</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Application_GetFPS">Application.GetFPS</a></li>
                    <li><a href="#Reference_functions_Application_GetKeyBind">Application.GetKeyBind</a></li>
                    <li><a href="#Reference_functions_Application_SetKeyBind">Application.SetKeyBind</a></li>
                    <li><a href="#Reference_functions_Application_Quit">Application.Quit</a></li>
                    <li><a href="#Reference_functions_Application_GetGameTitle">Application.GetGameTitle</a></li>
                    <li><a href="#Reference_functions_Application_GetGameTitleShort">Application.GetGameTitleShort</a></li>
                    <li><a href="#Reference_functions_Application_GetVersion">Application.GetVersion</a></li>
                    <li><a href="#Reference_functions_Application_GetDescription">Application.GetDescription</a></li>
                    <li><a href="#Reference_functions_Application_SetGameTitle">Application.SetGameTitle</a></li>
                    <li><a href="#Reference_functions_Application_SetGameTitleShort">Application.SetGameTitleShort</a></li>
                    <li><a href="#Reference_functions_Application_SetVersion">Application.SetVersion</a></li>
                    <li><a href="#Reference_functions_Application_SetDescription">Application.SetDescription</a></li>
                    <li><a href="#Reference_functions_Application_SetCursorVisible">Application.SetCursorVisible</a></li>
                    <li><a href="#Reference_functions_Application_GetCursorVisible">Application.GetCursorVisible</a></li>
                </ul>
            </p>
            <p id="Reference_Array">
                <h2>Array</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Array_Create">Array.Create</a></li>
                    <li><a href="#Reference_functions_Array_Length">Array.Length</a></li>
                    <li><a href="#Reference_functions_Array_Push">Array.Push</a></li>
                    <li><a href="#Reference_functions_Array_Pop">Array.Pop</a></li>
                    <li><a href="#Reference_functions_Array_Insert">Array.Insert</a></li>
                    <li><a href="#Reference_functions_Array_Erase">Array.Erase</a></li>
                    <li><a href="#Reference_functions_Array_Clear">Array.Clear</a></li>
                    <li><a href="#Reference_functions_Array_Shift">Array.Shift</a></li>
                    <li><a href="#Reference_functions_Array_SetAll">Array.SetAll</a></li>
                </ul>
            </p>
            <p id="Reference_Audio">
                <h2>Audio</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Audio_GetMasterVolume">Audio.GetMasterVolume</a></li>
                    <li><a href="#Reference_functions_Audio_GetMusicVolume">Audio.GetMusicVolume</a></li>
                    <li><a href="#Reference_functions_Audio_GetSoundVolume">Audio.GetSoundVolume</a></li>
                    <li><a href="#Reference_functions_Audio_SetMasterVolume">Audio.SetMasterVolume</a></li>
                    <li><a href="#Reference_functions_Audio_SetMusicVolume">Audio.SetMusicVolume</a></li>
                    <li><a href="#Reference_functions_Audio_SetSoundVolume">Audio.SetSoundVolume</a></li>
                </ul>
            </p>
            <p id="Reference_Controller">
                <h2>Controller</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Controller_GetCount">Controller.GetCount</a></li>
                    <li><a href="#Reference_functions_Controller_IsConnected">Controller.IsConnected</a></li>
                    <li><a href="#Reference_functions_Controller_IsXbox">Controller.IsXbox</a></li>
                    <li><a href="#Reference_functions_Controller_IsPlayStation">Controller.IsPlayStation</a></li>
                    <li><a href="#Reference_functions_Controller_IsJoyCon">Controller.IsJoyCon</a></li>
                    <li><a href="#Reference_functions_Controller_HasShareButton">Controller.HasShareButton</a></li>
                    <li><a href="#Reference_functions_Controller_HasMicrophoneButton">Controller.HasMicrophoneButton</a></li>
                    <li><a href="#Reference_functions_Controller_HasPaddles">Controller.HasPaddles</a></li>
                    <li><a href="#Reference_functions_Controller_GetButton">Controller.GetButton</a></li>
                    <li><a href="#Reference_functions_Controller_GetAxis">Controller.GetAxis</a></li>
                    <li><a href="#Reference_functions_Controller_GetType">Controller.GetType</a></li>
                    <li><a href="#Reference_functions_Controller_GetName">Controller.GetName</a></li>
                    <li><a href="#Reference_functions_Controller_SetPlayerIndex">Controller.SetPlayerIndex</a></li>
                    <li><a href="#Reference_functions_Controller_HasRumble">Controller.HasRumble</a></li>
                    <li><a href="#Reference_functions_Controller_IsRumbleActive">Controller.IsRumbleActive</a></li>
                    <li><a href="#Reference_functions_Controller_Rumble">Controller.Rumble</a></li>
                    <li><a href="#Reference_functions_Controller_StopRumble">Controller.StopRumble</a></li>
                    <li><a href="#Reference_functions_Controller_IsRumblePaused">Controller.IsRumblePaused</a></li>
                    <li><a href="#Reference_functions_Controller_SetRumblePaused">Controller.SetRumblePaused</a></li>
                    <li><a href="#Reference_functions_Controller_SetLargeMotorFrequency">Controller.SetLargeMotorFrequency</a></li>
                    <li><a href="#Reference_functions_Controller_SetSmallMotorFrequency">Controller.SetSmallMotorFrequency</a></li>
                </ul>
            </p>
            <p id="Reference_Date">
                <h2>Date</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Date_GetEpoch">Date.GetEpoch</a></li>
                    <li><a href="#Reference_functions_Date_GetWeekday">Date.GetWeekday</a></li>
                    <li><a href="#Reference_functions_Date_GetSecond">Date.GetSecond</a></li>
                    <li><a href="#Reference_functions_Date_GetMinute">Date.GetMinute</a></li>
                    <li><a href="#Reference_functions_Date_GetHour">Date.GetHour</a></li>
                    <li><a href="#Reference_functions_Date_GetTimeOfDay">Date.GetTimeOfDay</a></li>
                    <li><a href="#Reference_functions_Date_GetTicks">Date.GetTicks</a></li>
                </ul>
            </p>
            <p id="Reference_Device">
                <h2>Device</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Device_GetPlatform">Device.GetPlatform</a></li>
                    <li><a href="#Reference_functions_Device_IsPC">Device.IsPC</a></li>
                    <li><a href="#Reference_functions_Device_IsMobile">Device.IsMobile</a></li>
                </ul>
            </p>
            <p id="Reference_Directory">
                <h2>Directory</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Directory_Create">Directory.Create</a></li>
                    <li><a href="#Reference_functions_Directory_Exists">Directory.Exists</a></li>
                    <li><a href="#Reference_functions_Directory_GetFiles">Directory.GetFiles</a></li>
                    <li><a href="#Reference_functions_Directory_GetDirectories">Directory.GetDirectories</a></li>
                </ul>
            </p>
            <p id="Reference_Display">
                <h2>Display</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Display_GetWidth">Display.GetWidth</a></li>
                    <li><a href="#Reference_functions_Display_GetHeight">Display.GetHeight</a></li>
                </ul>
            </p>
            <p id="Reference_Draw">
                <h2>Draw</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Draw_Sprite">Draw.Sprite</a></li>
                    <li><a href="#Reference_functions_Draw_SpriteBasic">Draw.SpriteBasic</a></li>
                    <li><a href="#Reference_functions_Draw_Animator">Draw.Animator</a></li>
                    <li><a href="#Reference_functions_Draw_AnimatorBasic">Draw.AnimatorBasic</a></li>
                    <li><a href="#Reference_functions_Draw_SpritePart">Draw.SpritePart</a></li>
                    <li><a href="#Reference_functions_Draw_Image">Draw.Image</a></li>
                    <li><a href="#Reference_functions_Draw_ImagePart">Draw.ImagePart</a></li>
                    <li><a href="#Reference_functions_Draw_ImageSized">Draw.ImageSized</a></li>
                    <li><a href="#Reference_functions_Draw_ImagePartSized">Draw.ImagePartSized</a></li>
                    <li><a href="#Reference_functions_Draw_View">Draw.View</a></li>
                    <li><a href="#Reference_functions_Draw_ViewPart">Draw.ViewPart</a></li>
                    <li><a href="#Reference_functions_Draw_ViewSized">Draw.ViewSized</a></li>
                    <li><a href="#Reference_functions_Draw_ViewPartSized">Draw.ViewPartSized</a></li>
                    <li><a href="#Reference_functions_Draw_BindVertexBuffer">Draw.BindVertexBuffer</a></li>
                    <li><a href="#Reference_functions_Draw_UnbindVertexBuffer">Draw.UnbindVertexBuffer</a></li>
                    <li><a href="#Reference_functions_Draw_InitArrayBuffer">Draw.InitArrayBuffer</a></li>
                    <li><a href="#Reference_functions_Draw_SetArrayBufferDrawMode">Draw.SetArrayBufferDrawMode</a></li>
                    <li><a href="#Reference_functions_Draw_SetProjectionMatrix">Draw.SetProjectionMatrix</a></li>
                    <li><a href="#Reference_functions_Draw_SetViewMatrix">Draw.SetViewMatrix</a></li>
                    <li><a href="#Reference_functions_Draw_SetAmbientLighting">Draw.SetAmbientLighting</a></li>
                    <li><a href="#Reference_functions_Draw_SetDiffuseLighting">Draw.SetDiffuseLighting</a></li>
                    <li><a href="#Reference_functions_Draw_SetSpecularLighting">Draw.SetSpecularLighting</a></li>
                    <li><a href="#Reference_functions_Draw_SetFogDensity">Draw.SetFogDensity</a></li>
                    <li><a href="#Reference_functions_Draw_SetFogColor">Draw.SetFogColor</a></li>
                    <li><a href="#Reference_functions_Draw_SetClipPolygons">Draw.SetClipPolygons</a></li>
                    <li><a href="#Reference_functions_Draw_SetPointSize">Draw.SetPointSize</a></li>
                    <li><a href="#Reference_functions_Draw_BindArrayBuffer">Draw.BindArrayBuffer</a></li>
                    <li><a href="#Reference_functions_Draw_BindScene3D">Draw.BindScene3D</a></li>
                    <li><a href="#Reference_functions_Draw_Model">Draw.Model</a></li>
                    <li><a href="#Reference_functions_Draw_ModelSkinned">Draw.ModelSkinned</a></li>
                    <li><a href="#Reference_functions_Draw_ModelSimple">Draw.ModelSimple</a></li>
                    <li><a href="#Reference_functions_Draw_Triangle3D">Draw.Triangle3D</a></li>
                    <li><a href="#Reference_functions_Draw_Quad3D">Draw.Quad3D</a></li>
                    <li><a href="#Reference_functions_Draw_Sprite3D">Draw.Sprite3D</a></li>
                    <li><a href="#Reference_functions_Draw_SpritePart3D">Draw.SpritePart3D</a></li>
                    <li><a href="#Reference_functions_Draw_Image3D">Draw.Image3D</a></li>
                    <li><a href="#Reference_functions_Draw_ImagePart3D">Draw.ImagePart3D</a></li>
                    <li><a href="#Reference_functions_Draw_Tile3D">Draw.Tile3D</a></li>
                    <li><a href="#Reference_functions_Draw_TriangleTextured">Draw.TriangleTextured</a></li>
                    <li><a href="#Reference_functions_Draw_QuadTextured">Draw.QuadTextured</a></li>
                    <li><a href="#Reference_functions_Draw_SpritePoints">Draw.SpritePoints</a></li>
                    <li><a href="#Reference_functions_Draw_TilePoints">Draw.TilePoints</a></li>
                    <li><a href="#Reference_functions_Draw_SceneLayer3D">Draw.SceneLayer3D</a></li>
                    <li><a href="#Reference_functions_Draw_SceneLayerPart3D">Draw.SceneLayerPart3D</a></li>
                    <li><a href="#Reference_functions_Draw_VertexBuffer">Draw.VertexBuffer</a></li>
                    <li><a href="#Reference_functions_Draw_RenderArrayBuffer">Draw.RenderArrayBuffer</a></li>
                    <li><a href="#Reference_functions_Draw_RenderScene3D">Draw.RenderScene3D</a></li>
                    <li><a href="#Reference_functions_Draw_Video">Draw.Video</a></li>
                    <li><a href="#Reference_functions_Draw_VideoPart">Draw.VideoPart</a></li>
                    <li><a href="#Reference_functions_Draw_VideoSized">Draw.VideoSized</a></li>
                    <li><a href="#Reference_functions_Draw_VideoPartSized">Draw.VideoPartSized</a></li>
                    <li><a href="#Reference_functions_Draw_Tile">Draw.Tile</a></li>
                    <li><a href="#Reference_functions_Draw_Texture">Draw.Texture</a></li>
                    <li><a href="#Reference_functions_Draw_TextureSized">Draw.TextureSized</a></li>
                    <li><a href="#Reference_functions_Draw_TexturePart">Draw.TexturePart</a></li>
                    <li><a href="#Reference_functions_Draw_SetFont">Draw.SetFont</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextAlign">Draw.SetTextAlign</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextBaseline">Draw.SetTextBaseline</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextAdvance">Draw.SetTextAdvance</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextLineAscent">Draw.SetTextLineAscent</a></li>
                    <li><a href="#Reference_functions_Draw_MeasureText">Draw.MeasureText</a></li>
                    <li><a href="#Reference_functions_Draw_MeasureTextWrapped">Draw.MeasureTextWrapped</a></li>
                    <li><a href="#Reference_functions_Draw_Text">Draw.Text</a></li>
                    <li><a href="#Reference_functions_Draw_TextWrapped">Draw.TextWrapped</a></li>
                    <li><a href="#Reference_functions_Draw_TextEllipsis">Draw.TextEllipsis</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendColor">Draw.SetBlendColor</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextureBlend">Draw.SetTextureBlend</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendMode">Draw.SetBlendMode</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendFactor">Draw.SetBlendFactor</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendFactorExtended">Draw.SetBlendFactorExtended</a></li>
                    <li><a href="#Reference_functions_Draw_SetCompareColor">Draw.SetCompareColor</a></li>
                    <li><a href="#Reference_functions_Draw_SetTintColor">Draw.SetTintColor</a></li>
                    <li><a href="#Reference_functions_Draw_SetTintMode">Draw.SetTintMode</a></li>
                    <li><a href="#Reference_functions_Draw_UseTinting">Draw.UseTinting</a></li>
                    <li><a href="#Reference_functions_Draw_SetFilter">Draw.SetFilter</a></li>
                    <li><a href="#Reference_functions_Draw_Line">Draw.Line</a></li>
                    <li><a href="#Reference_functions_Draw_Circle">Draw.Circle</a></li>
                    <li><a href="#Reference_functions_Draw_Ellipse">Draw.Ellipse</a></li>
                    <li><a href="#Reference_functions_Draw_Triangle">Draw.Triangle</a></li>
                    <li><a href="#Reference_functions_Draw_TriangleBlend">Draw.TriangleBlend</a></li>
                    <li><a href="#Reference_functions_Draw_QuadBlend">Draw.QuadBlend</a></li>
                    <li><a href="#Reference_functions_Draw_Rectangle">Draw.Rectangle</a></li>
                    <li><a href="#Reference_functions_Draw_CircleStroke">Draw.CircleStroke</a></li>
                    <li><a href="#Reference_functions_Draw_EllipseStroke">Draw.EllipseStroke</a></li>
                    <li><a href="#Reference_functions_Draw_TriangleStroke">Draw.TriangleStroke</a></li>
                    <li><a href="#Reference_functions_Draw_RectangleStroke">Draw.RectangleStroke</a></li>
                    <li><a href="#Reference_functions_Draw_UseFillSmoothing">Draw.UseFillSmoothing</a></li>
                    <li><a href="#Reference_functions_Draw_UseStrokeSmoothing">Draw.UseStrokeSmoothing</a></li>
                    <li><a href="#Reference_functions_Draw_SetClip">Draw.SetClip</a></li>
                    <li><a href="#Reference_functions_Draw_ClearClip">Draw.ClearClip</a></li>
                    <li><a href="#Reference_functions_Draw_Save">Draw.Save</a></li>
                    <li><a href="#Reference_functions_Draw_Scale">Draw.Scale</a></li>
                    <li><a href="#Reference_functions_Draw_Rotate">Draw.Rotate</a></li>
                    <li><a href="#Reference_functions_Draw_Restore">Draw.Restore</a></li>
                    <li><a href="#Reference_functions_Draw_Translate">Draw.Translate</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextureTarget">Draw.SetTextureTarget</a></li>
                    <li><a href="#Reference_functions_Draw_Clear">Draw.Clear</a></li>
                    <li><a href="#Reference_functions_Draw_ResetTextureTarget">Draw.ResetTextureTarget</a></li>
                    <li><a href="#Reference_functions_Draw_UseSpriteDeform">Draw.UseSpriteDeform</a></li>
                    <li><a href="#Reference_functions_Draw_SetSpriteDeformLine">Draw.SetSpriteDeformLine</a></li>
                    <li><a href="#Reference_functions_Draw_UseDepthTesting">Draw.UseDepthTesting</a></li>
                    <li><a href="#Reference_functions_Draw_GetCurrentDrawGroup">Draw.GetCurrentDrawGroup</a></li>
                    <li><a href="#Reference_functions_Draw_CopyScreen">Draw.CopyScreen</a></li>
                </ul>
            </p>
            <p id="Reference_Ease">
                <h2>Ease</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Ease_InSine">Ease.InSine</a></li>
                    <li><a href="#Reference_functions_Ease_OutSine">Ease.OutSine</a></li>
                    <li><a href="#Reference_functions_Ease_InOutSine">Ease.InOutSine</a></li>
                    <li><a href="#Reference_functions_Ease_InQuad">Ease.InQuad</a></li>
                    <li><a href="#Reference_functions_Ease_OutQuad">Ease.OutQuad</a></li>
                    <li><a href="#Reference_functions_Ease_InOutQuad">Ease.InOutQuad</a></li>
                    <li><a href="#Reference_functions_Ease_InCubic">Ease.InCubic</a></li>
                    <li><a href="#Reference_functions_Ease_OutCubic">Ease.OutCubic</a></li>
                    <li><a href="#Reference_functions_Ease_InOutCubic">Ease.InOutCubic</a></li>
                    <li><a href="#Reference_functions_Ease_InQuart">Ease.InQuart</a></li>
                    <li><a href="#Reference_functions_Ease_OutQuart">Ease.OutQuart</a></li>
                    <li><a href="#Reference_functions_Ease_InOutQuart">Ease.InOutQuart</a></li>
                    <li><a href="#Reference_functions_Ease_InQuint">Ease.InQuint</a></li>
                    <li><a href="#Reference_functions_Ease_OutQuint">Ease.OutQuint</a></li>
                    <li><a href="#Reference_functions_Ease_InOutQuint">Ease.InOutQuint</a></li>
                    <li><a href="#Reference_functions_Ease_InExpo">Ease.InExpo</a></li>
                    <li><a href="#Reference_functions_Ease_OutExpo">Ease.OutExpo</a></li>
                    <li><a href="#Reference_functions_Ease_InOutExpo">Ease.InOutExpo</a></li>
                    <li><a href="#Reference_functions_Ease_InCirc">Ease.InCirc</a></li>
                    <li><a href="#Reference_functions_Ease_OutCirc">Ease.OutCirc</a></li>
                    <li><a href="#Reference_functions_Ease_InOutCirc">Ease.InOutCirc</a></li>
                    <li><a href="#Reference_functions_Ease_InBack">Ease.InBack</a></li>
                    <li><a href="#Reference_functions_Ease_OutBack">Ease.OutBack</a></li>
                    <li><a href="#Reference_functions_Ease_InOutBack">Ease.InOutBack</a></li>
                    <li><a href="#Reference_functions_Ease_InElastic">Ease.InElastic</a></li>
                    <li><a href="#Reference_functions_Ease_OutElastic">Ease.OutElastic</a></li>
                    <li><a href="#Reference_functions_Ease_InOutElastic">Ease.InOutElastic</a></li>
                    <li><a href="#Reference_functions_Ease_InBounce">Ease.InBounce</a></li>
                    <li><a href="#Reference_functions_Ease_OutBounce">Ease.OutBounce</a></li>
                    <li><a href="#Reference_functions_Ease_InOutBounce">Ease.InOutBounce</a></li>
                    <li><a href="#Reference_functions_Ease_Triangle">Ease.Triangle</a></li>
                </ul>
            </p>
            <p id="Reference_File">
                <h2>File</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_File_Exists">File.Exists</a></li>
                    <li><a href="#Reference_functions_File_ReadAllText">File.ReadAllText</a></li>
                    <li><a href="#Reference_functions_File_WriteAllText">File.WriteAllText</a></li>
                </ul>
            </p>
            <p id="Reference_HTTP">
                <h2>HTTP</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_HTTP_GetString">HTTP.GetString</a></li>
                    <li><a href="#Reference_functions_HTTP_GetToFile">HTTP.GetToFile</a></li>
                </ul>
            </p>
            <p id="Reference_Input">
                <h2>Input</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Input_GetMouseX">Input.GetMouseX</a></li>
                    <li><a href="#Reference_functions_Input_GetMouseY">Input.GetMouseY</a></li>
                    <li><a href="#Reference_functions_Input_IsMouseButtonDown">Input.IsMouseButtonDown</a></li>
                    <li><a href="#Reference_functions_Input_IsMouseButtonPressed">Input.IsMouseButtonPressed</a></li>
                    <li><a href="#Reference_functions_Input_IsMouseButtonReleased">Input.IsMouseButtonReleased</a></li>
                    <li><a href="#Reference_functions_Input_IsKeyDown">Input.IsKeyDown</a></li>
                    <li><a href="#Reference_functions_Input_IsKeyPressed">Input.IsKeyPressed</a></li>
                    <li><a href="#Reference_functions_Input_IsKeyReleased">Input.IsKeyReleased</a></li>
                    <li><a href="#Reference_functions_Input_GetControllerCount">Input.GetControllerCount</a></li>
                    <li><a href="#Reference_functions_Input_GetControllerAttached">Input.GetControllerAttached</a></li>
                    <li><a href="#Reference_functions_Input_GetControllerHat">Input.GetControllerHat</a></li>
                    <li><a href="#Reference_functions_Input_GetControllerAxis">Input.GetControllerAxis</a></li>
                    <li><a href="#Reference_functions_Input_GetControllerButton">Input.GetControllerButton</a></li>
                    <li><a href="#Reference_functions_Input_GetControllerName">Input.GetControllerName</a></li>
                    <li><a href="#Reference_functions_Input_GetKeyName">Input.GetKeyName</a></li>
                    <li><a href="#Reference_functions_Input_GetButtonName">Input.GetButtonName</a></li>
                    <li><a href="#Reference_functions_Input_GetAxisName">Input.GetAxisName</a></li>
                    <li><a href="#Reference_functions_Input_ParseKeyName">Input.ParseKeyName</a></li>
                    <li><a href="#Reference_functions_Input_ParseButtonName">Input.ParseButtonName</a></li>
                    <li><a href="#Reference_functions_Input_ParseAxisName">Input.ParseAxisName</a></li>
                </ul>
            </p>
            <p id="Reference_Instance">
                <h2>Instance</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Instance_Create">Instance.Create</a></li>
                    <li><a href="#Reference_functions_Instance_GetNth">Instance.GetNth</a></li>
                    <li><a href="#Reference_functions_Instance_IsClass">Instance.IsClass</a></li>
                    <li><a href="#Reference_functions_Instance_GetCount">Instance.GetCount</a></li>
                    <li><a href="#Reference_functions_Instance_GetNextInstance">Instance.GetNextInstance</a></li>
                    <li><a href="#Reference_functions_Instance_GetBySlotID">Instance.GetBySlotID</a></li>
                    <li><a href="#Reference_functions_Instance_DisableAutoAnimate">Instance.DisableAutoAnimate</a></li>
                    <li><a href="#Reference_functions_Instance_Copy">Instance.Copy</a></li>
                    <li><a href="#Reference_functions_Instance_ChangeClass">Instance.ChangeClass</a></li>
                </ul>
                <i>Instance methods:</i>
                <ul>
                    <li><a href="#Reference_methods_instance_SetAnimation">instance.SetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_ResetAnimation">instance.ResetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_Animate">instance.Animate</a></li>
                    <li><a href="#Reference_methods_instance_AddToRegistry">instance.AddToRegistry</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromRegistry">instance.RemoveFromRegistry</a></li>
                    <li><a href="#Reference_methods_instance_ApplyMotion">instance.ApplyMotion</a></li>
                    <li><a href="#Reference_methods_instance_InView">instance.InView</a></li>
                    <li><a href="#Reference_methods_instance_CollidedWithObject">instance.CollidedWithObject</a></li>
                    <li><a href="#Reference_methods_instance_GetHitboxFromSprite">instance.GetHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_GetHitboxFromSprite">instance.GetHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_CollideWithObject">instance.CollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_SolidCollideWithObject">instance.SolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_TopSolidCollideWithObject">instance.TopSolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_PropertyExists">instance.PropertyExists</a></li>
                    <li><a href="#Reference_methods_instance_PropertyGet">instance.PropertyGet</a></li>
                    <li><a href="#Reference_methods_instance_SetViewVisibility">instance.SetViewVisibility</a></li>
                    <li><a href="#Reference_methods_instance_SetViewOverride">instance.SetViewOverride</a></li>
                    <li><a href="#Reference_methods_instance_AddToDrawGroup">instance.AddToDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_IsInDrawGroup">instance.IsInDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromDrawGroup">instance.RemoveFromDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_PlaySound">instance.PlaySound</a></li>
                    <li><a href="#Reference_methods_instance_LoopSound">instance.LoopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopSound">instance.StopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopAllSounds">instance.StopAllSounds</a></li>
                </ul>
                <i>Instance fields:</i>
                <ul>
                    <li><a href="#Reference_fields_instance_X">instance.X</a></li>
                    <li><a href="#Reference_fields_instance_Y">instance.Y</a></li>
                    <li><a href="#Reference_fields_instance_Z">instance.Z</a></li>
                    <li><a href="#Reference_fields_instance_XSpeed">instance.XSpeed</a></li>
                    <li><a href="#Reference_fields_instance_YSpeed">instance.YSpeed</a></li>
                    <li><a href="#Reference_fields_instance_GroundSpeed">instance.GroundSpeed</a></li>
                    <li><a href="#Reference_fields_instance_Gravity">instance.Gravity</a></li>
                    <li><a href="#Reference_fields_instance_AutoPhysics">instance.AutoPhysics</a></li>
                    <li><a href="#Reference_fields_instance_Angle">instance.Angle</a></li>
                    <li><a href="#Reference_fields_instance_AngleMode">instance.AngleMode</a></li>
                    <li><a href="#Reference_fields_instance_Ground">instance.Ground</a></li>
                    <li><a href="#Reference_fields_instance_ScaleX">instance.ScaleX</a></li>
                    <li><a href="#Reference_fields_instance_ScaleY">instance.ScaleY</a></li>
                    <li><a href="#Reference_fields_instance_Rotation">instance.Rotation</a></li>
                    <li><a href="#Reference_fields_instance_Alpha">instance.Alpha</a></li>
                    <li><a href="#Reference_fields_instance_Priority">instance.Priority</a></li>
                    <li><a href="#Reference_fields_instance_Depth">instance.Depth</a></li>
                    <li><a href="#Reference_fields_instance_Sprite">instance.Sprite</a></li>
                    <li><a href="#Reference_fields_instance_CurrentAnimation">instance.CurrentAnimation</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrame">instance.CurrentFrame</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrameCount">instance.CurrentFrameCount</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeed">instance.AnimationSpeed</a></li>
                    <li><a href="#Reference_fields_instance_AnimationTimer">instance.AnimationTimer</a></li>
                    <li><a href="#Reference_fields_instance_AnimationFrameDuration">instance.AnimationFrameDuration</a></li>
                    <li><a href="#Reference_fields_instance_AnimationLoopIndex">instance.AnimationLoopIndex</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedMult">instance.AnimationSpeedMult</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedAdd">instance.AnimationSpeedAdd</a></li>
                    <li><a href="#Reference_fields_instance_AutoAnimate">instance.AutoAnimate</a></li>
                    <li><a href="#Reference_fields_instance_OnScreen">instance.OnScreen</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxW">instance.OnScreenHitboxW</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxH">instance.OnScreenHitboxH</a></li>
                    <li><a href="#Reference_fields_instance_ViewRenderFlag">instance.ViewRenderFlag</a></li>
                    <li><a href="#Reference_fields_instance_ViewOverrideFlag">instance.ViewOverrideFlag</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionW">instance.UpdateRegionW</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionH">instance.UpdateRegionH</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionW">instance.RenderRegionW</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionH">instance.RenderRegionH</a></li>
                    <li><a href="#Reference_fields_instance_HitboxW">instance.HitboxW</a></li>
                    <li><a href="#Reference_fields_instance_HitboxH">instance.HitboxH</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffX">instance.HitboxOffX</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffY">instance.HitboxOffY</a></li>
                    <li><a href="#Reference_fields_instance_FlipFlag">instance.FlipFlag</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_GroundVel">instance.GroundVel</a></li>
                    <li><a href="#Reference_fields_instance_Direction">instance.Direction</a></li>
                    <li><a href="#Reference_fields_instance_OnGround">instance.OnGround</a></li>
                    <li><a href="#Reference_fields_instance_SlotID">instance.SlotID</a></li>
                    <li><a href="#Reference_fields_instance_ZDepth">instance.ZDepth</a></li>
                    <li><a href="#Reference_fields_instance_CollisionLayers">instance.CollisionLayers</a></li>
                    <li><a href="#Reference_fields_instance_CollisionPlane">instance.CollisionPlane</a></li>
                    <li><a href="#Reference_fields_instance_CollisionMode">instance.CollisionMode</a></li>
                    <li><a href="#Reference_fields_instance_TileCollisions">instance.TileCollisions</a></li>
                    <li><a href="#Reference_fields_instance_Activity">instance.Activity</a></li>
                    <li><a href="#Reference_fields_instance_InRange">instance.InRange</a></li>
                    <li><a href="#Reference_fields_instance_SensorX">instance.SensorX</a></li>
                    <li><a href="#Reference_fields_instance_SensorY">instance.SensorY</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_Active">instance.Active</a></li>
                    <li><a href="#Reference_fields_instance_Pauseable">instance.Pauseable</a></li>
                    <li><a href="#Reference_fields_instance_Persistent">instance.Persistent</a></li>
                    <li><a href="#Reference_fields_instance_Interactable">instance.Interactable</a></li>
                    <li><a href="#Reference_fields_instance_Persistence">instance.Persistence</a></li>
                </ul>
            </p>
            <p id="Reference_JSON">
                <h2>JSON</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_JSON_Parse">JSON.Parse</a></li>
                    <li><a href="#Reference_functions_JSON_ToString">JSON.ToString</a></li>
                </ul>
            </p>
            <p id="Reference_Math">
                <h2>Math</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Math_Cos">Math.Cos</a></li>
                    <li><a href="#Reference_functions_Math_Sin">Math.Sin</a></li>
                    <li><a href="#Reference_functions_Math_Tan">Math.Tan</a></li>
                    <li><a href="#Reference_functions_Math_Acos">Math.Acos</a></li>
                    <li><a href="#Reference_functions_Math_Asin">Math.Asin</a></li>
                    <li><a href="#Reference_functions_Math_Atan">Math.Atan</a></li>
                    <li><a href="#Reference_functions_Math_Distance">Math.Distance</a></li>
                    <li><a href="#Reference_functions_Math_Direction">Math.Direction</a></li>
                    <li><a href="#Reference_functions_Math_Abs">Math.Abs</a></li>
                    <li><a href="#Reference_functions_Math_Min">Math.Min</a></li>
                    <li><a href="#Reference_functions_Math_Max">Math.Max</a></li>
                    <li><a href="#Reference_functions_Math_Clamp">Math.Clamp</a></li>
                    <li><a href="#Reference_functions_Math_Sign">Math.Sign</a></li>
                    <li><a href="#Reference_functions_Math_Random">Math.Random</a></li>
                    <li><a href="#Reference_functions_Math_RandomMax">Math.RandomMax</a></li>
                    <li><a href="#Reference_functions_Math_RandomRange">Math.RandomRange</a></li>
                    <li><a href="#Reference_functions_Math_GetRandSeed">Math.GetRandSeed</a></li>
                    <li><a href="#Reference_functions_Math_SetRandSeed">Math.SetRandSeed</a></li>
                    <li><a href="#Reference_functions_Math_RandomInteger">Math.RandomInteger</a></li>
                    <li><a href="#Reference_functions_Math_RandomIntegerSeeded">Math.RandomIntegerSeeded</a></li>
                    <li><a href="#Reference_functions_Math_Floor">Math.Floor</a></li>
                    <li><a href="#Reference_functions_Math_Ceil">Math.Ceil</a></li>
                    <li><a href="#Reference_functions_Math_Round">Math.Round</a></li>
                    <li><a href="#Reference_functions_Math_Sqrt">Math.Sqrt</a></li>
                    <li><a href="#Reference_functions_Math_Pow">Math.Pow</a></li>
                    <li><a href="#Reference_functions_Math_Exp">Math.Exp</a></li>
                    <li><a href="#Reference_functions_Math_ClearTrigLookupTables">Math.ClearTrigLookupTables</a></li>
                    <li><a href="#Reference_functions_Math_CalculateTrigAngles">Math.CalculateTrigAngles</a></li>
                    <li><a href="#Reference_functions_Math_Sin1024">Math.Sin1024</a></li>
                    <li><a href="#Reference_functions_Math_Cos1024">Math.Cos1024</a></li>
                    <li><a href="#Reference_functions_Math_Tan1024">Math.Tan1024</a></li>
                    <li><a href="#Reference_functions_Math_ASin1024">Math.ASin1024</a></li>
                    <li><a href="#Reference_functions_Math_ACos1024">Math.ACos1024</a></li>
                    <li><a href="#Reference_functions_Math_Cos512">Math.Cos512</a></li>
                    <li><a href="#Reference_functions_Math_Tan512">Math.Tan512</a></li>
                    <li><a href="#Reference_functions_Math_ASin512">Math.ASin512</a></li>
                    <li><a href="#Reference_functions_Math_ACos512">Math.ACos512</a></li>
                    <li><a href="#Reference_functions_Math_Cos256">Math.Cos256</a></li>
                    <li><a href="#Reference_functions_Math_Tan256">Math.Tan256</a></li>
                    <li><a href="#Reference_functions_Math_ASin256">Math.ASin256</a></li>
                    <li><a href="#Reference_functions_Math_ACos256">Math.ACos256</a></li>
                    <li><a href="#Reference_functions_Math_RadianToInteger">Math.RadianToInteger</a></li>
                    <li><a href="#Reference_functions_Math_IntegerToRadian">Math.IntegerToRadian</a></li>
                </ul>
            </p>
            <p id="Reference_Matrix">
                <h2>Matrix</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Matrix_Create">Matrix.Create</a></li>
                    <li><a href="#Reference_functions_Matrix_Identity">Matrix.Identity</a></li>
                    <li><a href="#Reference_functions_Matrix_Perspective">Matrix.Perspective</a></li>
                    <li><a href="#Reference_functions_Matrix_Copy">Matrix.Copy</a></li>
                    <li><a href="#Reference_functions_Matrix_Multiply">Matrix.Multiply</a></li>
                    <li><a href="#Reference_functions_Matrix_Translate">Matrix.Translate</a></li>
                    <li><a href="#Reference_functions_Matrix_Scale">Matrix.Scale</a></li>
                    <li><a href="#Reference_functions_Matrix_Rotate">Matrix.Rotate</a></li>
                    <li><a href="#Reference_functions_Matrix_Create256">Matrix.Create256</a></li>
                    <li><a href="#Reference_functions_Matrix_Identity256">Matrix.Identity256</a></li>
                    <li><a href="#Reference_functions_Matrix_Multiply256">Matrix.Multiply256</a></li>
                    <li><a href="#Reference_functions_Matrix_Translate256">Matrix.Translate256</a></li>
                    <li><a href="#Reference_functions_Matrix_Scale256">Matrix.Scale256</a></li>
                    <li><a href="#Reference_functions_Matrix_RotateX256">Matrix.RotateX256</a></li>
                    <li><a href="#Reference_functions_Matrix_RotateY256">Matrix.RotateY256</a></li>
                    <li><a href="#Reference_functions_Matrix_RotateZ256">Matrix.RotateZ256</a></li>
                    <li><a href="#Reference_functions_Matrix_Rotate256">Matrix.Rotate256</a></li>
                </ul>
            </p>
            <p id="Reference_Model">
                <h2>Model</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Model_GetVertexCount">Model.GetVertexCount</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationCount">Model.GetAnimationCount</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationName">Model.GetAnimationName</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationIndex">Model.GetAnimationIndex</a></li>
                    <li><a href="#Reference_functions_Model_GetFrameCount">Model.GetFrameCount</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationLength">Model.GetAnimationLength</a></li>
                    <li><a href="#Reference_functions_Model_HasMaterials">Model.HasMaterials</a></li>
                    <li><a href="#Reference_functions_Model_HasBones">Model.HasBones</a></li>
                    <li><a href="#Reference_functions_Model_CreateArmature">Model.CreateArmature</a></li>
                    <li><a href="#Reference_functions_Model_PoseArmature">Model.PoseArmature</a></li>
                    <li><a href="#Reference_functions_Model_ResetArmature">Model.ResetArmature</a></li>
                    <li><a href="#Reference_functions_Model_DeleteArmature">Model.DeleteArmature</a></li>
                </ul>
            </p>
            <p id="Reference_Music">
                <h2>Music</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Music_Play">Music.Play</a></li>
                    <li><a href="#Reference_functions_Music_PlayAtTime">Music.PlayAtTime</a></li>
                    <li><a href="#Reference_functions_Music_Stop">Music.Stop</a></li>
                    <li><a href="#Reference_functions_Music_StopWithFadeOut">Music.StopWithFadeOut</a></li>
                    <li><a href="#Reference_functions_Music_Pause">Music.Pause</a></li>
                    <li><a href="#Reference_functions_Music_Resume">Music.Resume</a></li>
                    <li><a href="#Reference_functions_Music_Clear">Music.Clear</a></li>
                    <li><a href="#Reference_functions_Music_Loop">Music.Loop</a></li>
                    <li><a href="#Reference_functions_Music_LoopAtTime">Music.LoopAtTime</a></li>
                    <li><a href="#Reference_functions_Music_IsPlaying">Music.IsPlaying</a></li>
                    <li><a href="#Reference_functions_Music_GetPosition">Music.GetPosition</a></li>
                    <li><a href="#Reference_functions_Music_Alter">Music.Alter</a></li>
                </ul>
            </p>
            <p id="Reference_Number">
                <h2>Number</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Number_ToString">Number.ToString</a></li>
                    <li><a href="#Reference_functions_Number_AsInteger">Number.AsInteger</a></li>
                    <li><a href="#Reference_functions_Number_AsDecimal">Number.AsDecimal</a></li>
                </ul>
            </p>
            <p id="Reference_Object">
                <h2>Object</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Object_Loaded">Object.Loaded</a></li>
                    <li><a href="#Reference_functions_Object_SetActivity">Object.SetActivity</a></li>
                    <li><a href="#Reference_functions_Object_GetActivity">Object.GetActivity</a></li>
                </ul>
            </p>
            <p id="Reference_Palette">
                <h2>Palette</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Palette_EnablePaletteUsage">Palette.EnablePaletteUsage</a></li>
                    <li><a href="#Reference_functions_Palette_LoadFromResource">Palette.LoadFromResource</a></li>
                    <li><a href="#Reference_functions_Palette_LoadFromImage">Palette.LoadFromImage</a></li>
                    <li><a href="#Reference_functions_Palette_GetColor">Palette.GetColor</a></li>
                    <li><a href="#Reference_functions_Palette_SetColor">Palette.SetColor</a></li>
                    <li><a href="#Reference_functions_Palette_MixPalettes">Palette.MixPalettes</a></li>
                    <li><a href="#Reference_functions_Palette_RotateColorsLeft">Palette.RotateColorsLeft</a></li>
                    <li><a href="#Reference_functions_Palette_RotateColorsRight">Palette.RotateColorsRight</a></li>
                    <li><a href="#Reference_functions_Palette_CopyColors">Palette.CopyColors</a></li>
                    <li><a href="#Reference_functions_Palette_SetPaletteIndexLines">Palette.SetPaletteIndexLines</a></li>
                </ul>
            </p>
            <p id="Reference_Resources">
                <h2>Resources</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Resources_LoadSprite">Resources.LoadSprite</a></li>
                    <li><a href="#Reference_functions_Resources_LoadImage">Resources.LoadImage</a></li>
                    <li><a href="#Reference_functions_Resources_LoadFont">Resources.LoadFont</a></li>
                    <li><a href="#Reference_functions_Resources_LoadModel">Resources.LoadModel</a></li>
                    <li><a href="#Reference_functions_Resources_LoadMusic">Resources.LoadMusic</a></li>
                    <li><a href="#Reference_functions_Resources_LoadSound">Resources.LoadSound</a></li>
                    <li><a href="#Reference_functions_Resources_LoadVideo">Resources.LoadVideo</a></li>
                    <li><a href="#Reference_functions_Resources_FileExists">Resources.FileExists</a></li>
                    <li><a href="#Reference_functions_Resources_ReadAllText">Resources.ReadAllText</a></li>
                </ul>
            </p>
            <p id="Reference_Scene">
                <h2>Scene</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Scene_ProcessObjectMovement">Scene.ProcessObjectMovement</a></li>
                    <li><a href="#Reference_functions_Scene_ObjectTileCollision">Scene.ObjectTileCollision</a></li>
                    <li><a href="#Reference_functions_Scene_ObjectTileGrip">Scene.ObjectTileGrip</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionTouch">Scene.CheckObjectCollisionTouch</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionCircle">Scene.CheckObjectCollisionCircle</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionBox">Scene.CheckObjectCollisionBox</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionPlatform">Scene.CheckObjectCollisionPlatform</a></li>
                    <li><a href="#Reference_functions_Scene_Load">Scene.Load</a></li>
                    <li><a href="#Reference_functions_Scene_LoadNoPersistency">Scene.LoadNoPersistency</a></li>
                    <li><a href="#Reference_functions_Scene_LoadPosition">Scene.LoadPosition</a></li>
                    <li><a href="#Reference_functions_Scene_LoadTileCollisions">Scene.LoadTileCollisions</a></li>
                    <li><a href="#Reference_functions_Scene_AreTileCollisionsLoaded">Scene.AreTileCollisionsLoaded</a></li>
                    <li><a href="#Reference_functions_Scene_AddTileset">Scene.AddTileset</a></li>
                    <li><a href="#Reference_functions_Scene_Restart">Scene.Restart</a></li>
                    <li><a href="#Reference_functions_Scene_PropertyExists">Scene.PropertyExists</a></li>
                    <li><a href="#Reference_functions_Scene_GetProperty">Scene.GetProperty</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerCount">Scene.GetLayerCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerIndex">Scene.GetLayerIndex</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerVisible">Scene.GetLayerVisible</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerOpacity">Scene.GetLayerOpacity</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerProperty">Scene.GetLayerProperty</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerExists">Scene.GetLayerExists</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDeformSplitLine">Scene.GetLayerDeformSplitLine</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDeformOffsetA">Scene.GetLayerDeformOffsetA</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDeformOffsetB">Scene.GetLayerDeformOffsetB</a></li>
                    <li><a href="#Reference_functions_Scene_LayerPropertyExists">Scene.LayerPropertyExists</a></li>
                    <li><a href="#Reference_functions_Scene_GetName">Scene.GetName</a></li>
                    <li><a href="#Reference_functions_Scene_GetWidth">Scene.GetWidth</a></li>
                    <li><a href="#Reference_functions_Scene_GetHeight">Scene.GetHeight</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerWidth">Scene.GetLayerWidth</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerHeight">Scene.GetLayerHeight</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerOffsetX">Scene.GetLayerOffsetX</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerOffsetY">Scene.GetLayerOffsetY</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDrawGroup">Scene.GetLayerDrawGroup</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetCount">Scene.GetTilesetCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetIndex">Scene.GetTilesetIndex</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetName">Scene.GetTilesetName</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetTileCount">Scene.GetTilesetTileCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetFirstTileID">Scene.GetTilesetFirstTileID</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileWidth">Scene.GetTileWidth</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileHeight">Scene.GetTileHeight</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileSize">Scene.GetTileSize</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileID">Scene.GetTileID</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileFlipX">Scene.GetTileFlipX</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileFlipY">Scene.GetTileFlipY</a></li>
                    <li><a href="#Reference_functions_Scene_GetDrawGroupCount">Scene.GetDrawGroupCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetDrawGroupEntityDepthSorting">Scene.GetDrawGroupEntityDepthSorting</a></li>
                    <li><a href="#Reference_functions_Scene_GetListPos">Scene.GetListPos</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentFolder">Scene.GetCurrentFolder</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentID">Scene.GetCurrentID</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentSpriteFolder">Scene.GetCurrentSpriteFolder</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentCategory">Scene.GetCurrentCategory</a></li>
                    <li><a href="#Reference_functions_Scene_GetActiveCategory">Scene.GetActiveCategory</a></li>
                    <li><a href="#Reference_functions_Scene_GetCategoryCount">Scene.GetCategoryCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetStageCount">Scene.GetStageCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetDebugMode">Scene.GetDebugMode</a></li>
                    <li><a href="#Reference_functions_Scene_GetInstanceCount">Scene.GetInstanceCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetStaticInstanceCount">Scene.GetStaticInstanceCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetDynamicInstanceCount">Scene.GetDynamicInstanceCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimationEnabled">Scene.GetTileAnimationEnabled</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequence">Scene.GetTileAnimSequence</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequenceDurations">Scene.GetTileAnimSequenceDurations</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequencePaused">Scene.GetTileAnimSequencePaused</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequenceSpeed">Scene.GetTileAnimSequenceSpeed</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequenceFrame">Scene.GetTileAnimSequenceFrame</a></li>
                    <li><a href="#Reference_functions_Scene_CheckValidScene">Scene.CheckValidScene</a></li>
                    <li><a href="#Reference_functions_Scene_CheckSceneFolder">Scene.CheckSceneFolder</a></li>
                    <li><a href="#Reference_functions_Scene_CheckSceneID">Scene.CheckSceneID</a></li>
                    <li><a href="#Reference_functions_Scene_IsPaused">Scene.IsPaused</a></li>
                    <li><a href="#Reference_functions_Scene_SetListPos">Scene.SetListPos</a></li>
                    <li><a href="#Reference_functions_Scene_SetActiveCategory">Scene.SetActiveCategory</a></li>
                    <li><a href="#Reference_functions_Scene_SetDebugMode">Scene.SetDebugMode</a></li>
                    <li><a href="#Reference_functions_Scene_SetScene">Scene.SetScene</a></li>
                    <li><a href="#Reference_functions_Scene_SetTile">Scene.SetTile</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileCollisionSides">Scene.SetTileCollisionSides</a></li>
                    <li><a href="#Reference_functions_Scene_SetPaused">Scene.SetPaused</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimationEnabled">Scene.SetTileAnimationEnabled</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequence">Scene.SetTileAnimSequence</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequencePaused">Scene.SetTileAnimSequencePaused</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequenceSpeed">Scene.SetTileAnimSequenceSpeed</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequenceFrame">Scene.SetTileAnimSequenceFrame</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerVisible">Scene.SetLayerVisible</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerCollidable">Scene.SetLayerCollidable</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerInternalSize">Scene.SetLayerInternalSize</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOffsetPosition">Scene.SetLayerOffsetPosition</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOffsetX">Scene.SetLayerOffsetX</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOffsetY">Scene.SetLayerOffsetY</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDrawGroup">Scene.SetLayerDrawGroup</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDrawBehavior">Scene.SetLayerDrawBehavior</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerRepeat">Scene.SetLayerRepeat</a></li>
                    <li><a href="#Reference_functions_Scene_SetDrawGroupEntityDepthSorting">Scene.SetDrawGroupEntityDepthSorting</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerBlend">Scene.SetLayerBlend</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOpacity">Scene.SetLayerOpacity</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerScroll">Scene.SetLayerScroll</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerSetParallaxLinesBegin">Scene.SetLayerSetParallaxLinesBegin</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerSetParallaxLines">Scene.SetLayerSetParallaxLines</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerSetParallaxLinesEnd">Scene.SetLayerSetParallaxLinesEnd</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerTileDeforms">Scene.SetLayerTileDeforms</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerTileDeformSplitLine">Scene.SetLayerTileDeformSplitLine</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerTileDeformOffsets">Scene.SetLayerTileDeformOffsets</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDeformOffsetA">Scene.SetLayerDeformOffsetA</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDeformOffsetB">Scene.SetLayerDeformOffsetB</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerCustomScanlineFunction">Scene.SetLayerCustomScanlineFunction</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileScanline">Scene.SetTileScanline</a></li>
                    <li><a href="#Reference_functions_Scene_SetObjectViewRender">Scene.SetObjectViewRender</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileViewRender">Scene.SetTileViewRender</a></li>
                </ul>
            </p>
            <p id="Reference_Scene3D">
                <h2>Scene3D</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Scene3D_Create">Scene3D.Create</a></li>
                    <li><a href="#Reference_functions_Scene3D_Delete">Scene3D.Delete</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetDrawMode">Scene3D.SetDrawMode</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFaceCullMode">Scene3D.SetFaceCullMode</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFieldOfView">Scene3D.SetFieldOfView</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFarClippingPlane">Scene3D.SetFarClippingPlane</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetNearClippingPlane">Scene3D.SetNearClippingPlane</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetViewMatrix">Scene3D.SetViewMatrix</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetCustomProjectionMatrix">Scene3D.SetCustomProjectionMatrix</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetAmbientLighting">Scene3D.SetAmbientLighting</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetDiffuseLighting">Scene3D.SetDiffuseLighting</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetSpecularLighting">Scene3D.SetSpecularLighting</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogEquation">Scene3D.SetFogEquation</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogStart">Scene3D.SetFogStart</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogEnd">Scene3D.SetFogEnd</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogDensity">Scene3D.SetFogDensity</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogColor">Scene3D.SetFogColor</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogSmoothness">Scene3D.SetFogSmoothness</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetPointSize">Scene3D.SetPointSize</a></li>
                    <li><a href="#Reference_functions_Scene3D_Clear">Scene3D.Clear</a></li>
                </ul>
            </p>
            <p id="Reference_Serializer">
                <h2>Serializer</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Serializer_WriteToStream">Serializer.WriteToStream</a></li>
                    <li><a href="#Reference_functions_Serializer_ReadFromStream">Serializer.ReadFromStream</a></li>
                </ul>
            </p>
            <p id="Reference_Settings">
                <h2>Settings</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Settings_Load">Settings.Load</a></li>
                    <li><a href="#Reference_functions_Settings_Save">Settings.Save</a></li>
                    <li><a href="#Reference_functions_Settings_SetFilename">Settings.SetFilename</a></li>
                    <li><a href="#Reference_functions_Settings_GetString">Settings.GetString</a></li>
                    <li><a href="#Reference_functions_Settings_GetNumber">Settings.GetNumber</a></li>
                    <li><a href="#Reference_functions_Settings_GetInteger">Settings.GetInteger</a></li>
                    <li><a href="#Reference_functions_Settings_GetBool">Settings.GetBool</a></li>
                    <li><a href="#Reference_functions_Settings_SetString">Settings.SetString</a></li>
                    <li><a href="#Reference_functions_Settings_SetNumber">Settings.SetNumber</a></li>
                    <li><a href="#Reference_functions_Settings_SetInteger">Settings.SetInteger</a></li>
                    <li><a href="#Reference_functions_Settings_SetBool">Settings.SetBool</a></li>
                    <li><a href="#Reference_functions_Settings_AddSection">Settings.AddSection</a></li>
                    <li><a href="#Reference_functions_Settings_RemoveSection">Settings.RemoveSection</a></li>
                    <li><a href="#Reference_functions_Settings_SectionExists">Settings.SectionExists</a></li>
                    <li><a href="#Reference_functions_Settings_GetSectionCount">Settings.GetSectionCount</a></li>
                    <li><a href="#Reference_functions_Settings_PropertyExists">Settings.PropertyExists</a></li>
                    <li><a href="#Reference_functions_Settings_RemoveProperty">Settings.RemoveProperty</a></li>
                    <li><a href="#Reference_functions_Settings_GetPropertyCount">Settings.GetPropertyCount</a></li>
                </ul>
            </p>
            <p id="Reference_Shader">
                <h2>Shader</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Shader_Set">Shader.Set</a></li>
                    <li><a href="#Reference_functions_Shader_Unset">Shader.Unset</a></li>
                </ul>
            </p>
            <p id="Reference_SocketClient">
                <h2>SocketClient</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_SocketClient_Open">SocketClient.Open</a></li>
                    <li><a href="#Reference_functions_SocketClient_Close">SocketClient.Close</a></li>
                    <li><a href="#Reference_functions_SocketClient_IsOpen">SocketClient.IsOpen</a></li>
                    <li><a href="#Reference_functions_SocketClient_Poll">SocketClient.Poll</a></li>
                    <li><a href="#Reference_functions_SocketClient_BytesToRead">SocketClient.BytesToRead</a></li>
                    <li><a href="#Reference_functions_SocketClient_ReadDecimal">SocketClient.ReadDecimal</a></li>
                    <li><a href="#Reference_functions_SocketClient_ReadInteger">SocketClient.ReadInteger</a></li>
                    <li><a href="#Reference_functions_SocketClient_ReadString">SocketClient.ReadString</a></li>
                    <li><a href="#Reference_functions_SocketClient_WriteDecimal">SocketClient.WriteDecimal</a></li>
                    <li><a href="#Reference_functions_SocketClient_WriteInteger">SocketClient.WriteInteger</a></li>
                    <li><a href="#Reference_functions_SocketClient_WriteString">SocketClient.WriteString</a></li>
                </ul>
            </p>
            <p id="Reference_Sound">
                <h2>Sound</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Sound_Play">Sound.Play</a></li>
                    <li><a href="#Reference_functions_Sound_Loop">Sound.Loop</a></li>
                    <li><a href="#Reference_functions_Sound_Stop">Sound.Stop</a></li>
                    <li><a href="#Reference_functions_Sound_Pause">Sound.Pause</a></li>
                    <li><a href="#Reference_functions_Sound_Resume">Sound.Resume</a></li>
                    <li><a href="#Reference_functions_Sound_StopAll">Sound.StopAll</a></li>
                    <li><a href="#Reference_functions_Sound_PauseAll">Sound.PauseAll</a></li>
                    <li><a href="#Reference_functions_Sound_ResumeAll">Sound.ResumeAll</a></li>
                    <li><a href="#Reference_functions_Sound_IsPlaying">Sound.IsPlaying</a></li>
                    <li><a href="#Reference_functions_Sound_PlayMultiple">Sound.PlayMultiple</a></li>
                    <li><a href="#Reference_functions_Sound_LoopMultiple">Sound.LoopMultiple</a></li>
                    <li><a href="#Reference_functions_Sound_PlayAtChannel">Sound.PlayAtChannel</a></li>
                    <li><a href="#Reference_functions_Sound_LoopAtChannel">Sound.LoopAtChannel</a></li>
                    <li><a href="#Reference_functions_Sound_StopChannel">Sound.StopChannel</a></li>
                    <li><a href="#Reference_functions_Sound_PauseChannel">Sound.PauseChannel</a></li>
                    <li><a href="#Reference_functions_Sound_ResumeChannel">Sound.ResumeChannel</a></li>
                    <li><a href="#Reference_functions_Sound_AlterChannel">Sound.AlterChannel</a></li>
                    <li><a href="#Reference_functions_Sound_GetFreeChannel">Sound.GetFreeChannel</a></li>
                    <li><a href="#Reference_functions_Sound_IsChannelFree">Sound.IsChannelFree</a></li>
                </ul>
            </p>
            <p id="Reference_Sprite">
                <h2>Sprite</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Sprite_GetAnimationCount">Sprite.GetAnimationCount</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameLoopIndex">Sprite.GetFrameLoopIndex</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameCount">Sprite.GetFrameCount</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameDuration">Sprite.GetFrameDuration</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameSpeed">Sprite.GetFrameSpeed</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameWidth">Sprite.GetFrameWidth</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameHeight">Sprite.GetFrameHeight</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameID">Sprite.GetFrameID</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameOffsetX">Sprite.GetFrameOffsetX</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameOffsetY">Sprite.GetFrameOffsetY</a></li>
                    <li><a href="#Reference_functions_Sprite_GetHitbox">Sprite.GetHitbox</a></li>
                </ul>
            </p>
            <p id="Reference_Stream">
                <h2>Stream</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Stream_FromResource">Stream.FromResource</a></li>
                    <li><a href="#Reference_functions_Stream_FromFile">Stream.FromFile</a></li>
                    <li><a href="#Reference_functions_Stream_Close">Stream.Close</a></li>
                    <li><a href="#Reference_functions_Stream_Seek">Stream.Seek</a></li>
                    <li><a href="#Reference_functions_Stream_SeekEnd">Stream.SeekEnd</a></li>
                    <li><a href="#Reference_functions_Stream_Skip">Stream.Skip</a></li>
                    <li><a href="#Reference_functions_Stream_Position">Stream.Position</a></li>
                    <li><a href="#Reference_functions_Stream_Length">Stream.Length</a></li>
                    <li><a href="#Reference_functions_Stream_ReadByte">Stream.ReadByte</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt16">Stream.ReadUInt16</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt16BE">Stream.ReadUInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt32">Stream.ReadUInt32</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt32BE">Stream.ReadUInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt64">Stream.ReadUInt64</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt16">Stream.ReadInt16</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt16BE">Stream.ReadInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt32">Stream.ReadInt32</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt32BE">Stream.ReadInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt64">Stream.ReadInt64</a></li>
                    <li><a href="#Reference_functions_Stream_ReadFloat">Stream.ReadFloat</a></li>
                    <li><a href="#Reference_functions_Stream_ReadString">Stream.ReadString</a></li>
                    <li><a href="#Reference_functions_Stream_ReadLine">Stream.ReadLine</a></li>
                    <li><a href="#Reference_functions_Stream_WriteByte">Stream.WriteByte</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt16">Stream.WriteUInt16</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt16BE">Stream.WriteUInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt32">Stream.WriteUInt32</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt32BE">Stream.WriteUInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt64">Stream.WriteUInt64</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt16">Stream.WriteInt16</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt16BE">Stream.WriteInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt32">Stream.WriteInt32</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt32BE">Stream.WriteInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt64">Stream.WriteInt64</a></li>
                    <li><a href="#Reference_functions_Stream_WriteFloat">Stream.WriteFloat</a></li>
                    <li><a href="#Reference_functions_Stream_WriteString">Stream.WriteString</a></li>
                </ul>
            </p>
            <p id="Reference_String">
                <h2>String</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_String_Split">String.Split</a></li>
                    <li><a href="#Reference_functions_String_CharAt">String.CharAt</a></li>
                    <li><a href="#Reference_functions_String_Length">String.Length</a></li>
                    <li><a href="#Reference_functions_String_Compare">String.Compare</a></li>
                    <li><a href="#Reference_functions_String_IndexOf">String.IndexOf</a></li>
                    <li><a href="#Reference_functions_String_Contains">String.Contains</a></li>
                    <li><a href="#Reference_functions_String_Substring">String.Substring</a></li>
                    <li><a href="#Reference_functions_String_ToUpperCase">String.ToUpperCase</a></li>
                    <li><a href="#Reference_functions_String_ToLowerCase">String.ToLowerCase</a></li>
                    <li><a href="#Reference_functions_String_LastIndexOf">String.LastIndexOf</a></li>
                    <li><a href="#Reference_functions_String_ParseInteger">String.ParseInteger</a></li>
                    <li><a href="#Reference_functions_String_ParseDecimal">String.ParseDecimal</a></li>
                </ul>
            </p>
            <p id="Reference_Texture">
                <h2>Texture</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Texture_Create">Texture.Create</a></li>
                    <li><a href="#Reference_functions_Texture_Copy">Texture.Copy</a></li>
                </ul>
            </p>
            <p id="Reference_Thread">
                <h2>Thread</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Thread_RunEvent">Thread.RunEvent</a></li>
                    <li><a href="#Reference_functions_Thread_Sleep">Thread.Sleep</a></li>
                </ul>
            </p>
            <p id="Reference_TileCollision">
                <h2>TileCollision</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_TileCollision_Point">TileCollision.Point</a></li>
                    <li><a href="#Reference_functions_TileCollision_PointExtended">TileCollision.PointExtended</a></li>
                    <li><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></li>
                </ul>
            </p>
            <p id="Reference_TileInfo">
                <h2>TileInfo</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_TileInfo_SetSpriteInfo">TileInfo.SetSpriteInfo</a></li>
                    <li><a href="#Reference_functions_TileInfo_IsEmptySpace">TileInfo.IsEmptySpace</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetEmptyTile">TileInfo.GetEmptyTile</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetCollision">TileInfo.GetCollision</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetAngle">TileInfo.GetAngle</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetBehaviorFlag">TileInfo.GetBehaviorFlag</a></li>
                    <li><a href="#Reference_functions_TileInfo_IsCeiling">TileInfo.IsCeiling</a></li>
                </ul>
            </p>
            <p id="Reference_Touch">
                <h2>Touch</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Touch_GetX">Touch.GetX</a></li>
                    <li><a href="#Reference_functions_Touch_GetY">Touch.GetY</a></li>
                    <li><a href="#Reference_functions_Touch_IsDown">Touch.IsDown</a></li>
                    <li><a href="#Reference_functions_Touch_IsPressed">Touch.IsPressed</a></li>
                    <li><a href="#Reference_functions_Touch_IsReleased">Touch.IsReleased</a></li>
                </ul>
            </p>
            <p id="Reference_VertexBuffer">
                <h2>VertexBuffer</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_VertexBuffer_Create">VertexBuffer.Create</a></li>
                    <li><a href="#Reference_functions_VertexBuffer_Resize">VertexBuffer.Resize</a></li>
                    <li><a href="#Reference_functions_VertexBuffer_Clear">VertexBuffer.Clear</a></li>
                    <li><a href="#Reference_functions_VertexBuffer_Delete">VertexBuffer.Delete</a></li>
                </ul>
            </p>
            <p id="Reference_Video">
                <h2>Video</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Video_Play">Video.Play</a></li>
                    <li><a href="#Reference_functions_Video_Pause">Video.Pause</a></li>
                    <li><a href="#Reference_functions_Video_Resume">Video.Resume</a></li>
                    <li><a href="#Reference_functions_Video_Stop">Video.Stop</a></li>
                    <li><a href="#Reference_functions_Video_Close">Video.Close</a></li>
                    <li><a href="#Reference_functions_Video_IsBuffering">Video.IsBuffering</a></li>
                    <li><a href="#Reference_functions_Video_IsPlaying">Video.IsPlaying</a></li>
                    <li><a href="#Reference_functions_Video_IsPaused">Video.IsPaused</a></li>
                    <li><a href="#Reference_functions_Video_SetPosition">Video.SetPosition</a></li>
                    <li><a href="#Reference_functions_Video_SetBufferDuration">Video.SetBufferDuration</a></li>
                    <li><a href="#Reference_functions_Video_SetTrackEnabled">Video.SetTrackEnabled</a></li>
                    <li><a href="#Reference_functions_Video_GetPosition">Video.GetPosition</a></li>
                    <li><a href="#Reference_functions_Video_GetDuration">Video.GetDuration</a></li>
                    <li><a href="#Reference_functions_Video_GetBufferDuration">Video.GetBufferDuration</a></li>
                    <li><a href="#Reference_functions_Video_GetBufferEnd">Video.GetBufferEnd</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackCount">Video.GetTrackCount</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackEnabled">Video.GetTrackEnabled</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackName">Video.GetTrackName</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackLanguage">Video.GetTrackLanguage</a></li>
                    <li><a href="#Reference_functions_Video_GetDefaultVideoTrack">Video.GetDefaultVideoTrack</a></li>
                    <li><a href="#Reference_functions_Video_GetDefaultAudioTrack">Video.GetDefaultAudioTrack</a></li>
                    <li><a href="#Reference_functions_Video_GetDefaultSubtitleTrack">Video.GetDefaultSubtitleTrack</a></li>
                    <li><a href="#Reference_functions_Video_GetWidth">Video.GetWidth</a></li>
                    <li><a href="#Reference_functions_Video_GetHeight">Video.GetHeight</a></li>
                </ul>
            </p>
            <p id="Reference_View">
                <h2>View</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_View_SetX">View.SetX</a></li>
                    <li><a href="#Reference_functions_View_SetY">View.SetY</a></li>
                    <li><a href="#Reference_functions_View_SetZ">View.SetZ</a></li>
                    <li><a href="#Reference_functions_View_SetPosition">View.SetPosition</a></li>
                    <li><a href="#Reference_functions_View_SetAngle">View.SetAngle</a></li>
                    <li><a href="#Reference_functions_View_SetSize">View.SetSize</a></li>
                    <li><a href="#Reference_functions_View_SetOutputX">View.SetOutputX</a></li>
                    <li><a href="#Reference_functions_View_SetOutputY">View.SetOutputY</a></li>
                    <li><a href="#Reference_functions_View_SetOutputPosition">View.SetOutputPosition</a></li>
                    <li><a href="#Reference_functions_View_SetOutputSize">View.SetOutputSize</a></li>
                    <li><a href="#Reference_functions_View_GetX">View.GetX</a></li>
                    <li><a href="#Reference_functions_View_GetY">View.GetY</a></li>
                    <li><a href="#Reference_functions_View_GetZ">View.GetZ</a></li>
                    <li><a href="#Reference_functions_View_GetWidth">View.GetWidth</a></li>
                    <li><a href="#Reference_functions_View_GetHeight">View.GetHeight</a></li>
                    <li><a href="#Reference_functions_View_GetCenterX">View.GetCenterX</a></li>
                    <li><a href="#Reference_functions_View_GetCenterY">View.GetCenterY</a></li>
                    <li><a href="#Reference_functions_View_IsUsingDrawTarget">View.IsUsingDrawTarget</a></li>
                    <li><a href="#Reference_functions_View_SetUseDrawTarget">View.SetUseDrawTarget</a></li>
                    <li><a href="#Reference_functions_View_GetDrawTarget">View.GetDrawTarget</a></li>
                    <li><a href="#Reference_functions_View_IsUsingSoftwareRenderer">View.IsUsingSoftwareRenderer</a></li>
                    <li><a href="#Reference_functions_View_SetUseSoftwareRenderer">View.SetUseSoftwareRenderer</a></li>
                    <li><a href="#Reference_functions_View_SetUsePerspective">View.SetUsePerspective</a></li>
                    <li><a href="#Reference_functions_View_IsEnabled">View.IsEnabled</a></li>
                    <li><a href="#Reference_functions_View_SetEnabled">View.SetEnabled</a></li>
                    <li><a href="#Reference_functions_View_IsVisible">View.IsVisible</a></li>
                    <li><a href="#Reference_functions_View_SetVisible">View.SetVisible</a></li>
                    <li><a href="#Reference_functions_View_SetFieldOfView">View.SetFieldOfView</a></li>
                    <li><a href="#Reference_functions_View_SetPriority">View.SetPriority</a></li>
                    <li><a href="#Reference_functions_View_GetPriority">View.GetPriority</a></li>
                    <li><a href="#Reference_functions_View_GetCurrent">View.GetCurrent</a></li>
                    <li><a href="#Reference_functions_View_GetCount">View.GetCount</a></li>
                    <li><a href="#Reference_functions_View_GetActiveCount">View.GetActiveCount</a></li>
                    <li><a href="#Reference_functions_View_CheckOnScreen">View.CheckOnScreen</a></li>
                    <li><a href="#Reference_functions_View_CheckPosOnScreen">View.CheckPosOnScreen</a></li>
                    <li><a href="#Reference_functions_View_SetScene">View.SetScene</a></li>
                </ul>
            </p>
            <p id="Reference_Window">
                <h2>Window</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Window_SetSize">Window.SetSize</a></li>
                    <li><a href="#Reference_functions_Window_SetFullscreen">Window.SetFullscreen</a></li>
                    <li><a href="#Reference_functions_Window_SetBorderless">Window.SetBorderless</a></li>
                    <li><a href="#Reference_functions_Window_SetVSync">Window.SetVSync</a></li>
                    <li><a href="#Reference_functions_Window_SetPosition">Window.SetPosition</a></li>
                    <li><a href="#Reference_functions_Window_SetPositionCentered">Window.SetPositionCentered</a></li>
                    <li><a href="#Reference_functions_Window_SetTitle">Window.SetTitle</a></li>
                    <li><a href="#Reference_functions_Window_GetWidth">Window.GetWidth</a></li>
                    <li><a href="#Reference_functions_Window_GetHeight">Window.GetHeight</a></li>
                    <li><a href="#Reference_functions_Window_GetFullscreen">Window.GetFullscreen</a></li>
                    <li><a href="#Reference_functions_Window_IsResizeable">Window.IsResizeable</a></li>
                </ul>
            </p>
            <p id="Reference_XML">
                <h2>XML</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_XML_Parse">XML.Parse</a></li>
                </ul>
            </p>
        <h3>Instance methods</h3>
            <p id="Reference_Instance">
                <h2>Instance</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Instance_Create">Instance.Create</a></li>
                    <li><a href="#Reference_functions_Instance_GetNth">Instance.GetNth</a></li>
                    <li><a href="#Reference_functions_Instance_IsClass">Instance.IsClass</a></li>
                    <li><a href="#Reference_functions_Instance_GetCount">Instance.GetCount</a></li>
                    <li><a href="#Reference_functions_Instance_GetNextInstance">Instance.GetNextInstance</a></li>
                    <li><a href="#Reference_functions_Instance_GetBySlotID">Instance.GetBySlotID</a></li>
                    <li><a href="#Reference_functions_Instance_DisableAutoAnimate">Instance.DisableAutoAnimate</a></li>
                    <li><a href="#Reference_functions_Instance_Copy">Instance.Copy</a></li>
                    <li><a href="#Reference_functions_Instance_ChangeClass">Instance.ChangeClass</a></li>
                </ul>
                <i>Instance methods:</i>
                <ul>
                    <li><a href="#Reference_methods_instance_SetAnimation">instance.SetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_ResetAnimation">instance.ResetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_Animate">instance.Animate</a></li>
                    <li><a href="#Reference_methods_instance_AddToRegistry">instance.AddToRegistry</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromRegistry">instance.RemoveFromRegistry</a></li>
                    <li><a href="#Reference_methods_instance_ApplyMotion">instance.ApplyMotion</a></li>
                    <li><a href="#Reference_methods_instance_InView">instance.InView</a></li>
                    <li><a href="#Reference_methods_instance_CollidedWithObject">instance.CollidedWithObject</a></li>
                    <li><a href="#Reference_methods_instance_GetHitboxFromSprite">instance.GetHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_GetHitboxFromSprite">instance.GetHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_CollideWithObject">instance.CollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_SolidCollideWithObject">instance.SolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_TopSolidCollideWithObject">instance.TopSolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_PropertyExists">instance.PropertyExists</a></li>
                    <li><a href="#Reference_methods_instance_PropertyGet">instance.PropertyGet</a></li>
                    <li><a href="#Reference_methods_instance_SetViewVisibility">instance.SetViewVisibility</a></li>
                    <li><a href="#Reference_methods_instance_SetViewOverride">instance.SetViewOverride</a></li>
                    <li><a href="#Reference_methods_instance_AddToDrawGroup">instance.AddToDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_IsInDrawGroup">instance.IsInDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromDrawGroup">instance.RemoveFromDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_PlaySound">instance.PlaySound</a></li>
                    <li><a href="#Reference_methods_instance_LoopSound">instance.LoopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopSound">instance.StopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopAllSounds">instance.StopAllSounds</a></li>
                </ul>
                <i>Instance fields:</i>
                <ul>
                    <li><a href="#Reference_fields_instance_X">instance.X</a></li>
                    <li><a href="#Reference_fields_instance_Y">instance.Y</a></li>
                    <li><a href="#Reference_fields_instance_Z">instance.Z</a></li>
                    <li><a href="#Reference_fields_instance_XSpeed">instance.XSpeed</a></li>
                    <li><a href="#Reference_fields_instance_YSpeed">instance.YSpeed</a></li>
                    <li><a href="#Reference_fields_instance_GroundSpeed">instance.GroundSpeed</a></li>
                    <li><a href="#Reference_fields_instance_Gravity">instance.Gravity</a></li>
                    <li><a href="#Reference_fields_instance_AutoPhysics">instance.AutoPhysics</a></li>
                    <li><a href="#Reference_fields_instance_Angle">instance.Angle</a></li>
                    <li><a href="#Reference_fields_instance_AngleMode">instance.AngleMode</a></li>
                    <li><a href="#Reference_fields_instance_Ground">instance.Ground</a></li>
                    <li><a href="#Reference_fields_instance_ScaleX">instance.ScaleX</a></li>
                    <li><a href="#Reference_fields_instance_ScaleY">instance.ScaleY</a></li>
                    <li><a href="#Reference_fields_instance_Rotation">instance.Rotation</a></li>
                    <li><a href="#Reference_fields_instance_Alpha">instance.Alpha</a></li>
                    <li><a href="#Reference_fields_instance_Priority">instance.Priority</a></li>
                    <li><a href="#Reference_fields_instance_Depth">instance.Depth</a></li>
                    <li><a href="#Reference_fields_instance_Sprite">instance.Sprite</a></li>
                    <li><a href="#Reference_fields_instance_CurrentAnimation">instance.CurrentAnimation</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrame">instance.CurrentFrame</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrameCount">instance.CurrentFrameCount</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeed">instance.AnimationSpeed</a></li>
                    <li><a href="#Reference_fields_instance_AnimationTimer">instance.AnimationTimer</a></li>
                    <li><a href="#Reference_fields_instance_AnimationFrameDuration">instance.AnimationFrameDuration</a></li>
                    <li><a href="#Reference_fields_instance_AnimationLoopIndex">instance.AnimationLoopIndex</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedMult">instance.AnimationSpeedMult</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedAdd">instance.AnimationSpeedAdd</a></li>
                    <li><a href="#Reference_fields_instance_AutoAnimate">instance.AutoAnimate</a></li>
                    <li><a href="#Reference_fields_instance_OnScreen">instance.OnScreen</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxW">instance.OnScreenHitboxW</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxH">instance.OnScreenHitboxH</a></li>
                    <li><a href="#Reference_fields_instance_ViewRenderFlag">instance.ViewRenderFlag</a></li>
                    <li><a href="#Reference_fields_instance_ViewOverrideFlag">instance.ViewOverrideFlag</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionW">instance.UpdateRegionW</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionH">instance.UpdateRegionH</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionW">instance.RenderRegionW</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionH">instance.RenderRegionH</a></li>
                    <li><a href="#Reference_fields_instance_HitboxW">instance.HitboxW</a></li>
                    <li><a href="#Reference_fields_instance_HitboxH">instance.HitboxH</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffX">instance.HitboxOffX</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffY">instance.HitboxOffY</a></li>
                    <li><a href="#Reference_fields_instance_FlipFlag">instance.FlipFlag</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_GroundVel">instance.GroundVel</a></li>
                    <li><a href="#Reference_fields_instance_Direction">instance.Direction</a></li>
                    <li><a href="#Reference_fields_instance_OnGround">instance.OnGround</a></li>
                    <li><a href="#Reference_fields_instance_SlotID">instance.SlotID</a></li>
                    <li><a href="#Reference_fields_instance_ZDepth">instance.ZDepth</a></li>
                    <li><a href="#Reference_fields_instance_CollisionLayers">instance.CollisionLayers</a></li>
                    <li><a href="#Reference_fields_instance_CollisionPlane">instance.CollisionPlane</a></li>
                    <li><a href="#Reference_fields_instance_CollisionMode">instance.CollisionMode</a></li>
                    <li><a href="#Reference_fields_instance_TileCollisions">instance.TileCollisions</a></li>
                    <li><a href="#Reference_fields_instance_Activity">instance.Activity</a></li>
                    <li><a href="#Reference_fields_instance_InRange">instance.InRange</a></li>
                    <li><a href="#Reference_fields_instance_SensorX">instance.SensorX</a></li>
                    <li><a href="#Reference_fields_instance_SensorY">instance.SensorY</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_Active">instance.Active</a></li>
                    <li><a href="#Reference_fields_instance_Pauseable">instance.Pauseable</a></li>
                    <li><a href="#Reference_fields_instance_Persistent">instance.Persistent</a></li>
                    <li><a href="#Reference_fields_instance_Interactable">instance.Interactable</a></li>
                    <li><a href="#Reference_fields_instance_Persistence">instance.Persistence</a></li>
                </ul>
            </p>
        <h3>Enums</h3>
            <p id="Reference_ACTIVE_*">
                <h2><code>ACTIVE_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_ACTIVE_NEVER">ACTIVE_NEVER</a></li>
                    <li><a href="#Reference_enums_ACTIVE_ALWAYS">ACTIVE_ALWAYS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_NORMAL">ACTIVE_NORMAL</a></li>
                    <li><a href="#Reference_enums_ACTIVE_PAUSED">ACTIVE_PAUSED</a></li>
                    <li><a href="#Reference_enums_ACTIVE_BOUNDS">ACTIVE_BOUNDS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_XBOUNDS">ACTIVE_XBOUNDS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_YBOUNDS">ACTIVE_YBOUNDS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_RBOUNDS">ACTIVE_RBOUNDS</a></li>
                </ul>
            </p>
            <p id="Reference_Axis_*">
                <h2><code>Axis_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Axis_LEFTX">Axis_LEFTX</a></li>
                    <li><a href="#Reference_enums_Axis_LEFTY">Axis_LEFTY</a></li>
                    <li><a href="#Reference_enums_Axis_RIGHTX">Axis_RIGHTX</a></li>
                    <li><a href="#Reference_enums_Axis_RIGHTY">Axis_RIGHTY</a></li>
                    <li><a href="#Reference_enums_Axis_TRIGGERLEFT">Axis_TRIGGERLEFT</a></li>
                    <li><a href="#Reference_enums_Axis_TRIGGERRIGHT">Axis_TRIGGERRIGHT</a></li>
                </ul>
            </p>
            <p id="Reference_BlendFactor_*">
                <h2><code>BlendFactor_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_BlendFactor_ZERO">BlendFactor_ZERO</a></li>
                    <li><a href="#Reference_enums_BlendFactor_ONE">BlendFactor_ONE</a></li>
                    <li><a href="#Reference_enums_BlendFactor_SRC_COLOR">BlendFactor_SRC_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_SRC_COLOR">BlendFactor_INV_SRC_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_SRC_ALPHA">BlendFactor_SRC_ALPHA</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_SRC_ALPHA">BlendFactor_INV_SRC_ALPHA</a></li>
                    <li><a href="#Reference_enums_BlendFactor_DST_COLOR">BlendFactor_DST_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_DST_COLOR">BlendFactor_INV_DST_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_DST_ALPHA">BlendFactor_DST_ALPHA</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_DST_ALPHA">BlendFactor_INV_DST_ALPHA</a></li>
                </ul>
            </p>
            <p id="Reference_BlendMode_*">
                <h2><code>BlendMode_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_BlendMode_NORMAL">BlendMode_NORMAL</a></li>
                    <li><a href="#Reference_enums_BlendMode_ADD">BlendMode_ADD</a></li>
                    <li><a href="#Reference_enums_BlendMode_SUBTRACT">BlendMode_SUBTRACT</a></li>
                    <li><a href="#Reference_enums_BlendMode_MAX">BlendMode_MAX</a></li>
                    <li><a href="#Reference_enums_BlendMode_MATCH_EQUAL">BlendMode_MATCH_EQUAL</a></li>
                    <li><a href="#Reference_enums_BlendMode_MATCH_NOT_EQUAL">BlendMode_MATCH_NOT_EQUAL</a></li>
                </ul>
            </p>
            <p id="Reference_Button_*">
                <h2><code>Button_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Button_A">Button_A</a></li>
                    <li><a href="#Reference_enums_Button_B">Button_B</a></li>
                    <li><a href="#Reference_enums_Button_X">Button_X</a></li>
                    <li><a href="#Reference_enums_Button_Y">Button_Y</a></li>
                    <li><a href="#Reference_enums_Button_BACK">Button_BACK</a></li>
                    <li><a href="#Reference_enums_Button_GUIDE">Button_GUIDE</a></li>
                    <li><a href="#Reference_enums_Button_START">Button_START</a></li>
                    <li><a href="#Reference_enums_Button_LEFTSTICK">Button_LEFTSTICK</a></li>
                    <li><a href="#Reference_enums_Button_RIGHTSTICK">Button_RIGHTSTICK</a></li>
                    <li><a href="#Reference_enums_Button_LEFTSHOULDER">Button_LEFTSHOULDER</a></li>
                    <li><a href="#Reference_enums_Button_RIGHTSHOULDER">Button_RIGHTSHOULDER</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_UP">Button_DPAD_UP</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_DOWN">Button_DPAD_DOWN</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_LEFT">Button_DPAD_LEFT</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_RIGHT">Button_DPAD_RIGHT</a></li>
                    <li><a href="#Reference_enums_Button_SHARE">Button_SHARE</a></li>
                    <li><a href="#Reference_enums_Button_MICROPHONE">Button_MICROPHONE</a></li>
                    <li><a href="#Reference_enums_Button_TOUCHPAD">Button_TOUCHPAD</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE1">Button_PADDLE1</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE2">Button_PADDLE2</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE3">Button_PADDLE3</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE4">Button_PADDLE4</a></li>
                    <li><a href="#Reference_enums_Button_MISC1">Button_MISC1</a></li>
                </ul>
            </p>
            <p id="Reference_CMODE_*">
                <h2><code>CMODE_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_CMODE_FLOOR">CMODE_FLOOR</a></li>
                    <li><a href="#Reference_enums_CMODE_LWALL">CMODE_LWALL</a></li>
                    <li><a href="#Reference_enums_CMODE_ROOF">CMODE_ROOF</a></li>
                    <li><a href="#Reference_enums_CMODE_RWALL">CMODE_RWALL</a></li>
                </ul>
            </p>
            <p id="Reference_C_*">
                <h2><code>C_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_C_NONE">C_NONE</a></li>
                    <li><a href="#Reference_enums_C_TOP">C_TOP</a></li>
                    <li><a href="#Reference_enums_C_LEFT">C_LEFT</a></li>
                    <li><a href="#Reference_enums_C_RIGHT">C_RIGHT</a></li>
                    <li><a href="#Reference_enums_C_BOTTOM">C_BOTTOM</a></li>
                </ul>
            </p>
            <p id="Reference_Controller_*">
                <h2><code>Controller_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Controller_Xbox360">Controller_Xbox360</a></li>
                    <li><a href="#Reference_enums_Controller_XboxOne">Controller_XboxOne</a></li>
                    <li><a href="#Reference_enums_Controller_XboxSeriesXS">Controller_XboxSeriesXS</a></li>
                    <li><a href="#Reference_enums_Controller_XboxElite">Controller_XboxElite</a></li>
                    <li><a href="#Reference_enums_Controller_PS3">Controller_PS3</a></li>
                    <li><a href="#Reference_enums_Controller_PS4">Controller_PS4</a></li>
                    <li><a href="#Reference_enums_Controller_PS5">Controller_PS5</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchJoyConPair">Controller_SwitchJoyConPair</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchJoyConLeft">Controller_SwitchJoyConLeft</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchJoyConRight">Controller_SwitchJoyConRight</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchPro">Controller_SwitchPro</a></li>
                    <li><a href="#Reference_enums_Controller_Stadia">Controller_Stadia</a></li>
                    <li><a href="#Reference_enums_Controller_AmazonLuna">Controller_AmazonLuna</a></li>
                    <li><a href="#Reference_enums_Controller_NvidiaShield">Controller_NvidiaShield</a></li>
                    <li><a href="#Reference_enums_Controller_Unknown">Controller_Unknown</a></li>
                </ul>
            </p>
            <p id="Reference_DrawBehavior_*">
                <h2><code>DrawBehavior_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_DrawBehavior_HorizontalParallax">DrawBehavior_HorizontalParallax</a></li>
                    <li><a href="#Reference_enums_DrawBehavior_VerticalParallax">DrawBehavior_VerticalParallax</a></li>
                    <li><a href="#Reference_enums_DrawBehavior_CustomTileScanLines">DrawBehavior_CustomTileScanLines</a></li>
                </ul>
            </p>
            <p id="Reference_DrawMode_*">
                <h2><code>DrawMode_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></li>
                    <li><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></li>
                    <li><a href="#Reference_enums_DrawMode_POINTS">DrawMode_POINTS</a></li>
                    <li><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></li>
                    <li><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></li>
                    <li><a href="#Reference_enums_DrawMode_TEXTURED">DrawMode_TEXTURED</a></li>
                    <li><a href="#Reference_enums_DrawMode_AFFINE">DrawMode_AFFINE</a></li>
                    <li><a href="#Reference_enums_DrawMode_DEPTH_TEST">DrawMode_DEPTH_TEST</a></li>
                    <li><a href="#Reference_enums_DrawMode_FOG">DrawMode_FOG</a></li>
                    <li><a href="#Reference_enums_DrawMode_ORTHOGRAPHIC">DrawMode_ORTHOGRAPHIC</a></li>
                    <li><a href="#Reference_enums_DrawMode_LINES_FLAT">DrawMode_LINES_FLAT</a></li>
                    <li><a href="#Reference_enums_DrawMode_LINES_SMOOTH">DrawMode_LINES_SMOOTH</a></li>
                    <li><a href="#Reference_enums_DrawMode_POLYGONS_FLAT">DrawMode_POLYGONS_FLAT</a></li>
                    <li><a href="#Reference_enums_DrawMode_POLYGONS_SMOOTH">DrawMode_POLYGONS_SMOOTH</a></li>
                    <li><a href="#Reference_enums_DrawMode_PrimitiveMask">DrawMode_PrimitiveMask</a></li>
                    <li><a href="#Reference_enums_DrawMode_LightingMask">DrawMode_LightingMask</a></li>
                    <li><a href="#Reference_enums_DrawMode_FillTypeMask">DrawMode_FillTypeMask</a></li>
                    <li><a href="#Reference_enums_DrawMode_FlagsMask">DrawMode_FlagsMask</a></li>
                </ul>
            </p>
            <p id="Reference_FLIP_*">
                <h2><code>FLIP_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FLIP_NONE">FLIP_NONE</a></li>
                    <li><a href="#Reference_enums_FLIP_X">FLIP_X</a></li>
                    <li><a href="#Reference_enums_FLIP_Y">FLIP_Y</a></li>
                    <li><a href="#Reference_enums_FLIP_XY">FLIP_XY</a></li>
                </ul>
            </p>
            <p id="Reference_FaceCull_*">
                <h2><code>FaceCull_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FaceCull_None">FaceCull_None</a></li>
                    <li><a href="#Reference_enums_FaceCull_Back">FaceCull_Back</a></li>
                    <li><a href="#Reference_enums_FaceCull_Front">FaceCull_Front</a></li>
                </ul>
            </p>
            <p id="Reference_FileStream_*">
                <h2><code>FileStream_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FileStream_READ_ACCESS">FileStream_READ_ACCESS</a></li>
                    <li><a href="#Reference_enums_FileStream_WRITE_ACCESS">FileStream_WRITE_ACCESS</a></li>
                    <li><a href="#Reference_enums_FileStream_APPEND_ACCESS">FileStream_APPEND_ACCESS</a></li>
                </ul>
            </p>
            <p id="Reference_Filter_*">
                <h2><code>Filter_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Filter_NONE">Filter_NONE</a></li>
                    <li><a href="#Reference_enums_Filter_BLACK_AND_WHITE">Filter_BLACK_AND_WHITE</a></li>
                    <li><a href="#Reference_enums_Filter_INVERT">Filter_INVERT</a></li>
                </ul>
            </p>
            <p id="Reference_FogEquation_*">
                <h2><code>FogEquation_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FogEquation_Linear">FogEquation_Linear</a></li>
                    <li><a href="#Reference_enums_FogEquation_Exp">FogEquation_Exp</a></li>
                </ul>
            </p>
            <p id="Reference_KeyBind_*">
                <h2><code>KeyBind_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_KeyBind_Fullscreen">KeyBind_Fullscreen</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevRestartApp">KeyBind_DevRestartApp</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevRestartScene">KeyBind_DevRestartScene</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevRecompile">KeyBind_DevRecompile</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevPerfSnapshot">KeyBind_DevPerfSnapshot</a></li>
                    <li><a href="#Reference_enums_KeyBind_Fullscreen">KeyBind_Fullscreen</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevFastForward">KeyBind_DevFastForward</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevFrameStepper">KeyBind_DevFrameStepper</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevStepFrame">KeyBind_DevStepFrame</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevTileCol">KeyBind_DevTileCol</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevObjectRegions">KeyBind_DevObjectRegions</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevQuit">KeyBind_DevQuit</a></li>
                </ul>
            </p>
            <p id="Reference_Persistence_*">
                <h2><code>Persistence_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Persistence_NONE">Persistence_NONE</a></li>
                    <li><a href="#Reference_enums_Persistence_SCENE">Persistence_SCENE</a></li>
                    <li><a href="#Reference_enums_Persistence_GAME">Persistence_GAME</a></li>
                </ul>
            </p>
            <p id="Reference_Platform_*">
                <h2><code>Platform_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Platform_Windows">Platform_Windows</a></li>
                    <li><a href="#Reference_enums_Platform_MacOS">Platform_MacOS</a></li>
                    <li><a href="#Reference_enums_Platform_Linux">Platform_Linux</a></li>
                    <li><a href="#Reference_enums_Platform_Switch">Platform_Switch</a></li>
                    <li><a href="#Reference_enums_Platform_PlayStation">Platform_PlayStation</a></li>
                    <li><a href="#Reference_enums_Platform_Xbox">Platform_Xbox</a></li>
                    <li><a href="#Reference_enums_Platform_Android">Platform_Android</a></li>
                    <li><a href="#Reference_enums_Platform_iOS">Platform_iOS</a></li>
                    <li><a href="#Reference_enums_Platform_Unknown">Platform_Unknown</a></li>
                </ul>
            </p>
            <p id="Reference_SCOPE_*">
                <h2><code>SCOPE_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_SCOPE_SCENE">SCOPE_SCENE</a></li>
                    <li><a href="#Reference_enums_SCOPE_GAME">SCOPE_GAME</a></li>
                </ul>
            </p>
            <p id="Reference_SensorDirection_*">
                <h2><code>SensorDirection_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_SensorDirection_Down">SensorDirection_Down</a></li>
                    <li><a href="#Reference_enums_SensorDirection_Right">SensorDirection_Right</a></li>
                    <li><a href="#Reference_enums_SensorDirection_Up">SensorDirection_Up</a></li>
                    <li><a href="#Reference_enums_SensorDirection_Left">SensorDirection_Left</a></li>
                </ul>
            </p>
            <p id="Reference_TILECOLLISION_*">
                <h2><code>TILECOLLISION_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_TILECOLLISION_NONE">TILECOLLISION_NONE</a></li>
                    <li><a href="#Reference_enums_TILECOLLISION_DOWN">TILECOLLISION_DOWN</a></li>
                    <li><a href="#Reference_enums_TILECOLLISION_UP">TILECOLLISION_UP</a></li>
                </ul>
            </p>
            <p id="Reference_TintMode_*">
                <h2><code>TintMode_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_TintMode_SRC_NORMAL">TintMode_SRC_NORMAL</a></li>
                    <li><a href="#Reference_enums_TintMode_DST_NORMAL">TintMode_DST_NORMAL</a></li>
                    <li><a href="#Reference_enums_TintMode_SRC_BLEND">TintMode_SRC_BLEND</a></li>
                    <li><a href="#Reference_enums_TintMode_DST_BLEND">TintMode_DST_BLEND</a></li>
                </ul>
            </p>
        <h3>Constants</h3>
        <h3>Globals</h3>
        <hr/>
        <h3>Class methods</h3>
        <p id="Reference_functions_Animator_Create">
        <h2 style="margin-bottom: 8px;">Animator.Create</h2>
        <code>Animator.Create()</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a new animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Animator.</div>
        </p>
        <p id="Reference_functions_Animator_SetAnimation">
        <h2 style="margin-bottom: 8px;">Animator.SetAnimation</h2>
        <code>Animator.SetAnimation(animator, sprite, animationID, frameID, forceApply)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current animation and frame of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        <li>sprite (Integer): The index of the sprite.</li>
        <li>animationID (Integer): The animator's changed animation ID.</li>
        <li>frameID (Integer): The animator's changed frame ID.</li>
        <li>forceApply (Boolean): Whether to force the animation to go back to the frame if the animation is the same as the current animation.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_Animate">
        <h2 style="margin-bottom: 8px;">Animator.Animate</h2>
        <code>Animator.Animate(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Animates an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_GetSprite">
        <h2 style="margin-bottom: 8px;">Animator.GetSprite</h2>
        <code>Animator.GetSprite(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the sprite index of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetCurrentAnimation">
        <h2 style="margin-bottom: 8px;">Animator.GetCurrentAnimation</h2>
        <code>Animator.GetCurrentAnimation(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current animation value of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetCurrentFrame">
        <h2 style="margin-bottom: 8px;">Animator.GetCurrentFrame</h2>
        <code>Animator.GetCurrentFrame(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current animation value of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetHitbox">
        <h2 style="margin-bottom: 8px;">Animator.GetHitbox</h2>
        <code>Animator.GetHitbox(animator, hitboxID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the hitbox of an animation and frame of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        <li>hitboxID (Integer): The index number of the hitbox.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a reference value to a hitbox array.</div>
        </p>
        <p id="Reference_functions_Animator_GetPreviousAnimation">
        <h2 style="margin-bottom: 8px;">Animator.GetPreviousAnimation</h2>
        <code>Animator.GetPreviousAnimation(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the previous animation value of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetAnimationSpeed">
        <h2 style="margin-bottom: 8px;">Animator.GetAnimationSpeed</h2>
        <code>Animator.GetAnimationSpeed(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the animation speed of an animator's current animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetAnimationTimer">
        <h2 style="margin-bottom: 8px;">Animator.GetAnimationTimer</h2>
        <code>Animator.GetAnimationTimer(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the animation timer of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetDuration">
        <h2 style="margin-bottom: 8px;">Animator.GetDuration</h2>
        <code>Animator.GetDuration(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame duration of an animator's current frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetFrameCount">
        <h2 style="margin-bottom: 8px;">Animator.GetFrameCount</h2>
        <code>Animator.GetFrameCount(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame count of an animator's current animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetLoopIndex">
        <h2 style="margin-bottom: 8px;">Animator.GetLoopIndex</h2>
        <code>Animator.GetLoopIndex(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the loop index of an animator's current animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_SetSprite">
        <h2 style="margin-bottom: 8px;">Animator.SetSprite</h2>
        <code>Animator.SetSprite(animator, animationID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sprite index of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationID (Integer): The animator's changed animation ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetCurrentAnimation">
        <h2 style="margin-bottom: 8px;">Animator.SetCurrentAnimation</h2>
        <code>Animator.SetCurrentAnimation(animator, animationID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current animation of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationID (Integer): The animator's changed animation ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetCurrentFrame">
        <h2 style="margin-bottom: 8px;">Animator.SetCurrentFrame</h2>
        <code>Animator.SetCurrentFrame(animator, frameID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current frame of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>frameID (Integer): The animator's changed frame ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetAnimationSpeed">
        <h2 style="margin-bottom: 8px;">Animator.SetAnimationSpeed</h2>
        <code>Animator.SetAnimationSpeed(animator, animationSpeed)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the animation speed of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationSpeed (Integer): The animator's changed animation speed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetAnimationTimer">
        <h2 style="margin-bottom: 8px;">Animator.SetAnimationTimer</h2>
        <code>Animator.SetAnimationTimer(animator, animationTimer)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the animation timer of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationTimer (Integer): The animator's changed animation timer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetDuration">
        <h2 style="margin-bottom: 8px;">Animator.SetDuration</h2>
        <code>Animator.SetDuration(animator, duration)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the frame duration of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>duration (Integer): The animator's changed duration.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustCurrentAnimation">
        <h2 style="margin-bottom: 8px;">Animator.AdjustCurrentAnimation</h2>
        <code>Animator.AdjustCurrentAnimation(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the current animation of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's animation ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustCurrentFrame">
        <h2 style="margin-bottom: 8px;">Animator.AdjustCurrentFrame</h2>
        <code>Animator.AdjustCurrentFrame(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the current frame of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's frame ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustAnimationSpeed">
        <h2 style="margin-bottom: 8px;">Animator.AdjustAnimationSpeed</h2>
        <code>Animator.AdjustAnimationSpeed(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the animation speed of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's animation speed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustAnimationTimer">
        <h2 style="margin-bottom: 8px;">Animator.AdjustAnimationTimer</h2>
        <code>Animator.AdjustAnimationTimer(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the animation timer of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's animation timer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustDuration">
        <h2 style="margin-bottom: 8px;">Animator.AdjustDuration</h2>
        <code>Animator.AdjustDuration(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the duration of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's duration.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_GetFPS">
        <h2 style="margin-bottom: 8px;">Application.GetFPS</h2>
        <code>Application.GetFPS()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current FPS.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Application_GetKeyBind">
        <h2 style="margin-bottom: 8px;">Application.GetKeyBind</h2>
        <code>Application.GetKeyBind(keyBind)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a <a href="#Reference_KeyBind_*">keybind</a>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyBind (Integer): The <a href="#Reference_KeyBind_*">keybind</a>.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the key ID of the keybind.</div>
        </p>
        <p id="Reference_functions_Application_SetKeyBind">
        <h2 style="margin-bottom: 8px;">Application.SetKeyBind</h2>
        <code>Application.SetKeyBind(keyBind, keyID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a <a href="#Reference_KeyBind_*">keybind</a>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyBind (Integer): The <a href="#Reference_KeyBind_*">keybind</a>.</li>
        <li>keyID (Integer): The key ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_Quit">
        <h2 style="margin-bottom: 8px;">Application.Quit</h2>
        <code>Application.Quit()</code>
        <div style="margin-top: 8px; font-size: 14px;">Closes the application.</div>
        </p>
        <p id="Reference_functions_Application_GetGameTitle">
        <h2 style="margin-bottom: 8px;">Application.GetGameTitle</h2>
        <code>Application.GetGameTitle()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the game title of the application.</div>
        </p>
        <p id="Reference_functions_Application_GetGameTitleShort">
        <h2 style="margin-bottom: 8px;">Application.GetGameTitleShort</h2>
        <code>Application.GetGameTitleShort()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the short game title of the application.</div>
        </p>
        <p id="Reference_functions_Application_GetVersion">
        <h2 style="margin-bottom: 8px;">Application.GetVersion</h2>
        <code>Application.GetVersion()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the version of the application.</div>
        </p>
        <p id="Reference_functions_Application_GetDescription">
        <h2 style="margin-bottom: 8px;">Application.GetDescription</h2>
        <code>Application.GetDescription()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the description of the application.</div>
        </p>
        <p id="Reference_functions_Application_SetGameTitle">
        <h2 style="margin-bottom: 8px;">Application.SetGameTitle</h2>
        <code>Application.SetGameTitle(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the game title of the application.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Game title.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetGameTitleShort">
        <h2 style="margin-bottom: 8px;">Application.SetGameTitleShort</h2>
        <code>Application.SetGameTitleShort(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the short game title of the application.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Short game title.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetVersion">
        <h2 style="margin-bottom: 8px;">Application.SetVersion</h2>
        <code>Application.SetVersion(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the version of the application.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Game version.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetDescription">
        <h2 style="margin-bottom: 8px;">Application.SetDescription</h2>
        <code>Application.SetDescription(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the description of the application.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Game description.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetCursorVisible">
        <h2 style="margin-bottom: 8px;">Application.SetCursorVisible</h2>
        <code>Application.SetCursorVisible(cursorVisible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the visibility of the cursor.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>cursorVisible (Boolean): Whether or not the cursor is visible.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_GetCursorVisible">
        <h2 style="margin-bottom: 8px;">Application.GetCursorVisible</h2>
        <code>Application.GetCursorVisible()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the visibility of the cursor.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether ot not the cursor is visible.</div>
        </p>
        <p id="Reference_functions_Array_Create">
        <h2 style="margin-bottom: 8px;">Array.Create</h2>
        <code>Array.Create(size[, initialValue])</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>size (Integer): Size of the array.</li>
        <li>initialValue (Value): Initial value to set the array elements to.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">A reference value to the array.</div>
        </p>
        <p id="Reference_functions_Array_Length">
        <h2 style="margin-bottom: 8px;">Array.Length</h2>
        <code>Array.Length(array)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the length of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to get the length of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Length of the array.</div>
        </p>
        <p id="Reference_functions_Array_Push">
        <h2 style="margin-bottom: 8px;">Array.Push</h2>
        <code>Array.Push(array, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds a value to the end of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to get the length of.</li>
        <li>value (Value): Value to add to the array.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Pop">
        <h2 style="margin-bottom: 8px;">Array.Pop</h2>
        <code>Array.Pop(array)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the value at the end of an array, and removes it.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to get the length of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The value from the end of the array.</div>
        </p>
        <p id="Reference_functions_Array_Insert">
        <h2 style="margin-bottom: 8px;">Array.Insert</h2>
        <code>Array.Insert(array, index, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Inserts a value at an index of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to insert value.</li>
        <li>index (Integer): Index to insert value.</li>
        <li>value (Value): Value to insert.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Erase">
        <h2 style="margin-bottom: 8px;">Array.Erase</h2>
        <code>Array.Erase(array, index)</code>
        <div style="margin-top: 8px; font-size: 14px;">Erases a value at an index of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to erase value.</li>
        <li>index (Integer): Index to erase value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Clear">
        <h2 style="margin-bottom: 8px;">Array.Clear</h2>
        <code>Array.Clear(array)</code>
        <div style="margin-top: 8px; font-size: 14px;">Clears an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to clear.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Shift">
        <h2 style="margin-bottom: 8px;">Array.Shift</h2>
        <code>Array.Shift(array, toRight)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rotates the array in the desired direction.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to shift.</li>
        <li>toRight (Boolean): Whether to rotate the array to the right or not (left.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_SetAll">
        <h2 style="margin-bottom: 8px;">Array.SetAll</h2>
        <code>Array.SetAll(array, startIndex, endIndex, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets values in the array from startIndex to endIndex (includes the value at endIndex.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to set values to.</li>
        <li>startIndex (Integer): Index of value to start setting. (-1 for first index)</li>
        <li>endIndex (Integer): Index of value to end setting. (-1 for last index)</li>
        <li>value (Value): Value to set to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Audio_GetMasterVolume">
        <h2 style="margin-bottom: 8px;">Audio.GetMasterVolume</h2>
        <code>Audio.GetMasterVolume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the master volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The master volume, from 0 to 100.</div>
        </p>
        <p id="Reference_functions_Audio_GetMusicVolume">
        <h2 style="margin-bottom: 8px;">Audio.GetMusicVolume</h2>
        <code>Audio.GetMusicVolume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the music volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The music volume, from 0 to 100.</div>
        </p>
        <p id="Reference_functions_Audio_GetSoundVolume">
        <h2 style="margin-bottom: 8px;">Audio.GetSoundVolume</h2>
        <code>Audio.GetSoundVolume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the sound effect volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The sound effect volume, from 0 to 100.</div>
        </p>
        <p id="Reference_functions_Audio_SetMasterVolume">
        <h2 style="margin-bottom: 8px;">Audio.SetMasterVolume</h2>
        <code>Audio.SetMasterVolume(volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the master volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>volume (Integer): The master volume, from 0 to 100.</li>
        </ul>
        </p>
        <p id="Reference_functions_Audio_SetMusicVolume">
        <h2 style="margin-bottom: 8px;">Audio.SetMusicVolume</h2>
        <code>Audio.SetMusicVolume(volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the music volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>volume (Integer): The music volume, from 0 to 100.</li>
        </ul>
        </p>
        <p id="Reference_functions_Audio_SetSoundVolume">
        <h2 style="margin-bottom: 8px;">Audio.SetSoundVolume</h2>
        <code>Audio.SetSoundVolume(volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sound effect volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>volume (Integer): The sound effect volume, from 0 to 100.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_GetCount">
        <h2 style="margin-bottom: 8px;">Controller.GetCount</h2>
        <code>Controller.GetCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of connected controllers in the device.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of connected controllers in the device.</div>
        </p>
        <p id="Reference_functions_Controller_IsConnected">
        <h2 style="margin-bottom: 8px;">Controller.IsConnected</h2>
        <code>Controller.IsConnected(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is connected.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is connected.</div>
        </p>
        <p id="Reference_functions_Controller_IsXbox">
        <h2 style="margin-bottom: 8px;">Controller.IsXbox</h2>
        <code>Controller.IsXbox(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is an Xbox controller.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is an Xbox controller.</div>
        </p>
        <p id="Reference_functions_Controller_IsPlayStation">
        <h2 style="margin-bottom: 8px;">Controller.IsPlayStation</h2>
        <code>Controller.IsPlayStation(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is a PlayStation controller.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is a PlayStation controller.</div>
        </p>
        <p id="Reference_functions_Controller_IsJoyCon">
        <h2 style="margin-bottom: 8px;">Controller.IsJoyCon</h2>
        <code>Controller.IsJoyCon(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is a Nintendo Switch Joy-Con L or R.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is a Nintendo Switch Joy-Con L or R.</div>
        </p>
        <p id="Reference_functions_Controller_HasShareButton">
        <h2 style="margin-bottom: 8px;">Controller.HasShareButton</h2>
        <code>Controller.HasShareButton(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index has a Share or Capture button.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index has a Share or Capture button.</div>
        </p>
        <p id="Reference_functions_Controller_HasMicrophoneButton">
        <h2 style="margin-bottom: 8px;">Controller.HasMicrophoneButton</h2>
        <code>Controller.HasMicrophoneButton(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index has a Microphone button.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index has a Microphone button.</div>
        </p>
        <p id="Reference_functions_Controller_HasPaddles">
        <h2 style="margin-bottom: 8px;">Controller.HasPaddles</h2>
        <code>Controller.HasPaddles(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index has paddles.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index has paddles.</div>
        </p>
        <p id="Reference_functions_Controller_GetButton">
        <h2 style="margin-bottom: 8px;">Controller.GetButton</h2>
        <code>Controller.GetButton(controllerIndex, buttonIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Button_*">button</a> value from the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>buttonIndex (Integer): Index of the <a href="#Reference_Button_*">button</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the button value from the controller at the index.</div>
        </p>
        <p id="Reference_functions_Controller_GetAxis">
        <h2 style="margin-bottom: 8px;">Controller.GetAxis</h2>
        <code>Controller.GetAxis(controllerIndex, axisIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Axis_*">axis</a> value from the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>axisIndex (Integer): Index of the <a href="#Reference_Axis_*">axis</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the axis value from the controller at the index.</div>
        </p>
        <p id="Reference_functions_Controller_GetType">
        <h2 style="margin-bottom: 8px;">Controller.GetType</h2>
        <code>Controller.GetType(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Controller_*">type of the controller</a> at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the <a href="#Reference_Controller_*">type of the controller</a> at the index.</div>
        </p>
        <p id="Reference_functions_Controller_GetName">
        <h2 style="margin-bottom: 8px;">Controller.GetName</h2>
        <code>Controller.GetName(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the controller at the index.</div>
        </p>
        <p id="Reference_functions_Controller_SetPlayerIndex">
        <h2 style="margin-bottom: 8px;">Controller.SetPlayerIndex</h2>
        <code>Controller.SetPlayerIndex(controllerIndex, playerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the player index of the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        <li>playerIndex (Integer): The player index. Use <code>-1</code> to disable the controller's LEDs.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_HasRumble">
        <h2 style="margin-bottom: 8px;">Controller.HasRumble</h2>
        <code>Controller.HasRumble(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the controller at the index supports rumble.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the controller at the index supports rumble, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_functions_Controller_IsRumbleActive">
        <h2 style="margin-bottom: 8px;">Controller.IsRumbleActive</h2>
        <code>Controller.IsRumbleActive(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if rumble is active for the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if rumble is active for the controller at the index, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_functions_Controller_Rumble">
        <h2 style="margin-bottom: 8px;">Controller.Rumble</h2>
        <code>Controller.Rumble(controllerIndex, largeMotorFrequency, smallMotorFrequency, duration)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rumbles a controller.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to rumble.</li>
        <li>largeMotorFrequency (Number): Frequency of the large motor. (0.0 - 1.0)</li>
        <li>smallMotorFrequency (Number): Frequency of the small motor. (0.0 - 1.0)</li>
        <li>duration (Integer): Duration in milliseconds. Use <code>0</code> for infinite duration.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_StopRumble">
        <h2 style="margin-bottom: 8px;">Controller.StopRumble</h2>
        <code>Controller.StopRumble(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops controller haptics.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to stop.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_IsRumblePaused">
        <h2 style="margin-bottom: 8px;">Controller.IsRumblePaused</h2>
        <code>Controller.IsRumblePaused(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if rumble is paused for the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if rumble is paused for the controller at the index, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_functions_Controller_SetRumblePaused">
        <h2 style="margin-bottom: 8px;">Controller.SetRumblePaused</h2>
        <code>Controller.SetRumblePaused(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses or unpauses rumble for the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_SetLargeMotorFrequency">
        <h2 style="margin-bottom: 8px;">Controller.SetLargeMotorFrequency</h2>
        <code>Controller.SetLargeMotorFrequency(controllerIndex, frequency)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the frequency of a controller's large motor.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        <li>frequency (Number): Frequency of the large motor.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_SetSmallMotorFrequency">
        <h2 style="margin-bottom: 8px;">Controller.SetSmallMotorFrequency</h2>
        <code>Controller.SetSmallMotorFrequency(controllerIndex, frequency)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the frequency of a controller's small motor.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        <li>frequency (Number): Frequency of the small motor.</li>
        </ul>
        </p>
        <p id="Reference_functions_Date_GetEpoch">
        <h2 style="margin-bottom: 8px;">Date.GetEpoch</h2>
        <code>Date.GetEpoch()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of seconds from 1 January 1970, 0:00 UTC.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The amount of seconds from epoch.</div>
        </p>
        <p id="Reference_functions_Date_GetWeekday">
        <h2 style="margin-bottom: 8px;">Date.GetWeekday</h2>
        <code>Date.GetWeekday()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current day of the week, starting from 1 January 1970, 0:00 UTC.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The day of the week (0-6 corresponding to Sunday-Saturday).</div>
        </p>
        <p id="Reference_functions_Date_GetSecond">
        <h2 style="margin-bottom: 8px;">Date.GetSecond</h2>
        <code>Date.GetSecond()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the second of the current minute.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The second of the minute (from 0 to 59).</div>
        </p>
        <p id="Reference_functions_Date_GetMinute">
        <h2 style="margin-bottom: 8px;">Date.GetMinute</h2>
        <code>Date.GetMinute()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the minute of the current hour.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The minute of the hour (from 0 to 59).</div>
        </p>
        <p id="Reference_functions_Date_GetHour">
        <h2 style="margin-bottom: 8px;">Date.GetHour</h2>
        <code>Date.GetHour()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the hour of the current day.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The hour of the day (from 0 to 23).</div>
        </p>
        <p id="Reference_functions_Date_GetTimeOfDay">
        <h2 style="margin-bottom: 8px;">Date.GetTimeOfDay</h2>
        <code>Date.GetTimeOfDay()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the current time of the day (Morning, Midday, Evening, Night).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The time of day based on the current hour.</div>
        </p>
        <p id="Reference_functions_Date_GetTicks">
        <h2 style="margin-bottom: 8px;">Date.GetTicks</h2>
        <code>Date.GetTicks()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the milliseconds since the application began running.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns milliseconds since the application began running.</div>
        </p>
        <p id="Reference_functions_Device_GetPlatform">
        <h2 style="margin-bottom: 8px;">Device.GetPlatform</h2>
        <code>Device.GetPlatform()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Platform_*">platform</a> the application is currently running on.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the current <a href="#Reference_Platform_*">platform</a>.</div>
        </p>
        <p id="Reference_functions_Device_IsPC">
        <h2 style="margin-bottom: 8px;">Device.IsPC</h2>
        <code>Device.IsPC()</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether or not the application is running on a personal computer OS (Windows, MacOS, Linux).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the device is on a PC, 0 if otherwise.</div>
        </p>
        <p id="Reference_functions_Device_IsMobile">
        <h2 style="margin-bottom: 8px;">Device.IsMobile</h2>
        <code>Device.IsMobile()</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether or not the application is running on a mobile device.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the device is on a mobile device, 0 if otherwise.</div>
        </p>
        <p id="Reference_functions_Directory_Create">
        <h2 style="margin-bottom: 8px;">Directory.Create</h2>
        <code>Directory.Create(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a folder at the path.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the folder to create.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the folder creation was successful, 0 if otherwise</div>
        </p>
        <p id="Reference_functions_Directory_Exists">
        <h2 style="margin-bottom: 8px;">Directory.Exists</h2>
        <code>Directory.Exists(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines if the folder at the path exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the folder to check for existence.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the folder exists, 0 if otherwise</div>
        </p>
        <p id="Reference_functions_Directory_GetFiles">
        <h2 style="margin-bottom: 8px;">Directory.GetFiles</h2>
        <code>Directory.GetFiles(directory, pattern, allDirs)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the paths of all the files in the directory.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>directory (String): The path of the folder to find files in.</li>
        <li>pattern (String): The search pattern for the files. (ex: "*" for any file, "*.*" any file name with any file type, "*.png" any PNG file)</li>
        <li>allDirs (Boolean): Whether or not to search into all folders in the directory.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array containing the filepaths (as Strings.)</div>
        </p>
        <p id="Reference_functions_Directory_GetDirectories">
        <h2 style="margin-bottom: 8px;">Directory.GetDirectories</h2>
        <code>Directory.GetDirectories(directory, pattern, allDirs)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the paths of all the folders in the directory.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>directory (String): The path of the folder to find folders in.</li>
        <li>pattern (String): The search pattern for the folders. (ex: "*" for any folder, "image*" any folder that starts with "image")</li>
        <li>allDirs (Boolean): Whether or not to search into all folders in the directory.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array containing the filepaths (as Strings.)</div>
        </p>
        <p id="Reference_functions_Display_GetWidth">
        <h2 style="margin-bottom: 8px;">Display.GetWidth</h2>
        <code>Display.GetWidth([index])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the current display.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>index (Integer): The display index to get the width of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the width of the current display.</div>
        </p>
        <p id="Reference_functions_Display_GetHeight">
        <h2 style="margin-bottom: 8px;">Display.GetHeight</h2>
        <code>Display.GetHeight([index])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the current display.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>index (Integer): The display index to get the width of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the height of the current display.</div>
        </p>
        <p id="Reference_functions_Draw_Sprite">
        <h2 style="margin-bottom: 8px;">Draw.Sprite</h2>
        <code>Draw.Sprite(sprite, animation, frame, x, y, flipX, flipY[, scaleX, scaleY, rotation, useInteger])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>rotation (Number): Rotation of the drawn sprite in radians, or in integer if useInteger is true</li>
        <li>useInteger (Number): Whether or not the rotation argument is already in radians</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SpriteBasic">
        <h2 style="margin-bottom: 8px;">Draw.SpriteBasic</h2>
        <code>Draw.SpriteBasic(instance[, sprite])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a sprite based on an entity's current values (Sprite, CurrentAnimation, CurrentFrame, X, Y, Direction, ScaleX, ScaleY, Rotation).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to draw.</li>
        <li>sprite (Integer): The sprite index to use if not using the entity's sprite index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Animator">
        <h2 style="margin-bottom: 8px;">Draw.Animator</h2>
        <code>Draw.Animator(animator, x, y, flipX, flipY[, scaleX, scaleY, rotation])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an animator based on its current values (Sprite, CurrentAnimation, CurrentFrame) and other provided values.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Animator): The animator to draw.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>flipX (Integer): Whether to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>rotation (Number): Rotation of the drawn sprite, from 0-511.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_AnimatorBasic">
        <h2 style="margin-bottom: 8px;">Draw.AnimatorBasic</h2>
        <code>Draw.AnimatorBasic(animator, instance[, sprite])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an animator based on its current values (Sprite, CurrentAnimation, CurrentFrame) and an entity's other values (X, Y, Direction, ScaleX, ScaleY, Rotation).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Animator): The animator to draw.</li>
        <li>instance (Instance): The instance to pull other values from.</li>
        <li>sprite (Integer): The sprite index to use if not using the entity's sprite index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SpritePart">
        <h2 style="margin-bottom: 8px;">Draw.SpritePart</h2>
        <code>Draw.SpritePart(sprite, animation, frame, x, y, partX, partY, partW, partH, flipX, flipY[, scaleX, scaleY, rotation, useInteger])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>partX (Integer): X coordinate of part of frame to draw.</li>
        <li>partY (Integer): Y coordinate of part of frame to draw.</li>
        <li>partW (Integer): Width of part of frame to draw.</li>
        <li>partH (Integer): Height of part of frame to draw.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>rotation (Number): Rotation of the drawn sprite in radians, or in integer if useInteger is true</li>
        <li>useInteger (Number): Whether or not the rotation argument is already in radians</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Image">
        <h2 style="margin-bottom: 8px;">Draw.Image</h2>
        <code>Draw.Image(image, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ImagePart">
        <h2 style="margin-bottom: 8px;">Draw.ImagePart</h2>
        <code>Draw.ImagePart(image, partX, partY, partW, partH, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>partX (Integer): X coordinate of part of image to draw.</li>
        <li>partY (Integer): Y coordinate of part of image to draw.</li>
        <li>partW (Integer): Width of part of image to draw.</li>
        <li>partH (Integer): Height of part of image to draw.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ImageSized">
        <h2 style="margin-bottom: 8px;">Draw.ImageSized</h2>
        <code>Draw.ImageSized(image, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an image, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>width (Number): Width to draw the image.</li>
        <li>height (Number): Height to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ImagePartSized">
        <h2 style="margin-bottom: 8px;">Draw.ImagePartSized</h2>
        <code>Draw.ImagePartSized(image, partX, partY, partW, partH, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of an image, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>partX (Integer): X coordinate of part of image to draw.</li>
        <li>partY (Integer): Y coordinate of part of image to draw.</li>
        <li>partW (Integer): Width of part of image to draw.</li>
        <li>partH (Integer): Height of part of image to draw.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>width (Number): Width to draw the image.</li>
        <li>height (Number): Height to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_View">
        <h2 style="margin-bottom: 8px;">Draw.View</h2>
        <code>Draw.View(viewIndex, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ViewPart">
        <h2 style="margin-bottom: 8px;">Draw.ViewPart</h2>
        <code>Draw.ViewPart(viewIndex, x, y, partX, partY, partW, partH)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        <li>partX (Integer): X coordinate of part of view to draw.</li>
        <li>partY (Integer): Y coordinate of part of view to draw.</li>
        <li>partW (Integer): Width of part of view to draw.</li>
        <li>partH (Integer): Height of part of view to draw.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ViewSized">
        <h2 style="margin-bottom: 8px;">Draw.ViewSized</h2>
        <code>Draw.ViewSized(viewIndex, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a view, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        <li>width (Number): Width to draw the view.</li>
        <li>height (Number): Height to draw the view.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ViewPartSized">
        <h2 style="margin-bottom: 8px;">Draw.ViewPartSized</h2>
        <code>Draw.ViewPartSized(viewIndex, x, y, partX, partY, partW, partH, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a view, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        <li>partX (Integer): X coordinate of part of view to draw.</li>
        <li>partY (Integer): Y coordinate of part of view to draw.</li>
        <li>partW (Integer): Width of part of view to draw.</li>
        <li>partH (Integer): Height of part of view to draw.</li>
        <li>width (Number): Width to draw the view.</li>
        <li>height (Number): Height to draw the view.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_BindVertexBuffer">
        <h2 style="margin-bottom: 8px;">Draw.BindVertexBuffer</h2>
        <code>Draw.BindVertexBuffer(vertexBufferIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Binds a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): Sets the vertex buffer to bind.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UnbindVertexBuffer">
        <h2 style="margin-bottom: 8px;">Draw.UnbindVertexBuffer</h2>
        <code>Draw.UnbindVertexBuffer()</code>
        <div style="margin-top: 8px; font-size: 14px;">Unbinds the currently bound vertex buffer.</div>
        </p>
        <p id="Reference_functions_Draw_InitArrayBuffer">
        <h2 style="margin-bottom: 8px;">Draw.InitArrayBuffer</h2>
        <code>Draw.InitArrayBuffer(arrayBufferIndex, numVertices)</code>
        <div style="margin-top: 8px; font-size: 14px;">Initializes an array buffer. There are 32 array buffers. (Deprecated; use <code><a href="#Reference_functions_Scene3D_Create">Scene3D.Create</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The array buffer at the index to use. (Maximum index: 31)</li>
        <li>numVertices (Integer): The initial capacity of this array buffer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetArrayBufferDrawMode">
        <h2 style="margin-bottom: 8px;">Draw.SetArrayBufferDrawMode</h2>
        <code>Draw.SetArrayBufferDrawMode(arrayBufferIndex, drawMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the draw mode of the array buffer. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetDrawMode">Scene3D.SetDrawMode</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>drawMode (Integer): The type of drawing to use for the vertices in the array buffer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetProjectionMatrix">
        <h2 style="margin-bottom: 8px;">Draw.SetProjectionMatrix</h2>
        <code>Draw.SetProjectionMatrix(arrayBufferIndex, projMatrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the projection matrix. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetCustomProjectionMatrix">Scene3D.SetCustomProjectionMatrix</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>projMatrix (Matrix): The projection matrix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetViewMatrix">
        <h2 style="margin-bottom: 8px;">Draw.SetViewMatrix</h2>
        <code>Draw.SetViewMatrix(arrayBufferIndex, viewMatrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the view matrix. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetViewMatrix">Scene3D.SetViewMatrix</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>viewMatrix (Matrix): The view matrix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetAmbientLighting">
        <h2 style="margin-bottom: 8px;">Draw.SetAmbientLighting</h2>
        <code>Draw.SetAmbientLighting(arrayBufferIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the ambient lighting of the array buffer. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetAmbientLighting">Scene3D.SetAmbientLighting</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetDiffuseLighting">
        <h2 style="margin-bottom: 8px;">Draw.SetDiffuseLighting</h2>
        <code>Draw.SetDiffuseLighting(arrayBufferIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the diffuse lighting of the array buffer. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetDiffuseLighting">Scene3D.SetDiffuseLighting</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetSpecularLighting">
        <h2 style="margin-bottom: 8px;">Draw.SetSpecularLighting</h2>
        <code>Draw.SetSpecularLighting(arrayBufferIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specular lighting of the array buffer. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetSpecularLighting">Scene3D.SetSpecularLighting</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetFogDensity">
        <h2 style="margin-bottom: 8px;">Draw.SetFogDensity</h2>
        <code>Draw.SetFogDensity(arrayBufferIndex, density)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the density of the array buffer's fog. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetFogDensity">Scene3D.SetFogDensity</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>density (Number): The fog density.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetFogColor">
        <h2 style="margin-bottom: 8px;">Draw.SetFogColor</h2>
        <code>Draw.SetFogColor(arrayBufferIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the fog color of the array buffer. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetFogColor">Scene3D.SetFogColor</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetClipPolygons">
        <h2 style="margin-bottom: 8px;">Draw.SetClipPolygons</h2>
        <code>Draw.SetClipPolygons(arrayBufferIndex, clipPolygons)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables polygon clipping by the view frustum of the array buffer. (Deprecated; software-renderer only.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>clipPolygons (Boolean): Whether or not to clip polygons.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetPointSize">
        <h2 style="margin-bottom: 8px;">Draw.SetPointSize</h2>
        <code>Draw.SetPointSize(arrayBufferIndex, pointSize)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the point size of the array buffer. (Deprecated; use <code><a href="#Reference_functions_Scene3D_SetPointSize">Scene3D.SetPointSize</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The index of the array buffer.</li>
        <li>pointSize (Decimal): The point size.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_BindArrayBuffer">
        <h2 style="margin-bottom: 8px;">Draw.BindArrayBuffer</h2>
        <code>Draw.BindArrayBuffer(arrayBufferIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Binds an array buffer for drawing polygons in 3D space. (Deprecated; use <code><a href="#Reference_functions_Draw_BindScene3D">Draw.BindScene3D</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): Sets the array buffer to bind.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_BindScene3D">
        <h2 style="margin-bottom: 8px;">Draw.BindScene3D</h2>
        <code>Draw.BindScene3D(scene3DIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Binds a 3D scene for drawing polygons in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): Sets the 3D scene to bind.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Model">
        <h2 style="margin-bottom: 8px;">Draw.Model</h2>
        <code>Draw.Model(modelIndex, animation, frame[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>modelIndex (Integer): Index of loaded model.</li>
        <li>animation (Integer): Animation of model to draw.</li>
        <li>frame (Decimal): Frame of model to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming model coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming model normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ModelSkinned">
        <h2 style="margin-bottom: 8px;">Draw.ModelSkinned</h2>
        <code>Draw.ModelSkinned(modelIndex, skeleton[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a skinned model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>modelIndex (Integer): Index of loaded model.</li>
        <li>skeleton (Integer): Skeleton of model to skin the model.</li>
        <li>matrixModel (Matrix): Matrix for transforming model coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming model normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ModelSimple">
        <h2 style="margin-bottom: 8px;">Draw.ModelSimple</h2>
        <code>Draw.ModelSimple(modelIndex, animation, frame, x, y, scale, rx, ry, rz)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a model without using matrices.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>modelIndex (Integer): Index of loaded model.</li>
        <li>animation (Integer): Animation of model to draw.</li>
        <li>frame (Integer): Frame of model to draw.</li>
        <li>x (Number): X position</li>
        <li>y (Number): Y position</li>
        <li>scale (Number): Model scale</li>
        <li>rx (Number): X rotation in radians</li>
        <li>ry (Number): Y rotation in radians</li>
        <li>rz (Number): Z rotation in radians</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Triangle3D">
        <h2 style="margin-bottom: 8px;">Draw.Triangle3D</h2>
        <code>Draw.Triangle3D(x1, y1, z1, x2, y2, z2, x3, y3, z3[, color1, color2, color3, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Quad3D">
        <h2 style="margin-bottom: 8px;">Draw.Quad3D</h2>
        <code>Draw.Quad3D(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a quadrilateral in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Sprite3D">
        <h2 style="margin-bottom: 8px;">Draw.Sprite3D</h2>
        <code>Draw.Sprite3D(sprite, animation, frame, x, y, z, flipX, flipY[, scaleX, scaleY, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a sprite in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>z (Number): Z position of where to draw the sprite.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SpritePart3D">
        <h2 style="margin-bottom: 8px;">Draw.SpritePart3D</h2>
        <code>Draw.SpritePart3D(sprite, animation, frame, x, y, z, partX, partY, partW, partH, flipX, flipY[, scaleX, scaleY, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a sprite in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>z (Number): Z position of where to draw the sprite.</li>
        <li>partX (Integer): X coordinate of part of frame to draw.</li>
        <li>partY (Integer): Y coordinate of part of frame to draw.</li>
        <li>partW (Integer): Width of part of frame to draw.</li>
        <li>partH (Integer): Height of part of frame to draw.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Image3D">
        <h2 style="margin-bottom: 8px;">Draw.Image3D</h2>
        <code>Draw.Image3D(image, x, y, z[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an image in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>z (Number): Z position of where to draw the image.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ImagePart3D">
        <h2 style="margin-bottom: 8px;">Draw.ImagePart3D</h2>
        <code>Draw.ImagePart3D(image, x, y, z, partX, partY, partW, partH[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of an image in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>z (Number): Z position of where to draw the image.</li>
        <li>partX (Integer): X coordinate of part of image to draw.</li>
        <li>partY (Integer): Y coordinate of part of image to draw.</li>
        <li>partW (Integer): Width of part of image to draw.</li>
        <li>partH (Integer): Height of part of image to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Tile3D">
        <h2 style="margin-bottom: 8px;">Draw.Tile3D</h2>
        <code>Draw.Tile3D(ID, x, y, z, flipX, flipY[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a tile in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ID (Integer): ID of the tile to draw.</li>
        <li>x (Number): X position of where to draw the tile.</li>
        <li>y (Number): Y position of where to draw the tile.</li>
        <li>z (Number): Z position of where to draw the tile.</li>
        <li>flipX (Integer): Whether or not to flip the tile horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the tile vertically.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TriangleTextured">
        <h2 style="margin-bottom: 8px;">Draw.TriangleTextured</h2>
        <code>Draw.TriangleTextured(image, x1, y1, z1, x2, y2, z2, x3, y3, z3[, color1, color2, color3, u1, v1, u2, v2, u3, v3, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured triangle in 3D space. The texture source should be an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>u1 (Number): Texture U of the first vertex.</li>
        <li>v1 (Number): Texture V of the first vertex.</li>
        <li>u2 (Number): Texture U of the second vertex.</li>
        <li>v2 (Number): Texture V of the second vertex.</li>
        <li>u3 (Number): Texture U of the third vertex.</li>
        <li>v3 (Number): Texture V of the third vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_QuadTextured">
        <h2 style="margin-bottom: 8px;">Draw.QuadTextured</h2>
        <code>Draw.QuadTextured(image, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, u1, v1, u2, v2, u3, v3, u4, v4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured quad in 3D space. The texture source should be an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>u1 (Number): Texture U of the first vertex.</li>
        <li>v1 (Number): Texture V of the first vertex.</li>
        <li>u2 (Number): Texture U of the second vertex.</li>
        <li>v2 (Number): Texture V of the second vertex.</li>
        <li>u3 (Number): Texture U of the third vertex.</li>
        <li>v3 (Number): Texture V of the third vertex.</li>
        <li>u4 (Number): Texture U of the fourth vertex.</li>
        <li>v4 (Number): Texture V of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SpritePoints">
        <h2 style="margin-bottom: 8px;">Draw.SpritePoints</h2>
        <code>Draw.SpritePoints(sprite, animation, frame, flipX, flipY, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured rectangle in 3D space. The texture source should be a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TilePoints">
        <h2 style="margin-bottom: 8px;">Draw.TilePoints</h2>
        <code>Draw.TilePoints(ID, flipX, flipY, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured rectangle in 3D space. The texture source should be a tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ID (Integer): ID of the tile to draw.</li>
        <li>flipX (Integer): Whether or not to flip the tile horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the tile vertically.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SceneLayer3D">
        <h2 style="margin-bottom: 8px;">Draw.SceneLayer3D</h2>
        <code>Draw.SceneLayer3D(layer[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a scene layer in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SceneLayerPart3D">
        <h2 style="margin-bottom: 8px;">Draw.SceneLayerPart3D</h2>
        <code>Draw.SceneLayerPart3D(layer, partX, partY, partW, partH[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a scene layer in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer.</li>
        <li>partX (Integer): X coordinate (in tiles) of part of layer to draw.</li>
        <li>partY (Integer): Y coordinate (in tiles) of part of layer to draw.</li>
        <li>partW (Integer): Width (in tiles) of part of layer to draw.</li>
        <li>partH (Integer): Height (in tiles) of part of layer to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_VertexBuffer">
        <h2 style="margin-bottom: 8px;">Draw.VertexBuffer</h2>
        <code>Draw.VertexBuffer(vertexBufferIndex[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_RenderArrayBuffer">
        <h2 style="margin-bottom: 8px;">Draw.RenderArrayBuffer</h2>
        <code>Draw.RenderArrayBuffer(arrayBufferIndex[, drawMode])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws everything in the array buffer. (Deprecated; use <code><a href="#Reference_functions_Draw_RenderScene3D">Draw.RenderScene3D</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>arrayBufferIndex (Integer): The array buffer at the index to draw.</li>
        <li>drawMode (Integer): The type of drawing to use for the vertices in the array buffer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_RenderScene3D">
        <h2 style="margin-bottom: 8px;">Draw.RenderScene3D</h2>
        <code>Draw.RenderScene3D(scene3DIndex[, drawMode])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws everything in the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The 3D scene at the index to draw.</li>
        <li>drawMode (Integer): The type of drawing to use for the vertices in the 3D scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Video">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Video</h2>
        <code>Draw.Video()</code>
        </p>
        <p id="Reference_functions_Draw_VideoPart">
        <h2 style="margin-bottom: 8px; color: red;">Draw.VideoPart</h2>
        <code>Draw.VideoPart()</code>
        </p>
        <p id="Reference_functions_Draw_VideoSized">
        <h2 style="margin-bottom: 8px; color: red;">Draw.VideoSized</h2>
        <code>Draw.VideoSized()</code>
        </p>
        <p id="Reference_functions_Draw_VideoPartSized">
        <h2 style="margin-bottom: 8px; color: red;">Draw.VideoPartSized</h2>
        <code>Draw.VideoPartSized()</code>
        </p>
        <p id="Reference_functions_Draw_Tile">
        <h2 style="margin-bottom: 8px;">Draw.Tile</h2>
        <code>Draw.Tile(ID, x, y, flipX, flipY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ID (Integer): ID of the tile to draw.</li>
        <li>x (Number): X position of where to draw the tile.</li>
        <li>y (Number): Y position of where to draw the tile.</li>
        <li>flipX (Integer): Whether or not to flip the tile horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the tile vertically.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Texture">
        <h2 style="margin-bottom: 8px;">Draw.Texture</h2>
        <code>Draw.Texture(texture, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a texture.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        <li>x (Number): X position of where to draw the texture.</li>
        <li>y (Number): Y position of where to draw the texture.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TextureSized">
        <h2 style="margin-bottom: 8px;">Draw.TextureSized</h2>
        <code>Draw.TextureSized(texture, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a texture, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        <li>x (Number): X position of where to draw the texture.</li>
        <li>y (Number): Y position of where to draw the texture.</li>
        <li>width (Number): Width to draw the texture.</li>
        <li>height (Number): Height to draw the texture.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TexturePart">
        <h2 style="margin-bottom: 8px;">Draw.TexturePart</h2>
        <code>Draw.TexturePart(texture, partX, partY, partW, partH, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a texture.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        <li>partX (Integer): X coordinate of part of texture to draw.</li>
        <li>partY (Integer): Y coordinate of part of texture to draw.</li>
        <li>partW (Integer): Width of part of texture to draw.</li>
        <li>partH (Integer): Height of part of texture to draw.</li>
        <li>x (Number): X position of where to draw the texture.</li>
        <li>y (Number): Y position of where to draw the texture.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetFont">
        <h2 style="margin-bottom: 8px; color: red;">Draw.SetFont</h2>
        <code>Draw.SetFont()</code>
        </p>
        <p id="Reference_functions_Draw_SetTextAlign">
        <h2 style="margin-bottom: 8px;">Draw.SetTextAlign</h2>
        <code>Draw.SetTextAlign(baseline)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the text drawing horizontal alignment. (default: left)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>baseline (Integer): 0 for left, 1 for center, 2 for right.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextBaseline">
        <h2 style="margin-bottom: 8px;">Draw.SetTextBaseline</h2>
        <code>Draw.SetTextBaseline(baseline)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the text drawing vertical alignment. (default: top)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>baseline (Integer): 0 for top, 1 for baseline, 2 for bottom.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextAdvance">
        <h2 style="margin-bottom: 8px;">Draw.SetTextAdvance</h2>
        <code>Draw.SetTextAdvance(ascent)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the character spacing multiplier. (default: 1.0)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ascent (Number): Multiplier for character spacing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextLineAscent">
        <h2 style="margin-bottom: 8px;">Draw.SetTextLineAscent</h2>
        <code>Draw.SetTextLineAscent(ascent)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the line height multiplier. (default: 1.25)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ascent (Number): Multiplier for line height.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_MeasureText">
        <h2 style="margin-bottom: 8px;">Draw.MeasureText</h2>
        <code>Draw.MeasureText(outArray, sprite, text)</code>
        <div style="margin-top: 8px; font-size: 14px;">Measures Extended UTF8 text using a sprite or font and stores max width and max height into the array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>outArray (Array): Array to output size values to.</li>
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to measure.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the array inputted into the function.</div>
        </p>
        <p id="Reference_functions_Draw_MeasureTextWrapped">
        <h2 style="margin-bottom: 8px;">Draw.MeasureTextWrapped</h2>
        <code>Draw.MeasureTextWrapped(outArray, sprite, text, maxWidth[, maxLines])</code>
        <div style="margin-top: 8px; font-size: 14px;">Measures wrapped Extended UTF8 text using a sprite or font and stores max width and max height into the array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>outArray (Array): Array to output size values to.</li>
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to measure.</li>
        <li>maxWidth (Number): Max width that a line can be.</li>
        <li>maxLines (Integer): Max number of lines to measure.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the array inputted into the function.</div>
        </p>
        <p id="Reference_functions_Draw_Text">
        <h2 style="margin-bottom: 8px;">Draw.Text</h2>
        <code>Draw.Text(sprite, text, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws Extended UTF8 text using a sprite or font.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to draw.</li>
        <li>x (Number): X position of where to draw the text.</li>
        <li>y (Number): Y position of where to draw the text.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TextWrapped">
        <h2 style="margin-bottom: 8px;">Draw.TextWrapped</h2>
        <code>Draw.TextWrapped(sprite, text, x, y, maxWidth, maxLines)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws wrapped Extended UTF8 text using a sprite or font.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to draw.</li>
        <li>x (Number): X position of where to draw the tile.</li>
        <li>y (Number): Y position of where to draw the tile.</li>
        <li>maxWidth (Number): Max width the text can draw in.</li>
        <li>maxLines (Integer): Max lines the text can draw.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TextEllipsis">
        <h2 style="margin-bottom: 8px; color: red;">Draw.TextEllipsis</h2>
        <code>Draw.TextEllipsis()</code>
        </p>
        <p id="Reference_functions_Draw_SetBlendColor">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendColor</h2>
        <code>Draw.SetBlendColor(hex, alpha)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the color to be used for drawing and blending.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>hex (Integer): Hexadecimal format of desired color. (ex: Red = 0xFF0000, Green = 0x00FF00, Blue = 0x0000FF)</li>
        <li>alpha (Number): Opacity to use for drawing, 0.0 to 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextureBlend">
        <h2 style="margin-bottom: 8px;">Draw.SetTextureBlend</h2>
        <code>Draw.SetTextureBlend(doBlend)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use color and alpha blending on sprites, images, and textures.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>doBlend (Boolean): Whether or not to use blending.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetBlendMode">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendMode</h2>
        <code>Draw.SetBlendMode(blendMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_BlendMode_*">blend mode</a> used for drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>blendMode (Integer): The desired <a href="#Reference_BlendMode_*">blend mode</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetBlendFactor">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendFactor</h2>
        <code>Draw.SetBlendFactor(sourceFactor, destinationFactor)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_BlendFactor_*">blend factors</a> used for drawing. (Only for hardware-rendering)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sourceFactor (Integer): <a href="#Reference_BlendFactor_*">Source factor</a> for blending.</li>
        <li>destinationFactor (Integer): <a href="#Reference_BlendFactor_*">Destination factor</a> for blending.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetBlendFactorExtended">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendFactorExtended</h2>
        <code>Draw.SetBlendFactorExtended(sourceColorFactor, destinationColorFactor, sourceAlphaFactor, destinationAlphaFactor)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets all the <a href="#Reference_BlendFactor_*">blend factors</a> used for drawing. (Only for hardware-rendering)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sourceColorFactor (Integer): <a href="#Reference_BlendFactor_*">Source factor</a> for blending color.</li>
        <li>destinationColorFactor (Integer): <a href="#Reference_BlendFactor_*">Destination factor</a> for blending color.</li>
        <li>sourceAlphaFactor (Integer): <a href="#Reference_BlendFactor_*">Source factor</a> for blending alpha.</li>
        <li>destinationAlphaFactor (Integer): <a href="#Reference_BlendFactor_*">Destination factor</a> for blending alpha.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetCompareColor">
        <h2 style="margin-bottom: 8px;">Draw.SetCompareColor</h2>
        <code>Draw.SetCompareColor(hex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the Comparison Color to draw over for Comparison Drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>hex (Integer): Hexadecimal format of desired color. (ex: Red = 0xFF0000, Green = 0x00FF00, Blue = 0x0000FF)</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTintColor">
        <h2 style="margin-bottom: 8px;">Draw.SetTintColor</h2>
        <code>Draw.SetTintColor(hex, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the color to be used for tinting.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>hex (Integer): Hexadecimal format of desired color. (ex: Red = 0xFF0000, Green = 0x00FF00, Blue = 0x0000FF)</li>
        <li>amount (Number): Tint amount, from 0.0 to 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTintMode">
        <h2 style="margin-bottom: 8px;">Draw.SetTintMode</h2>
        <code>Draw.SetTintMode(tintMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_TintMode_*">tint mode</a> used for drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tintMode (Integer): The desired <a href="#Reference_TintMode_*">tint mode</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseTinting">
        <h2 style="margin-bottom: 8px;">Draw.UseTinting</h2>
        <code>Draw.UseTinting(useTinting)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use color tinting when drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>useTinting (Boolean): Whether or not to use color tinting when drawing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetFilter">
        <h2 style="margin-bottom: 8px;">Draw.SetFilter</h2>
        <code>Draw.SetFilter(filterType)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a <a href="#Reference_Filter_*">filter type</a>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filterType (Integer): The <a href="#Reference_Filter_*">filter type</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Line">
        <h2 style="margin-bottom: 8px;">Draw.Line</h2>
        <code>Draw.Line(x1, y1, x2, y2)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a line.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of where to start drawing the line.</li>
        <li>y1 (Number): Y position of where to start drawing the line.</li>
        <li>x2 (Number): X position of where to end drawing the line.</li>
        <li>y2 (Number): Y position of where to end drawing the line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Circle">
        <h2 style="margin-bottom: 8px;">Draw.Circle</h2>
        <code>Draw.Circle(x, y, radius)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a circle.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): Center X position of where to draw the circle.</li>
        <li>y (Number): Center Y position of where to draw the circle.</li>
        <li>radius (Number): Radius of the circle.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Ellipse">
        <h2 style="margin-bottom: 8px;">Draw.Ellipse</h2>
        <code>Draw.Ellipse(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an ellipse.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the ellipse.</li>
        <li>y (Number): Y position of where to draw the ellipse.</li>
        <li>width (Number): Width to draw the ellipse at.</li>
        <li>height (Number): Height to draw the ellipse at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Triangle">
        <h2 style="margin-bottom: 8px;">Draw.Triangle</h2>
        <code>Draw.Triangle(x1, y1, x2, y2, x3, y3)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TriangleBlend">
        <h2 style="margin-bottom: 8px;">Draw.TriangleBlend</h2>
        <code>Draw.TriangleBlend(x1, y1, x2, y2, x3, y3, color1, color2, color3)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle, blending the colors at the vertices. (Colors are multipled by the global Draw Blend Color, do <code><a href="#Reference_functions_Draw_SetBlendColor">Draw.SetBlendColor</a></code><code>(0xFFFFFF, 1.0)</code> if you want the vertex colors unaffected.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_QuadBlend">
        <h2 style="margin-bottom: 8px;">Draw.QuadBlend</h2>
        <code>Draw.QuadBlend(x1, y1, x2, y2, x3, y3, x4, y4, color1, color2, color3, color4)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle, blending the colors at the vertices. (Colors are multipled by the global Draw Blend Color, do <code><a href="#Reference_functions_Draw_SetBlendColor">Draw.SetBlendColor</a></code><code>(0xFFFFFF, 1.0)</code> if you want the vertex colors unaffected.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Rectangle">
        <h2 style="margin-bottom: 8px;">Draw.Rectangle</h2>
        <code>Draw.Rectangle(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a rectangle.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the rectangle.</li>
        <li>y (Number): Y position of where to draw the rectangle.</li>
        <li>width (Number): Width to draw the rectangle at.</li>
        <li>height (Number): Height to draw the rectangle at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_CircleStroke">
        <h2 style="margin-bottom: 8px;">Draw.CircleStroke</h2>
        <code>Draw.CircleStroke(x, y, radius)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a circle outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): Center X position of where to draw the circle.</li>
        <li>y (Number): Center Y position of where to draw the circle.</li>
        <li>radius (Number): Radius of the circle.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_EllipseStroke">
        <h2 style="margin-bottom: 8px;">Draw.EllipseStroke</h2>
        <code>Draw.EllipseStroke(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an ellipse outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the ellipse.</li>
        <li>y (Number): Y position of where to draw the ellipse.</li>
        <li>width (Number): Width to draw the ellipse at.</li>
        <li>height (Number): Height to draw the ellipse at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TriangleStroke">
        <h2 style="margin-bottom: 8px;">Draw.TriangleStroke</h2>
        <code>Draw.TriangleStroke(x1, y1, x2, y2, x3, y3)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_RectangleStroke">
        <h2 style="margin-bottom: 8px;">Draw.RectangleStroke</h2>
        <code>Draw.RectangleStroke(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a rectangle outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the rectangle.</li>
        <li>y (Number): Y position of where to draw the rectangle.</li>
        <li>width (Number): Width to draw the rectangle at.</li>
        <li>height (Number): Height to draw the rectangle at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseFillSmoothing">
        <h2 style="margin-bottom: 8px;">Draw.UseFillSmoothing</h2>
        <code>Draw.UseFillSmoothing(smoothFill)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use smoothing when drawing filled shapes. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>smoothFill (Boolean): Whether or not to use smoothing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseStrokeSmoothing">
        <h2 style="margin-bottom: 8px;">Draw.UseStrokeSmoothing</h2>
        <code>Draw.UseStrokeSmoothing(smoothFill)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use smoothing when drawing un-filled shapes. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>smoothFill (Boolean): Whether or not to use smoothing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetClip">
        <h2 style="margin-bottom: 8px;">Draw.SetClip</h2>
        <code>Draw.SetClip(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the region in which drawing will occur.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to start the draw region.</li>
        <li>y (Number): Y position of where to start the draw region.</li>
        <li>width (Number): Width of the draw region.</li>
        <li>height (Number): Height of the draw region.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ClearClip">
        <h2 style="margin-bottom: 8px;">Draw.ClearClip</h2>
        <code>Draw.ClearClip()</code>
        <div style="margin-top: 8px; font-size: 14px;">Resets the drawing region.</div>
        </p>
        <p id="Reference_functions_Draw_Save">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Save</h2>
        <code>Draw.Save()</code>
        </p>
        <p id="Reference_functions_Draw_Scale">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Scale</h2>
        <code>Draw.Scale()</code>
        </p>
        <p id="Reference_functions_Draw_Rotate">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Rotate</h2>
        <code>Draw.Rotate()</code>
        </p>
        <p id="Reference_functions_Draw_Restore">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Restore</h2>
        <code>Draw.Restore()</code>
        </p>
        <p id="Reference_functions_Draw_Translate">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Translate</h2>
        <code>Draw.Translate()</code>
        </p>
        <p id="Reference_functions_Draw_SetTextureTarget">
        <h2 style="margin-bottom: 8px; color: red;">Draw.SetTextureTarget</h2>
        <code>Draw.SetTextureTarget()</code>
        </p>
        <p id="Reference_functions_Draw_Clear">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Clear</h2>
        <code>Draw.Clear()</code>
        </p>
        <p id="Reference_functions_Draw_ResetTextureTarget">
        <h2 style="margin-bottom: 8px; color: red;">Draw.ResetTextureTarget</h2>
        <code>Draw.ResetTextureTarget()</code>
        </p>
        <p id="Reference_functions_Draw_UseSpriteDeform">
        <h2 style="margin-bottom: 8px;">Draw.UseSpriteDeform</h2>
        <code>Draw.UseSpriteDeform(useDeform)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use sprite deform when drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>useDeform (Boolean): Whether or not to use sprite deform when drawing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetSpriteDeformLine">
        <h2 style="margin-bottom: 8px;">Draw.SetSpriteDeformLine</h2>
        <code>Draw.SetSpriteDeformLine(deformIndex, deformValue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sprite deform line at the specified line index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>deformIndex (Integer): Index of deform line. (0 = top of screen, 1 = the line below it, 2 = etc.)</li>
        <li>deformValue (Decimal): Deform value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseDepthTesting">
        <h2 style="margin-bottom: 8px;">Draw.UseDepthTesting</h2>
        <code>Draw.UseDepthTesting(useDepthTesting)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to do depth tests when drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>useDepthTesting (Boolean): Whether or not to do depth tests when drawing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_GetCurrentDrawGroup">
        <h2 style="margin-bottom: 8px;">Draw.GetCurrentDrawGroup</h2>
        <code>Draw.GetCurrentDrawGroup()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the draw group currently being drawn.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Draw_CopyScreen">
        <h2 style="margin-bottom: 8px;">Draw.CopyScreen</h2>
        <code>Draw.CopyScreen(texture)</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies the contents of the screen into a texture.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Ease_InSine">
        <h2 style="margin-bottom: 8px;">Ease.InSine</h2>
        <code>Ease.InSine(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InSine" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutSine">
        <h2 style="margin-bottom: 8px;">Ease.OutSine</h2>
        <code>Ease.OutSine(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutSine" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutSine">
        <h2 style="margin-bottom: 8px;">Ease.InOutSine</h2>
        <code>Ease.InOutSine(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutSine" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InQuad">
        <h2 style="margin-bottom: 8px;">Ease.InQuad</h2>
        <code>Ease.InQuad(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InQuad" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutQuad">
        <h2 style="margin-bottom: 8px;">Ease.OutQuad</h2>
        <code>Ease.OutQuad(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutQuad" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutQuad">
        <h2 style="margin-bottom: 8px;">Ease.InOutQuad</h2>
        <code>Ease.InOutQuad(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutQuad" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InCubic">
        <h2 style="margin-bottom: 8px;">Ease.InCubic</h2>
        <code>Ease.InCubic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InCubic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutCubic">
        <h2 style="margin-bottom: 8px;">Ease.OutCubic</h2>
        <code>Ease.OutCubic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutCubic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutCubic">
        <h2 style="margin-bottom: 8px;">Ease.InOutCubic</h2>
        <code>Ease.InOutCubic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutCubic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InQuart">
        <h2 style="margin-bottom: 8px;">Ease.InQuart</h2>
        <code>Ease.InQuart(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InQuart" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutQuart">
        <h2 style="margin-bottom: 8px;">Ease.OutQuart</h2>
        <code>Ease.OutQuart(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutQuart" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutQuart">
        <h2 style="margin-bottom: 8px;">Ease.InOutQuart</h2>
        <code>Ease.InOutQuart(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutQuart" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InQuint">
        <h2 style="margin-bottom: 8px;">Ease.InQuint</h2>
        <code>Ease.InQuint(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InQuint" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutQuint">
        <h2 style="margin-bottom: 8px;">Ease.OutQuint</h2>
        <code>Ease.OutQuint(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutQuint" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutQuint">
        <h2 style="margin-bottom: 8px;">Ease.InOutQuint</h2>
        <code>Ease.InOutQuint(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutQuint" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InExpo">
        <h2 style="margin-bottom: 8px;">Ease.InExpo</h2>
        <code>Ease.InExpo(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InExpo" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutExpo">
        <h2 style="margin-bottom: 8px;">Ease.OutExpo</h2>
        <code>Ease.OutExpo(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutExpo" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutExpo">
        <h2 style="margin-bottom: 8px;">Ease.InOutExpo</h2>
        <code>Ease.InOutExpo(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutExpo" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InCirc">
        <h2 style="margin-bottom: 8px;">Ease.InCirc</h2>
        <code>Ease.InCirc(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InCirc" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutCirc">
        <h2 style="margin-bottom: 8px;">Ease.OutCirc</h2>
        <code>Ease.OutCirc(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutCirc" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutCirc">
        <h2 style="margin-bottom: 8px;">Ease.InOutCirc</h2>
        <code>Ease.InOutCirc(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutCirc" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InBack">
        <h2 style="margin-bottom: 8px;">Ease.InBack</h2>
        <code>Ease.InBack(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InBack" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutBack">
        <h2 style="margin-bottom: 8px;">Ease.OutBack</h2>
        <code>Ease.OutBack(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutBack" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutBack">
        <h2 style="margin-bottom: 8px;">Ease.InOutBack</h2>
        <code>Ease.InOutBack(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutBack" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InElastic">
        <h2 style="margin-bottom: 8px;">Ease.InElastic</h2>
        <code>Ease.InElastic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InElastic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutElastic">
        <h2 style="margin-bottom: 8px;">Ease.OutElastic</h2>
        <code>Ease.OutElastic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutElastic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutElastic">
        <h2 style="margin-bottom: 8px;">Ease.InOutElastic</h2>
        <code>Ease.InOutElastic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutElastic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InBounce">
        <h2 style="margin-bottom: 8px;">Ease.InBounce</h2>
        <code>Ease.InBounce(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InBounce" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutBounce">
        <h2 style="margin-bottom: 8px;">Ease.OutBounce</h2>
        <code>Ease.OutBounce(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutBounce" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutBounce">
        <h2 style="margin-bottom: 8px;">Ease.InOutBounce</h2>
        <code>Ease.InOutBounce(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutBounce" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_Triangle">
        <h2 style="margin-bottom: 8px;">Ease.Triangle</h2>
        <code>Ease.Triangle(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "Triangle" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_File_Exists">
        <h2 style="margin-bottom: 8px;">File.Exists</h2>
        <code>File.Exists(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines if the file at the path exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the file to check for existence.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the file exists, 0 if otherwise</div>
        </p>
        <p id="Reference_functions_File_ReadAllText">
        <h2 style="margin-bottom: 8px;">File.ReadAllText</h2>
        <code>File.ReadAllText(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads all text from the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the file to read.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns all the text in the file as a String value if it can be read, otherwise it returns a <code>null</code> value if it cannot be read.</div>
        </p>
        <p id="Reference_functions_File_WriteAllText">
        <h2 style="margin-bottom: 8px;">File.WriteAllText</h2>
        <code>File.WriteAllText(path, text)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes all text to the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the file to read.</li>
        <li>text (String): The text to write to the file.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if successful, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_HTTP_GetString">
        <h2 style="margin-bottom: 8px; color: red;">HTTP.GetString</h2>
        <code>HTTP.GetString()</code>
        </p>
        <p id="Reference_functions_HTTP_GetToFile">
        <h2 style="margin-bottom: 8px; color: red;">HTTP.GetToFile</h2>
        <code>HTTP.GetToFile()</code>
        </p>
        <p id="Reference_functions_Input_GetMouseX">
        <h2 style="margin-bottom: 8px;">Input.GetMouseX</h2>
        <code>Input.GetMouseX()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets cursor's X position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns cursor's X position in relation to the window.</div>
        </p>
        <p id="Reference_functions_Input_GetMouseY">
        <h2 style="margin-bottom: 8px;">Input.GetMouseY</h2>
        <code>Input.GetMouseY()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets cursor's Y position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns cursor's Y position in relation to the window.</div>
        </p>
        <p id="Reference_functions_Input_IsMouseButtonDown">
        <h2 style="margin-bottom: 8px;">Input.IsMouseButtonDown</h2>
        <code>Input.IsMouseButtonDown(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the mouse button is currently down.<br/></br>Mouse Button Indexes:<ul><li><code>0</code>: Left</li><li><code>1</code>: Middle</li><li><code>2</code>: Right</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the mouse button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the mouse button is currently down.</div>
        </p>
        <p id="Reference_functions_Input_IsMouseButtonPressed">
        <h2 style="margin-bottom: 8px;">Input.IsMouseButtonPressed</h2>
        <code>Input.IsMouseButtonPressed(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the mouse button started pressing during the current frame.<br/></br>Mouse Button Indexes:<ul><li><code>0</code>: Left</li><li><code>1</code>: Middle</li><li><code>2</code>: Right</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the mouse button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the mouse button started pressing during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_IsMouseButtonReleased">
        <h2 style="margin-bottom: 8px;">Input.IsMouseButtonReleased</h2>
        <code>Input.IsMouseButtonReleased(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the mouse button released during the current frame.<br/></br>Mouse Button Indexes:<ul><li><code>0</code>: Left</li><li><code>1</code>: Middle</li><li><code>2</code>: Right</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the mouse button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the mouse button released during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_IsKeyDown">
        <h2 style="margin-bottom: 8px;">Input.IsKeyDown</h2>
        <code>Input.IsKeyDown(keyID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the key is currently down.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the key is currently down.</div>
        </p>
        <p id="Reference_functions_Input_IsKeyPressed">
        <h2 style="margin-bottom: 8px;">Input.IsKeyPressed</h2>
        <code>Input.IsKeyPressed(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the key started pressing during the current frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the key started pressing during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_IsKeyReleased">
        <h2 style="margin-bottom: 8px;">Input.IsKeyReleased</h2>
        <code>Input.IsKeyReleased(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the key released during the current frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the key released during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_GetControllerCount">
        <h2 style="margin-bottom: 8px;">Input.GetControllerCount</h2>
        <code>Input.GetControllerCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of connected controllers in the device. (Deprecated; use <code><a href="#Reference_functions_Controller_GetCount">Controller.GetCount</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of connected controllers in the device.</div>
        </p>
        <p id="Reference_functions_Input_GetControllerAttached">
        <h2 style="margin-bottom: 8px;">Input.GetControllerAttached</h2>
        <code>Input.GetControllerAttached(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is connected. (Deprecated; use <code><a href="#Reference_functions_Controller_IsConnected">Controller.IsConnected</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is connected.</div>
        </p>
        <p id="Reference_functions_Input_GetControllerHat">
        <h2 style="margin-bottom: 8px;">Input.GetControllerHat</h2>
        <code>Input.GetControllerHat(controllerIndex, hatIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the hat value from the controller at the index. (Deprecated; use <code><a href="#Reference_functions_Controller_GetButton">Controller.GetButton</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>hatIndex (Integer): Index of the hat to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the hat value from the controller at the index.</div>
        </p>
        <p id="Reference_functions_Input_GetControllerAxis">
        <h2 style="margin-bottom: 8px;">Input.GetControllerAxis</h2>
        <code>Input.GetControllerAxis(controllerIndex, axisIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the axis value from the controller at the index. (Deprecated; use <code><a href="#Reference_functions_Controller_GetAxis">Controller.GetAxis</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>axisIndex (Integer): Index of the axis to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the axis value from the controller at the index.</div>
        </p>
        <p id="Reference_functions_Input_GetControllerButton">
        <h2 style="margin-bottom: 8px;">Input.GetControllerButton</h2>
        <code>Input.GetControllerButton(controllerIndex, buttonIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the button value from the controller at the index. (Deprecated; use <code><a href="#Reference_functions_Controller_GetButton">Controller.GetButton</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>buttonIndex (Integer): Index of the button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the button value from the controller at the index.</div>
        </p>
        <p id="Reference_functions_Input_GetControllerName">
        <h2 style="margin-bottom: 8px;">Input.GetControllerName</h2>
        <code>Input.GetControllerName(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the controller at the index. (Deprecated; use <code><a href="#Reference_functions_Controller_GetName">Controller.GetName</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the controller at the index.</div>
        </p>
        <p id="Reference_functions_Input_GetKeyName">
        <h2 style="margin-bottom: 8px;">Input.GetKeyName</h2>
        <code>Input.GetKeyName(keyID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the key.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the key.</div>
        </p>
        <p id="Reference_functions_Input_GetButtonName">
        <h2 style="margin-bottom: 8px;">Input.GetButtonName</h2>
        <code>Input.GetButtonName(buttonIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the button.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>buttonIndex (Integer): Index of the button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the button.</div>
        </p>
        <p id="Reference_functions_Input_GetAxisName">
        <h2 style="margin-bottom: 8px;">Input.GetAxisName</h2>
        <code>Input.GetAxisName(axisIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the axis.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>axisIndex (Integer): Index of the axis to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the axis.</div>
        </p>
        <p id="Reference_functions_Input_ParseKeyName">
        <h2 style="margin-bottom: 8px;">Input.ParseKeyName</h2>
        <code>Input.ParseKeyName(keyName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Parses a key name into its ID, if possible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyName (String): The key name to parse.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the parsed key ID, or <code>null</code> if it could not be parsed.</div>
        </p>
        <p id="Reference_functions_Input_ParseButtonName">
        <h2 style="margin-bottom: 8px;">Input.ParseButtonName</h2>
        <code>Input.ParseButtonName(keyName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Parses a button name into a button index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyName (String): The button name to parse.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the parsed button index, or <code>null</code> if it could not be parsed.</div>
        </p>
        <p id="Reference_functions_Input_ParseAxisName">
        <h2 style="margin-bottom: 8px;">Input.ParseAxisName</h2>
        <code>Input.ParseAxisName(keyName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Parses an axis into an axis index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyName (String): The axis name to parse.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the parsed axis index, or <code>null</code> if it could not be parsed.</div>
        </p>
        <p id="Reference_functions_Instance_Create">
        <h2 style="margin-bottom: 8px;">Instance.Create</h2>
        <code>Instance.Create(className, x, y[, flag])</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a new instance of an object class, and calls its <code>Create</code> event with the flag.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        <li>x (Number): X position of where to place the new instance.</li>
        <li>y (Number): Y position of where to place the new instance.</li>
        <li>flag (any type): Value to pass to the <code>Create</code> event. (Default: <code>0</code>)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the new instance.</div>
        </p>
        <p id="Reference_functions_Instance_GetNth">
        <h2 style="margin-bottom: 8px;">Instance.GetNth</h2>
        <code>Instance.GetNth(className, n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the n'th instance of an object class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        <li>n (Integer): n'th of object class' instances to get. <code>0</code> is first.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns n'th of object class' instances, <code>null</code> if instance cannot be found or class does not exist.</div>
        </p>
        <p id="Reference_functions_Instance_IsClass">
        <h2 style="margin-bottom: 8px;">Instance.IsClass</h2>
        <code>Instance.IsClass(instance, className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether or not the instance is of a specified object class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to check.</li>
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether or not the instance is of a specified object class.</div>
        </p>
        <p id="Reference_functions_Instance_GetCount">
        <h2 style="margin-bottom: 8px;">Instance.GetCount</h2>
        <code>Instance.GetCount(className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets amount of currently active instances in an object class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns count of currently active instances in an object class.</div>
        </p>
        <p id="Reference_functions_Instance_GetNextInstance">
        <h2 style="margin-bottom: 8px;">Instance.GetNextInstance</h2>
        <code>Instance.GetNextInstance(instance, n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the instance created after or before the specified instance. <code>0</code> is the next instance, <code>-1</code> is the previous instance.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to check.</li>
        <li>n (Integer): How many instances after or before the desired instance is to the checking instance.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the desired instance.</div>
        </p>
        <p id="Reference_functions_Instance_GetBySlotID">
        <h2 style="margin-bottom: 8px;">Instance.GetBySlotID</h2>
        <code>Instance.GetBySlotID(slotID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets an instance by its slot ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>slotID (Integer): The slot ID to search a corresponding instance for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the instance corresponding to the specified slot ID, <code>null</code> if the instance could not be found.</div>
        </p>
        <p id="Reference_functions_Instance_DisableAutoAnimate">
        <h2 style="margin-bottom: 8px;">Instance.DisableAutoAnimate</h2>
        <code>Instance.DisableAutoAnimate(disableAutoAnimate)</code>
        <div style="margin-top: 8px; font-size: 14px;">Disables the AutoAnimate function of entities.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>disableAutoAnimate (Boolean): Whether to turn off the engine automatically applying AutoAnimate when entities are initialized.</li>
        </ul>
        </p>
        <p id="Reference_functions_Instance_Copy">
        <h2 style="margin-bottom: 8px;">Instance.Copy</h2>
        <code>Instance.Copy(destInstance, srcInstance[, copyClass])</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies an instance into another.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>destInstance (Instance): The destination instance.</li>
        <li>srcInstance (Instance): The source instance.</li>
        <li>copyClass (Boolean): Whether to copy the class of the source entity (defaults to true).</li>
        </ul>
        </p>
        <p id="Reference_functions_Instance_ChangeClass">
        <h2 style="margin-bottom: 8px;">Instance.ChangeClass</h2>
        <code>Instance.ChangeClass(instance, className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes an instance's class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to swap.</li>
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the instance was swapped.</div>
        </p>
        <p id="Reference_functions_JSON_Parse">
        <h2 style="margin-bottom: 8px;">JSON.Parse</h2>
        <code>JSON.Parse(jsonText)</code>
        <div style="margin-top: 8px; font-size: 14px;">Decodes a String value into a Map value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>jsonText (String): JSON-compliant text.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value if the text can be decoded, otherwise returns <code>null</code>.</div>
        </p>
        <p id="Reference_functions_JSON_ToString">
        <h2 style="margin-bottom: 8px;">JSON.ToString</h2>
        <code>JSON.ToString(json, prettyPrint)</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Map value into a String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>json (Map): Map value.</li>
        <li>prettyPrint (Boolean): Whether or not to use spacing and newlines in the text.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a JSON string based on the Map value.</div>
        </p>
        <p id="Reference_functions_Math_Cos">
        <h2 style="margin-bottom: 8px;">Math.Cos</h2>
        <code>Math.Cos(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Angle (in radians) to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine of x radians.</div>
        </p>
        <p id="Reference_functions_Math_Sin">
        <h2 style="margin-bottom: 8px;">Math.Sin</h2>
        <code>Math.Sin(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the sine of an angle of x radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Angle (in radians) to get the sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The sine of x radians.</div>
        </p>
        <p id="Reference_functions_Math_Tan">
        <h2 style="margin-bottom: 8px;">Math.Tan</h2>
        <code>Math.Tan(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Angle (in radians) to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent of x radians.</div>
        </p>
        <p id="Reference_functions_Math_Acos">
        <h2 style="margin-bottom: 8px;">Math.Acos</h2>
        <code>Math.Acos(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arccosine of x.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Number value to get the arccosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle (in radians) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Asin">
        <h2 style="margin-bottom: 8px;">Math.Asin</h2>
        <code>Math.Asin(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arcsine of x.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Number value to get the arcsine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle (in radians) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Atan">
        <h2 style="margin-bottom: 8px;">Math.Atan</h2>
        <code>Math.Atan(x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arctangent angle (in radians) from x and y.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): x value.</li>
        <li>y (Decimal): y value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The angle from x and y.</div>
        </p>
        <p id="Reference_functions_Math_Distance">
        <h2 style="margin-bottom: 8px;">Math.Distance</h2>
        <code>Math.Distance(x1, y1, x2, y2)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the distance from (x1,y1) to (x2,y2) in pixels.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of first point.</li>
        <li>y1 (Number): Y position of first point.</li>
        <li>x2 (Number): X position of second point.</li>
        <li>y2 (Number): Y position of second point.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the distance from (x1,y1) to (x2,y2) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Direction">
        <h2 style="margin-bottom: 8px;">Math.Direction</h2>
        <code>Math.Direction(x1, y1, x2, y2)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the angle from (x1,y1) to (x2,y2) in radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of first point.</li>
        <li>y1 (Number): Y position of first point.</li>
        <li>x2 (Number): X position of second point.</li>
        <li>y2 (Number): Y position of second point.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle from (x1,y1) to (x2,y2) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Abs">
        <h2 style="margin-bottom: 8px;">Math.Abs</h2>
        <code>Math.Abs(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the absolute value of a Number.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the absolute value of n.</div>
        </p>
        <p id="Reference_functions_Math_Min">
        <h2 style="margin-bottom: 8px;">Math.Min</h2>
        <code>Math.Min(a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the lesser value of two Number values.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>a (Number): Number value.</li>
        <li>b (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the lesser value of a and b.</div>
        </p>
        <p id="Reference_functions_Math_Max">
        <h2 style="margin-bottom: 8px;">Math.Max</h2>
        <code>Math.Max(a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the greater value of two Number values.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>a (Number): Number value.</li>
        <li>b (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the greater value of a and b.</div>
        </p>
        <p id="Reference_functions_Math_Clamp">
        <h2 style="margin-bottom: 8px;">Math.Clamp</h2>
        <code>Math.Clamp(n, minValue, maxValue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the value clamped between a range.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        <li>minValue (Number): Minimum range value to clamp to.</li>
        <li>maxValue (Number): Maximum range value to clamp to.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Number value if within the range, otherwise returns closest range value.</div>
        </p>
        <p id="Reference_functions_Math_Sign">
        <h2 style="margin-bottom: 8px;">Math.Sign</h2>
        <code>Math.Sign(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the sign associated with a Decimal value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>-1</code> if <code>n</code> is negative, <code>1</code> if positive, and <code>0</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Math_Random">
        <h2 style="margin-bottom: 8px;">Math.Random</h2>
        <code>Math.Random()</code>
        <div style="margin-top: 8px; font-size: 14px;">Get a random number between 0.0 and 1.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number.</div>
        </p>
        <p id="Reference_functions_Math_RandomMax">
        <h2 style="margin-bottom: 8px;">Math.RandomMax</h2>
        <code>Math.RandomMax(max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between 0.0 and a specified maximum.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>max (Number): Maximum non-inclusive value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number.</div>
        </p>
        <p id="Reference_functions_Math_RandomRange">
        <h2 style="margin-bottom: 8px;">Math.RandomRange</h2>
        <code>Math.RandomRange(min, max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between specified minimum and a specified maximum.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>min (Number): Minimum non-inclusive value.</li>
        <li>max (Number): Maximum non-inclusive value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number.</div>
        </p>
        <p id="Reference_functions_Math_GetRandSeed">
        <h2 style="margin-bottom: 8px;">Math.GetRandSeed</h2>
        <code>Math.GetRandSeed()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the engine's random seed value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an integer of the engine's random seed value.</div>
        </p>
        <p id="Reference_functions_Math_SetRandSeed">
        <h2 style="margin-bottom: 8px;">Math.SetRandSeed</h2>
        <code>Math.SetRandSeed(key)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the engine's random seed value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>key (Integer): Value to set the seed to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Math_RandomInteger">
        <h2 style="margin-bottom: 8px;">Math.RandomInteger</h2>
        <code>Math.RandomInteger(min, max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between specified minimum integer and a specified maximum integer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>min (Integer): Minimum non-inclusive integer value.</li>
        <li>max (Integer): Maximum non-inclusive integer value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number as an integer.</div>
        </p>
        <p id="Reference_functions_Math_RandomIntegerSeeded">
        <h2 style="margin-bottom: 8px;">Math.RandomIntegerSeeded</h2>
        <code>Math.RandomIntegerSeeded(min, max[, seed])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between specified minimum integer and a specified maximum integer based off of a given seed.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>min (Integer): Minimum non-inclusive integer value.</li>
        <li>max (Integer): Maximum non-inclusive integer value.</li>
        <li>seed (Integer): Seed of which to base the number.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number as an integer.</div>
        </p>
        <p id="Reference_functions_Math_Floor">
        <h2 style="margin-bottom: 8px;">Math.Floor</h2>
        <code>Math.Floor(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rounds the number n downward, returning the largest integral value that is not greater than n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be rounded.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the floored number value.</div>
        </p>
        <p id="Reference_functions_Math_Ceil">
        <h2 style="margin-bottom: 8px;">Math.Ceil</h2>
        <code>Math.Ceil(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rounds the number n upward, returning the smallest integral value that is not less than n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be rounded.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the ceiling-ed number value.</div>
        </p>
        <p id="Reference_functions_Math_Round">
        <h2 style="margin-bottom: 8px;">Math.Round</h2>
        <code>Math.Round(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rounds the number n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be rounded.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the rounded number value.</div>
        </p>
        <p id="Reference_functions_Math_Sqrt">
        <h2 style="margin-bottom: 8px;">Math.Sqrt</h2>
        <code>Math.Sqrt(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Retrieves the square root of the number n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be square rooted.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the square root of the number n.</div>
        </p>
        <p id="Reference_functions_Math_Pow">
        <h2 style="margin-bottom: 8px;">Math.Pow</h2>
        <code>Math.Pow(n, p)</code>
        <div style="margin-top: 8px; font-size: 14px;">Retrieves the number n to the power of p.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number for the base of the exponent.</li>
        <li>p (Number): Exponent.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the number n to the power of p.</div>
        </p>
        <p id="Reference_functions_Math_Exp">
        <h2 style="margin-bottom: 8px;">Math.Exp</h2>
        <code>Math.Exp(p)</code>
        <div style="margin-top: 8px; font-size: 14px;">Retrieves the constant e (2.717) to the power of p.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>p (Number): Exponent.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the result number.</div>
        </p>
        <p id="Reference_functions_Math_ClearTrigLookupTables">
        <h2 style="margin-bottom: 8px;">Math.ClearTrigLookupTables</h2>
        <code>Math.ClearTrigLookupTables()</code>
        <div style="margin-top: 8px; font-size: 14px;">Clears the engine's angle lookup tables.</div>
        </p>
        <p id="Reference_functions_Math_CalculateTrigAngles">
        <h2 style="margin-bottom: 8px;">Math.CalculateTrigAngles</h2>
        <code>Math.CalculateTrigAngles()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the engine's angle lookup tables.</div>
        </p>
        <p id="Reference_functions_Math_Sin1024">
        <h2 style="margin-bottom: 8px;">Math.Sin1024</h2>
        <code>Math.Sin1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the sine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The sine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_Cos1024">
        <h2 style="margin-bottom: 8px;">Math.Cos1024</h2>
        <code>Math.Cos1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_Tan1024">
        <h2 style="margin-bottom: 8px;">Math.Tan1024</h2>
        <code>Math.Tan1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_ASin1024">
        <h2 style="margin-bottom: 8px;">Math.ASin1024</h2>
        <code>Math.ASin1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc sine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc sine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_ACos1024">
        <h2 style="margin-bottom: 8px;">Math.ACos1024</h2>
        <code>Math.ACos1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc cosine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc cosine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_Cos512">
        <h2 style="margin-bottom: 8px;">Math.Cos512</h2>
        <code>Math.Cos512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine 512 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_Tan512">
        <h2 style="margin-bottom: 8px;">Math.Tan512</h2>
        <code>Math.Tan512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent 512 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_ASin512">
        <h2 style="margin-bottom: 8px;">Math.ASin512</h2>
        <code>Math.ASin512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc sine of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc sine 512 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_ACos512">
        <h2 style="margin-bottom: 8px;">Math.ACos512</h2>
        <code>Math.ACos512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc cosine of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc cosine 512 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_Cos256">
        <h2 style="margin-bottom: 8px;">Math.Cos256</h2>
        <code>Math.Cos256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine 256 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_Tan256">
        <h2 style="margin-bottom: 8px;">Math.Tan256</h2>
        <code>Math.Tan256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent 256 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_ASin256">
        <h2 style="margin-bottom: 8px;">Math.ASin256</h2>
        <code>Math.ASin256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc sine of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc sine 256 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_ACos256">
        <h2 style="margin-bottom: 8px;">Math.ACos256</h2>
        <code>Math.ACos256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc cosine of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc cosine 256 of the angle.</div>
        </p>
        <p id="Reference_functions_Math_RadianToInteger">
        <h2 style="margin-bottom: 8px;">Math.RadianToInteger</h2>
        <code>Math.RadianToInteger(radian)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the integer conversion of a radian, based on 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>radian (Decimal): Radian value to convert.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">An integer value of the converted radian.</div>
        </p>
        <p id="Reference_functions_Math_IntegerToRadian">
        <h2 style="margin-bottom: 8px;">Math.IntegerToRadian</h2>
        <code>Math.IntegerToRadian(integer)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the radian decimal conversion of an integer, based on 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>integer (Integer): Integer value to convert.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">A radian decimal value of the converted integer.</div>
        </p>
        <p id="Reference_functions_Matrix_Create">
        <h2 style="margin-bottom: 8px;">Matrix.Create</h2>
        <code>Matrix.Create()</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a 4x4 matrix and sets it to the identity. <br/>"The model, view and projection matrices are three separate matrices. <br/>Model maps from an object's local coordinate space into world space, <br/>view from world space to view space, projection from camera to screen.<br/><br/>If you compose all three, you can use the one result to map all the way from <br/>object space to screen space, making you able to work out what you need to <br/>pass on to the next stage of a programmable pipeline from the incoming <br/>vertex positions." - Tommy (https://stackoverflow.com/questions/5550620/the-purpose-of-model-view-projection-matrix)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Matrix as an Array.</div>
        </p>
        <p id="Reference_functions_Matrix_Identity">
        <h2 style="margin-bottom: 8px;">Matrix.Identity</h2>
        <code>Matrix.Identity(matrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to the identity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to set to the identity.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Perspective">
        <h2 style="margin-bottom: 8px;">Matrix.Perspective</h2>
        <code>Matrix.Perspective(matrix, fov, near, far, aspect)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a perspective projection matrix.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to generate the projection matrix into.</li>
        <li>fov (Number): The field of view, in degrees.</li>
        <li>near (Number): The near clipping plane value.</li>
        <li>far (Number): The far clipping plane value.</li>
        <li>aspect (Number): The aspect ratio.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Copy">
        <h2 style="margin-bottom: 8px;">Matrix.Copy</h2>
        <code>Matrix.Copy(matrixDestination, matrixSource)</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies the matrix to the destination.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrixDestination (Matrix): Destination.</li>
        <li>matrixSource (Matrix): Source.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Multiply">
        <h2 style="margin-bottom: 8px;">Matrix.Multiply</h2>
        <code>Matrix.Multiply(matrix, a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Multiplies two matrices.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>a (Matrix): The first matrix to use for multiplying.</li>
        <li>b (Matrix): The second matrix to use for multiplying.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Translate">
        <h2 style="margin-bottom: 8px;">Matrix.Translate</h2>
        <code>Matrix.Translate(matrix, x, y, z[, resetToIdentity, actuallyTranslate])</code>
        <div style="margin-top: 8px; font-size: 14px;">Translates the matrix.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X position value.</li>
        <li>y (Number): Y position value.</li>
        <li>z (Number): Z position value.</li>
        <li>resetToIdentity (Boolean): Whether or not to calculate the translation values based on the matrix. (Default: <code>false</code>)</li>
        <li>actuallyTranslate (Boolean): Adds the translation components to the matrix instead of overwriting them (Preserves older code functionality, please fix me!). (Default: <code>false</code>)</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Scale">
        <h2 style="margin-bottom: 8px;">Matrix.Scale</h2>
        <code>Matrix.Scale(matrix, x, y, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a scale identity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X scale value.</li>
        <li>y (Number): Y scale value.</li>
        <li>z (Number): Z scale value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Rotate">
        <h2 style="margin-bottom: 8px;">Matrix.Rotate</h2>
        <code>Matrix.Rotate(matrix, x, y, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation identity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X rotation value.</li>
        <li>y (Number): Y rotation value.</li>
        <li>z (Number): Z rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Create256">
        <h2 style="margin-bottom: 8px;">Matrix.Create256</h2>
        <code>Matrix.Create256()</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a 4x4 matrix based on the decimal 256.0. <br/>* \return Returns the Matrix as an Array.</div>
        </p>
        <p id="Reference_functions_Matrix_Identity256">
        <h2 style="margin-bottom: 8px;">Matrix.Identity256</h2>
        <code>Matrix.Identity256(matrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to the identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Multiply256">
        <h2 style="margin-bottom: 8px;">Matrix.Multiply256</h2>
        <code>Matrix.Multiply256(matrix, a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Multiplies two matrices based on the deciaml 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>a (Matrix): The first matrix to use for multiplying.</li>
        <li>b (Matrix): The second matrix to use for multiplying.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Translate256">
        <h2 style="margin-bottom: 8px;">Matrix.Translate256</h2>
        <code>Matrix.Translate256(matrix, x, y, z, setIdentity)</code>
        <div style="margin-top: 8px; font-size: 14px;">Translates the matrix based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X position value.</li>
        <li>y (Number): Y position value.</li>
        <li>z (Number): Z position value.</li>
        <li>setIdentity (Boolean): Whether or not to set the matrix as the identity.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Scale256">
        <h2 style="margin-bottom: 8px;">Matrix.Scale256</h2>
        <code>Matrix.Scale256(matrix, scaleX, scaleY, scaleZ)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a scale identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>scaleX (Number): X scale value.</li>
        <li>scaleY (Number): Y scale value.</li>
        <li>scaleZ (Number): Z scale value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_RotateX256">
        <h2 style="margin-bottom: 8px;">Matrix.RotateX256</h2>
        <code>Matrix.RotateX256(matrix, rotationY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation X identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationY (Number): X rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_RotateY256">
        <h2 style="margin-bottom: 8px;">Matrix.RotateY256</h2>
        <code>Matrix.RotateY256(matrix, rotationY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation Y identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationY (Number): Y rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_RotateZ256">
        <h2 style="margin-bottom: 8px;">Matrix.RotateZ256</h2>
        <code>Matrix.RotateZ256(matrix, rotationZ)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation Z identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationZ (Number): Z rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Rotate256">
        <h2 style="margin-bottom: 8px;">Matrix.Rotate256</h2>
        <code>Matrix.Rotate256(matrix, rotationX, rotationY, rotationZ)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation identity based on 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationX (Number): X rotation value.</li>
        <li>rotationY (Number): Y rotation value.</li>
        <li>rotationZ (Number): Z rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Model_GetVertexCount">
        <h2 style="margin-bottom: 8px;">Model.GetVertexCount</h2>
        <code>Model.GetVertexCount(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many vertices are in the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The vertex count.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationCount">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationCount</h2>
        <code>Model.GetAnimationCount(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many animations exist in the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The animation count. Will always return <code>0</code> for vertex-animated models.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationName">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationName</h2>
        <code>Model.GetAnimationName(model, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the model animation with the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        <li>animation (Integer): Index of the animation.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the animation name, or <code>null</code> if the model contains no animations.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationIndex">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationIndex</h2>
        <code>Model.GetAnimationIndex(model, animationName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the index of the model animation with the specified name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        <li>animationName (String): Name of the animation to find.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the animation index, or <code>-1</code> if the animation could not be found. Will always return <code>-1</code> if the model contains no animations.</div>
        </p>
        <p id="Reference_functions_Model_GetFrameCount">
        <h2 style="margin-bottom: 8px;">Model.GetFrameCount</h2>
        <code>Model.GetFrameCount(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many frames exist in the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The frame count. Will always return <code>0</code> for skeletal-animated models.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationLength">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationLength</h2>
        <code>Model.GetAnimationLength(model, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the length of the animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        <li>animation (Integer): The animation index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The number of keyframes in the animation.</div>
        </p>
        <p id="Reference_functions_Model_HasMaterials">
        <h2 style="margin-bottom: 8px;">Model.HasMaterials</h2>
        <code>Model.HasMaterials(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if the model has materials.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the model has materials, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Model_HasBones">
        <h2 style="margin-bottom: 8px;">Model.HasBones</h2>
        <code>Model.HasBones(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if the model has bones.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the model has bones, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Model_CreateArmature">
        <h2 style="margin-bottom: 8px;">Model.CreateArmature</h2>
        <code>Model.CreateArmature(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates an armature from the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the armature.</div>
        </p>
        <p id="Reference_functions_Model_PoseArmature">
        <h2 style="margin-bottom: 8px;">Model.PoseArmature</h2>
        <code>Model.PoseArmature(model, armature[, animation, frame])</code>
        <div style="margin-top: 8px; font-size: 14px;">Poses an armature.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        <li>armature (Integer): The armature index to pose.</li>
        <li>animation (Integer): Animation to pose the armature.</li>
        <li>frame (Decimal): Frame to pose the armature.</li>
        </ul>
        </p>
        <p id="Reference_functions_Model_ResetArmature">
        <h2 style="margin-bottom: 8px;">Model.ResetArmature</h2>
        <code>Model.ResetArmature(model, armature)</code>
        <div style="margin-top: 8px; font-size: 14px;">Resets an armature to its default pose.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        <li>armature (Integer): The armature index to reset.</li>
        </ul>
        </p>
        <p id="Reference_functions_Model_DeleteArmature">
        <h2 style="margin-bottom: 8px;">Model.DeleteArmature</h2>
        <code>Model.DeleteArmature(model, armature)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deletes an armature from the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        <li>armature (Integer): The armature index to delete.</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_Play">
        <h2 style="margin-bottom: 8px;">Music.Play</h2>
        <code>Music.Play(music[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track finishes playing, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_PlayAtTime">
        <h2 style="margin-bottom: 8px;">Music.PlayAtTime</h2>
        <code>Music.PlayAtTime(music, startPoint[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it at a time (in seconds).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>startPoint (Decimal): The time (in seconds) to start the music at.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track finishes playing, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_Stop">
        <h2 style="margin-bottom: 8px;">Music.Stop</h2>
        <code>Music.Stop(music)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the music from the music stack, stopping it if currently playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_StopWithFadeOut">
        <h2 style="margin-bottom: 8px;">Music.StopWithFadeOut</h2>
        <code>Music.StopWithFadeOut(seconds)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the music at the top of the music stack, fading it out over a time period.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>seconds (Decimal): The time period to fade out the music, in seconds.</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_Pause">
        <h2 style="margin-bottom: 8px;">Music.Pause</h2>
        <code>Music.Pause()</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses the music at the top of the music stack.</div>
        </p>
        <p id="Reference_functions_Music_Resume">
        <h2 style="margin-bottom: 8px;">Music.Resume</h2>
        <code>Music.Resume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Resumes the music at the top of the music stack.</div>
        </p>
        <p id="Reference_functions_Music_Clear">
        <h2 style="margin-bottom: 8px;">Music.Clear</h2>
        <code>Music.Clear()</code>
        <div style="margin-top: 8px; font-size: 14px;">Completely clears the music stack, stopping all music.</div>
        </p>
        <p id="Reference_functions_Music_Loop">
        <h2 style="margin-bottom: 8px;">Music.Loop</h2>
        <code>Music.Loop(music, loop, loopPoint[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it, looping back to the specified sample index if it reaches the end of playback.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>loop (Boolean): Unused.</li>
        <li>loopPoint (Integer): The sample index to loop back to.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track is interrupted, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_LoopAtTime">
        <h2 style="margin-bottom: 8px;">Music.LoopAtTime</h2>
        <code>Music.LoopAtTime(music, startPoint, loop, loopPoint[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it, looping back to the specified sample index if it reaches the end of playback.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>startPoint (Decimal): The time (in seconds) to start the music at.</li>
        <li>loop (Boolean): Unused.</li>
        <li>loopPoint (Integer): The sample index to loop back to.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track is interrupted, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_IsPlaying">
        <h2 style="margin-bottom: 8px;">Music.IsPlaying</h2>
        <code>Music.IsPlaying(music)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if the specified music is currently playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether or not the music is playing.</div>
        </p>
        <p id="Reference_functions_Music_GetPosition">
        <h2 style="margin-bottom: 8px;">Music.GetPosition</h2>
        <code>Music.GetPosition(music)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the position of the current track playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to get the current position (in seconds) of.</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_Alter">
        <h2 style="margin-bottom: 8px;">Music.Alter</h2>
        <code>Music.Alter(panning, speed, volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Alters the playback conditions of the current track playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it.</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed.</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Number_ToString">
        <h2 style="margin-bottom: 8px;">Number.ToString</h2>
        <code>Number.ToString(n[, base])</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Number to a String.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        <li>base (Integer): radix</li>
        </ul>
        </p>
        <p id="Reference_functions_Number_AsInteger">
        <h2 style="margin-bottom: 8px;">Number.AsInteger</h2>
        <code>Number.AsInteger(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Decimal to an Integer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Number_AsDecimal">
        <h2 style="margin-bottom: 8px;">Number.AsDecimal</h2>
        <code>Number.AsDecimal(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Integer to an Decimal.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Decimal value.</div>
        </p>
        <p id="Reference_functions_Object_Loaded">
        <h2 style="margin-bottom: 8px;">Object.Loaded</h2>
        <code>Object.Loaded(className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an object class is loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the class is loaded.</div>
        </p>
        <p id="Reference_functions_Object_SetActivity">
        <h2 style="margin-bottom: 8px;">Object.SetActivity</h2>
        <code>Object.SetActivity(className, Activity)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the active state of an object to determine if/when it runs its GlobalUpdate function.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        <li>Activity (Integer): The active state to set the object to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Object_GetActivity">
        <h2 style="margin-bottom: 8px;">Object.GetActivity</h2>
        <code>Object.GetActivity(className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the active state of an object that determines if/when it runs its GlobalUpdate function.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the active state of the object if it is loaded, otherwise returns -1.</div>
        </p>
        <p id="Reference_functions_Palette_EnablePaletteUsage">
        <h2 style="margin-bottom: 8px;">Palette.EnablePaletteUsage</h2>
        <code>Palette.EnablePaletteUsage(usePalettes)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables palette usage for the application.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>usePalettes (Boolean): Whether or not to use palettes.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_LoadFromResource">
        <h2 style="margin-bottom: 8px;">Palette.LoadFromResource</h2>
        <code>Palette.LoadFromResource(paletteIndex, filename[, activeRows])</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads palette from an .act, .col, .gif, .png, or .hpal resource.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette to load to.</li>
        <li>filename (String): Filepath of resource.</li>
        <li>activeRows (Bitfield): Which rows of 16 colors will not be loaded for .act, .col, and .gif files, from bottom to top.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_LoadFromImage">
        <h2 style="margin-bottom: 8px;">Palette.LoadFromImage</h2>
        <code>Palette.LoadFromImage(paletteIndex, image)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads palette from an image resource.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette to load to.</li>
        <li>image (Integer): Index of the loaded image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_GetColor">
        <h2 style="margin-bottom: 8px;">Palette.GetColor</h2>
        <code>Palette.GetColor(paletteIndex, colorIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a color from the specified palette.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndex (Integer): Index of color.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_SetColor">
        <h2 style="margin-bottom: 8px;">Palette.SetColor</h2>
        <code>Palette.SetColor(paletteIndex, colorIndex, hex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a color on the specified palette, format 0xRRGGBB.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndex (Integer): Index of color.</li>
        <li>hex (Integer): Hexadecimal color value to set the color to. (format: 0xRRGGBB)</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_MixPalettes">
        <h2 style="margin-bottom: 8px;">Palette.MixPalettes</h2>
        <code>Palette.MixPalettes(destinationPaletteIndex, paletteIndexA, paletteIndexB, mixRatio, colorIndexStart, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Mixes colors between two palettes and outputs to another palette.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>destinationPaletteIndex (Integer): Index of palette to put colors to.</li>
        <li>paletteIndexA (Integer): First index of palette.</li>
        <li>paletteIndexB (Integer): Second index of palette.</li>
        <li>mixRatio (Number): Percentage to mix the colors between 0.0 - 1.0.</li>
        <li>colorIndexStart (Integer): First index of colors to mix.</li>
        <li>colorCount (Integer): Amount of colors to mix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_RotateColorsLeft">
        <h2 style="margin-bottom: 8px;">Palette.RotateColorsLeft</h2>
        <code>Palette.RotateColorsLeft(paletteIndex, colorIndexStart, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Shifts the colors on the palette to the left.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndexStart (Integer): First index of colors to shift.</li>
        <li>colorCount (Integer): Amount of colors to shift.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_RotateColorsRight">
        <h2 style="margin-bottom: 8px;">Palette.RotateColorsRight</h2>
        <code>Palette.RotateColorsRight(paletteIndex, colorIndexStart, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Shifts the colors on the palette to the right.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndexStart (Integer): First index of colors to shift.</li>
        <li>colorCount (Integer): Amount of colors to shift.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_CopyColors">
        <h2 style="margin-bottom: 8px;">Palette.CopyColors</h2>
        <code>Palette.CopyColors(paletteIndexA, colorIndexStartA, paletteIndexB, colorIndexStartB, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies colors from Palette A to Palette B</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndexA (Integer): Index of palette to get colors from.</li>
        <li>colorIndexStartA (Integer): First index of colors to copy.</li>
        <li>paletteIndexB (Integer): Index of palette to put colors to.</li>
        <li>colorIndexStartB (Integer): First index of colors to be placed.</li>
        <li>colorCount (Integer): Amount of colors to be copied.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_SetPaletteIndexLines">
        <h2 style="margin-bottom: 8px;">Palette.SetPaletteIndexLines</h2>
        <code>Palette.SetPaletteIndexLines(paletteIndex, lineStart, lineEnd)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the palette to be used for drawing on certain Y-positions on the screen (between the start and end lines).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>lineStart (Number): Start line to set to the palette.</li>
        <li>lineEnd (Number): Line where to stop setting the palette.</li>
        </ul>
        </p>
        <p id="Reference_functions_Resources_LoadSprite">
        <h2 style="margin-bottom: 8px;">Resources.LoadSprite</h2>
        <code>Resources.LoadSprite(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Sprite resource, returning its Sprite index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadImage">
        <h2 style="margin-bottom: 8px;">Resources.LoadImage</h2>
        <code>Resources.LoadImage(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads an Image resource, returning its Image index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadFont">
        <h2 style="margin-bottom: 8px;">Resources.LoadFont</h2>
        <code>Resources.LoadFont(filename, pixelSize, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Font resource, returning its Font index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String):</li>
        <li>pixelSize (Number):</li>
        <li>unloadPolicy (Integer):</li>
        </ul>
        </p>
        <p id="Reference_functions_Resources_LoadModel">
        <h2 style="margin-bottom: 8px;">Resources.LoadModel</h2>
        <code>Resources.LoadModel(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads Model resource, returning its Model index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadMusic">
        <h2 style="margin-bottom: 8px;">Resources.LoadMusic</h2>
        <code>Resources.LoadMusic(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Music resource, returning its Music index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadSound">
        <h2 style="margin-bottom: 8px;">Resources.LoadSound</h2>
        <code>Resources.LoadSound(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Sound resource, returning its Sound index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadVideo">
        <h2 style="margin-bottom: 8px;">Resources.LoadVideo</h2>
        <code>Resources.LoadVideo(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Video resource, returning its Video index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String):</li>
        <li>unloadPolicy (Integer):</li>
        </ul>
        </p>
        <p id="Reference_functions_Resources_FileExists">
        <h2 style="margin-bottom: 8px;">Resources.FileExists</h2>
        <code>Resources.FileExists(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if a Resource exists with the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): The given filename.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the Resource exists, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Resources_ReadAllText">
        <h2 style="margin-bottom: 8px;">Resources.ReadAllText</h2>
        <code>Resources.ReadAllText(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads all text from the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the resource to read.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns all the text in the resource as a String value if it can be read, otherwise it returns a <code>null</code> value if it cannot be read.</div>
        </p>
        <p id="Reference_functions_Scene_ProcessObjectMovement">
        <h2 style="margin-bottom: 8px;">Scene.ProcessObjectMovement</h2>
        <code>Scene.ProcessObjectMovement(entity, outer, inner)</code>
        <div style="margin-top: 8px; font-size: 14px;">Processes movement of an instance with an outer hitbox and an inner hitbox.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>entity (Instance): The instance to move.</li>
        <li>outer (Array): Array containing the outer hitbox.</li>
        <li>inner (Array): Array containing the inner hitbox.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_ObjectTileCollision">
        <h2 style="margin-bottom: 8px;">Scene.ObjectTileCollision</h2>
        <code>Scene.ObjectTileCollision(entity, cLayers, cMode, cPlane, xOffset, yOffset, setPos)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks tile collision based on where an instance should check.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>entity (Instance): The instance to base the values on.</li>
        <li>cLayers (Bitfield): Which layers the entity can collide with.</li>
        <li>cMode (Integer): Collision mode of the entity (floor, left wall, roof, right wall).</li>
        <li>cPlane (Integer): Collision plane to get the collision of (A or B).</li>
        <li>xOffset (Number): How far from the entity's X value to start from.</li>
        <li>yOffset (Number): How far from the entity's Y value to start from.</li>
        <li>setPos (Boolean): Whether to set the entity's position if collision is found.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the instance has collided with a tile.</div>
        </p>
        <p id="Reference_functions_Scene_ObjectTileGrip">
        <h2 style="margin-bottom: 8px;">Scene.ObjectTileGrip</h2>
        <code>Scene.ObjectTileGrip(entity, cLayers, cMode, cPlane, xOffset, yOffset, tolerance)</code>
        <div style="margin-top: 8px; font-size: 14px;">Keeps an instance gripped to tile collision based on where an instance should check.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>entity (Instance): The instance to move.</li>
        <li>cLayers (Bitfield): Which layers the entity can collide with.</li>
        <li>cMode (Integer): Collision mode of the entity (floor, left wall, roof, right wall).</li>
        <li>cPlane (Integer): Collision plane to get the collision of (A or B).</li>
        <li>xOffset (Decimal): How far from the entity's X value to start from.</li>
        <li>yOffset (Decimal): How far from the entity's Y value to start from.</li>
        <li>tolerance (Decimal): How far of a tolerance the entity should check for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether to grip the instance.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionTouch">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionTouch</h2>
        <code>Scene.CheckObjectCollisionTouch(thisEnity, thisHitbox, otherEntity, otherHitbox)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching another instance with their respective hitboxes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEnity (Instance): The first instance to check.</li>
        <li>thisHitbox (Array): Array containing the first entity's hitbox.</li>
        <li>otherEntity (Instance): The other instance to check.</li>
        <li>otherHitbox (Array): Array containing the other entity's hitbox.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value whether the entities are touching.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionCircle">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionCircle</h2>
        <code>Scene.CheckObjectCollisionCircle(thisEnity, thisRadius, otherEntity, otherRadius)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching another instance with within their respective radii.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEnity (Instance): The first instance to check.</li>
        <li>thisRadius (Decimal): Radius of the first entity to check.</li>
        <li>otherEntity (Instance): The other instance to check.</li>
        <li>otherRadius (Array): Radius of the other entity to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value whether the entities have collided.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionBox">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionBox</h2>
        <code>Scene.CheckObjectCollisionBox(thisEnity, thisHitbox, otherEntity, otherHitbox, setValues)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching another instance with their respective hitboxes and sets the values of the other instance if specified.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEnity (Instance): The first instance to check.</li>
        <li>thisHitbox (Array): Array containing the first entity's hitbox.</li>
        <li>otherEntity (Instance): The other instance to check.</li>
        <li>otherHitbox (Array): Array containing the other entity's hitbox.</li>
        <li>setValues (Boolean): Whether to set the values of the other entity.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the side the entities are colliding on.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionPlatform">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionPlatform</h2>
        <code>Scene.CheckObjectCollisionPlatform(thisEnity, thisHitbox, otherEntity, otherHitbox, setValues)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching the top of another instance with their respective hitboxes and sets the values of the other instance if specified.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEnity (Instance): The first instance to check.</li>
        <li>thisHitbox (Array): Array containing the first entity's hitbox.</li>
        <li>otherEntity (Instance): The other instance to check whether it is on top of the first instance.</li>
        <li>otherHitbox (Array): Array containing the other entity's hitbox.</li>
        <li>setValues (Boolean): Whether to set the values of the other entity.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value whether the entities have collided.</div>
        </p>
        <p id="Reference_functions_Scene_Load">
        <h2 style="margin-bottom: 8px;">Scene.Load</h2>
        <code>Scene.Load(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes active scene to the one in the specified resource file.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_LoadNoPersistency">
        <h2 style="margin-bottom: 8px;">Scene.LoadNoPersistency</h2>
        <code>Scene.LoadNoPersistency(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes active scene to the one in the specified resource file, without keeping any persistent objects.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_LoadPosition">
        <h2 style="margin-bottom: 8px;">Scene.LoadPosition</h2>
        <code>Scene.LoadPosition([persistency])</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads the scene located in the scene list's position slot, if a scene list is loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>persistency (Boolean): Whether or not the scene should load with persistency.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_LoadTileCollisions">
        <h2 style="margin-bottom: 8px;">Scene.LoadTileCollisions</h2>
        <code>Scene.LoadTileCollisions(filename[, tilesetID])</code>
        <div style="margin-top: 8px; font-size: 14px;">Load tile collisions from a resource file.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of tile collision file.</li>
        <li>tilesetID (Integer): Tileset to load tile collisions for.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_AreTileCollisionsLoaded">
        <h2 style="margin-bottom: 8px;">Scene.AreTileCollisionsLoaded</h2>
        <code>Scene.AreTileCollisionsLoaded()</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns or whether tile collisions are loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if tile collisions are loaded, and <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Scene_AddTileset">
        <h2 style="margin-bottom: 8px;">Scene.AddTileset</h2>
        <code>Scene.AddTileset(tileset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds a new tileset into the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileset (String): Path of tileset to load.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the tileset was added, and <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Scene_Restart">
        <h2 style="margin-bottom: 8px;">Scene.Restart</h2>
        <code>Scene.Restart()</code>
        <div style="margin-top: 8px; font-size: 14px;">Restarts the active scene.</div>
        </p>
        <p id="Reference_functions_Scene_PropertyExists">
        <h2 style="margin-bottom: 8px;">Scene.PropertyExists</h2>
        <code>Scene.PropertyExists(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists in the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): Name of property to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetProperty">
        <h2 style="margin-bottom: 8px;">Scene.GetProperty</h2>
        <code>Scene.GetProperty(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): Name of property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerCount">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerCount</h2>
        <code>Scene.GetLayerCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of layers in the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of layers in the active scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerIndex">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerIndex</h2>
        <code>Scene.GetLayerIndex(layerName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the layer index of the layer with the specified name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerName (String): Name of the layer to find.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the layer index, or <code>-1</code> if the layer could not be found.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerVisible">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerVisible</h2>
        <code>Scene.GetLayerVisible(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the visibility of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerOpacity">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerOpacity</h2>
        <code>Scene.GetLayerOpacity(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the opacity of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerProperty">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerProperty</h2>
        <code>Scene.GetLayerProperty(layerIndex, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>property (String): Name of property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerExists">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerExists</h2>
        <code>Scene.GetLayerExists(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a layer exists or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDeformSplitLine">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDeformSplitLine</h2>
        <code>Scene.GetLayerDeformSplitLine(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the DeformSplitLine of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDeformOffsetA">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDeformOffsetA</h2>
        <code>Scene.GetLayerDeformOffsetA(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the DeformOffsetA of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDeformOffsetB">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDeformOffsetB</h2>
        <code>Scene.GetLayerDeformOffsetB(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the DeformOffsetB of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_LayerPropertyExists">
        <h2 style="margin-bottom: 8px;">Scene.LayerPropertyExists</h2>
        <code>Scene.LayerPropertyExists(layerIndex, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists in the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>property (String): Name of property to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetName">
        <h2 style="margin-bottom: 8px;">Scene.GetName</h2>
        <code>Scene.GetName()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the active scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetWidth">
        <h2 style="margin-bottom: 8px;">Scene.GetWidth</h2>
        <code>Scene.GetWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the scene (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the width of the scene (in tiles).</div>
        </p>
        <p id="Reference_functions_Scene_GetHeight">
        <h2 style="margin-bottom: 8px;">Scene.GetHeight</h2>
        <code>Scene.GetHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the scene (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the height of the scene (in tiles).</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerWidth">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerWidth</h2>
        <code>Scene.GetLayerWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of a layer index (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the width of the layer index (in tiles).</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerHeight">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerHeight</h2>
        <code>Scene.GetLayerHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of a layer index (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the height of a layer index (in tiles).</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerOffsetX">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerOffsetX</h2>
        <code>Scene.GetLayerOffsetX()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the X offset of a layer index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the X offset of a layer index.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerOffsetY">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerOffsetY</h2>
        <code>Scene.GetLayerOffsetY()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the Y offset of a layer index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Y offset of a layer index.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDrawGroup">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDrawGroup</h2>
        <code>Scene.GetLayerDrawGroup(layerIndex, drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the draw group of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>drawGroup (Integer): Number from 0 to 15. (0 = Back, 15 = Front)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_GetTilesetCount">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetCount</h2>
        <code>Scene.GetTilesetCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of tilesets in the current scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetIndex">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetIndex</h2>
        <code>Scene.GetTilesetIndex(tilesetID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tileset index for the specified filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the tileset index, or <code>-1</code> if there is no tileset with said filename.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetName">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetName</h2>
        <code>Scene.GetTilesetName(tilesetIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tileset name for the specified tileset index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetIndex (Index): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the tileset name.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetTileCount">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetTileCount</h2>
        <code>Scene.GetTilesetTileCount(tilesetID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tile count for the specified tileset.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetFirstTileID">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetFirstTileID</h2>
        <code>Scene.GetTilesetFirstTileID(tilesetID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the first tile index number for the specified tileset.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileWidth">
        <h2 style="margin-bottom: 8px;">Scene.GetTileWidth</h2>
        <code>Scene.GetTileWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of tiles.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the width of tiles.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileHeight">
        <h2 style="margin-bottom: 8px;">Scene.GetTileHeight</h2>
        <code>Scene.GetTileHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of tiles.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the height of tiles.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileSize">
        <h2 style="margin-bottom: 8px;">Scene.GetTileSize</h2>
        <code>Scene.GetTileSize()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the size of tiles. (Deprecated; use <code><a href="#Reference_functions_Scene_GetTileWidth">Scene.GetTileWidth</a></code> and <code><a href="#Reference_functions_Scene_GetTileHeight">Scene.GetTileHeight</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the size of tiles.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileID">
        <h2 style="margin-bottom: 8px;">Scene.GetTileID</h2>
        <code>Scene.GetTileID(layer, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tile's index number at the tile coordinates.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer</li>
        <li>x (Number): X position (in tiles) of the tile</li>
        <li>y (Number): Y position (in tiles) of the tile</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the tile's index number.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileFlipX">
        <h2 style="margin-bottom: 8px;">Scene.GetTileFlipX</h2>
        <code>Scene.GetTileFlipX(layer, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the tile at the tile coordinates is flipped horizontally or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer</li>
        <li>x (Number): X position (in tiles) of the tile</li>
        <li>y (Number): Y position (in tiles) of the tile</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the tile's horizontally flipped.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileFlipY">
        <h2 style="margin-bottom: 8px;">Scene.GetTileFlipY</h2>
        <code>Scene.GetTileFlipY(layer, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the tile at the tile coordinates is flipped vertically or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer</li>
        <li>x (Number): X position (in tiles) of the tile</li>
        <li>y (Number): Y position (in tiles) of the tile</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the tile's vertically flipped.</div>
        </p>
        <p id="Reference_functions_Scene_GetDrawGroupCount">
        <h2 style="margin-bottom: 8px;">Scene.GetDrawGroupCount</h2>
        <code>Scene.GetDrawGroupCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of draw groups in the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of draw groups in the active scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetDrawGroupEntityDepthSorting">
        <h2 style="margin-bottom: 8px;">Scene.GetDrawGroupEntityDepthSorting</h2>
        <code>Scene.GetDrawGroupEntityDepthSorting(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets if the specified draw group sorts objects by depth.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): Number from 0 to 15. (0 = Back, 15 = Front)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetListPos">
        <h2 style="margin-bottom: 8px;">Scene.GetListPos</h2>
        <code>Scene.GetListPos()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current list position of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentFolder">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentFolder</h2>
        <code>Scene.GetCurrentFolder()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current folder of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentID">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentID</h2>
        <code>Scene.GetCurrentID()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current ID of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentSpriteFolder">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentSpriteFolder</h2>
        <code>Scene.GetCurrentSpriteFolder()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current sprite folder of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentCategory">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentCategory</h2>
        <code>Scene.GetCurrentCategory()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current category name of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetActiveCategory">
        <h2 style="margin-bottom: 8px;">Scene.GetActiveCategory</h2>
        <code>Scene.GetActiveCategory()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current category number of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCategoryCount">
        <h2 style="margin-bottom: 8px;">Scene.GetCategoryCount</h2>
        <code>Scene.GetCategoryCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of categories in the scene list.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetStageCount">
        <h2 style="margin-bottom: 8px;">Scene.GetStageCount</h2>
        <code>Scene.GetStageCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of stages in the scene list.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetDebugMode">
        <h2 style="margin-bottom: 8px;">Scene.GetDebugMode</h2>
        <code>Scene.GetDebugMode()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether Debug Mode has been turned on in the current scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetInstanceCount">
        <h2 style="margin-bottom: 8px;">Scene.GetInstanceCount</h2>
        <code>Scene.GetInstanceCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the count of instances currently in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetStaticInstanceCount">
        <h2 style="margin-bottom: 8px;">Scene.GetStaticInstanceCount</h2>
        <code>Scene.GetStaticInstanceCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the count of instances currently in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetDynamicInstanceCount">
        <h2 style="margin-bottom: 8px;">Scene.GetDynamicInstanceCount</h2>
        <code>Scene.GetDynamicInstanceCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the count of instances currently in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimationEnabled">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimationEnabled</h2>
        <code>Scene.GetTileAnimationEnabled()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not tile animation is enabled.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 0 if tile animation is disabled, 1 if it's enabled, and 2 if tiles animate even if the scene is paused.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequence">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequence</h2>
        <code>Scene.GetTileAnimSequence(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tile IDs of the animation sequence for a tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): Which tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an array of tile IDs.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequenceDurations">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequenceDurations</h2>
        <code>Scene.GetTileAnimSequenceDurations(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame durations of the animation sequence for a tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): Which tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an array of frame durations.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequencePaused">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequencePaused</h2>
        <code>Scene.GetTileAnimSequencePaused(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns if a tile ID animation sequence is paused.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Whether the animation is paused.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequenceSpeed">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequenceSpeed</h2>
        <code>Scene.GetTileAnimSequenceSpeed(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the speed of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The frame speed.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequenceFrame">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequenceFrame</h2>
        <code>Scene.GetTileAnimSequenceFrame(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current frame of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The frame index.</div>
        </p>
        <p id="Reference_functions_Scene_CheckValidScene">
        <h2 style="margin-bottom: 8px;">Scene.CheckValidScene</h2>
        <code>Scene.CheckValidScene()</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the scene list's position is within the list's size, if a scene list is loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_CheckSceneFolder">
        <h2 style="margin-bottom: 8px;">Scene.CheckSceneFolder</h2>
        <code>Scene.CheckSceneFolder(folder)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the current scene's folder matches the string to check, if a scene list is loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>folder (String): Folder name to compare.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_CheckSceneID">
        <h2 style="margin-bottom: 8px;">Scene.CheckSceneID</h2>
        <code>Scene.CheckSceneID(id)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the current scene's ID matches the string to check, if a scene list is loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>id (String): ID to compare.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_IsPaused">
        <h2 style="margin-bottom: 8px;">Scene.IsPaused</h2>
        <code>Scene.IsPaused()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the scene is paused.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_SetListPos">
        <h2 style="margin-bottom: 8px;">Scene.SetListPos</h2>
        <code>Scene.SetListPos()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current list position of the scene.</div>
        </p>
        <p id="Reference_functions_Scene_SetActiveCategory">
        <h2 style="margin-bottom: 8px;">Scene.SetActiveCategory</h2>
        <code>Scene.SetActiveCategory()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current category number of the scene.</div>
        </p>
        <p id="Reference_functions_Scene_SetDebugMode">
        <h2 style="margin-bottom: 8px;">Scene.SetDebugMode</h2>
        <code>Scene.SetDebugMode()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether Debug Mode has been turned on in the current scene.</div>
        </p>
        <p id="Reference_functions_Scene_SetScene">
        <h2 style="margin-bottom: 8px;">Scene.SetScene</h2>
        <code>Scene.SetScene(category, scene)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the scene if the category and scene names exist within the scene list.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): Category name.</li>
        <li>scene (String): Scene name.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTile">
        <h2 style="margin-bottom: 8px;">Scene.SetTile</h2>
        <code>Scene.SetTile(layer, cellX, cellY, tileID, flipX, flipY[, collisionMaskA, collisionMaskB])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile at a position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Layer index.</li>
        <li>cellX (Number): Tile cell X.</li>
        <li>cellY (Number): Tile cell Y.</li>
        <li>tileID (Integer): Tile ID.</li>
        <li>flipX (Boolean): Whether to flip the tile horizontally or not.</li>
        <li>flipY (Boolean): Whether to flip the tile vertically or not.</li>
        <li>collisionMaskA (Integer): Collision mask to use for the tile on Plane A. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        <li>collisionMaskB (Integer): Collision mask to use for the tile on Plane B. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileCollisionSides">
        <h2 style="margin-bottom: 8px;">Scene.SetTileCollisionSides</h2>
        <code>Scene.SetTileCollisionSides(layer, cellX, cellY, collisionMaskA, collisionMaskB)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the collision of a tile at a position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Layer index.</li>
        <li>cellX (Number): Tile cell X.</li>
        <li>cellY (Number): Tile cell Y.</li>
        <li>collisionMaskA (Integer): Collision mask to use for the tile on Plane A. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        <li>collisionMaskB (Integer): Collision mask to use for the tile on Plane B. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetPaused">
        <h2 style="margin-bottom: 8px;">Scene.SetPaused</h2>
        <code>Scene.SetPaused(isPaused)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether the game is paused or not. When paused, only objects with <code><a href="#Reference_fields_instance_Pauseable">instance.Pauseable</a></code> set to <code>false</code> will continue to <code>Update</code>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isPaused (Boolean): Whether or not the scene is paused.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimationEnabled">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimationEnabled</h2>
        <code>Scene.SetTileAnimationEnabled(isEnabled)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not tile animation is enabled.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isEnabled (Integer): 0 disables tile animation, 1 enables it, and 2 makes tiles animate even if the scene is paused.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequence">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequence</h2>
        <code>Scene.SetTileAnimSequence(tileID, tileIDs, frameDurations)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets an animation sequence for a tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): Which tile ID to add an animated sequence to.</li>
        <li>tileIDs (Array): Tile ID list.</li>
        <li>frameDurations (Array): Frame duration list.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequencePaused">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequencePaused</h2>
        <code>Scene.SetTileAnimSequencePaused(tileID, isPaused)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        <li>isPaused (Boolean): Whether the animation is paused.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequenceSpeed">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequenceSpeed</h2>
        <code>Scene.SetTileAnimSequenceSpeed(tileID, speed)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the speed of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        <li>speed (Decimal): The frame speed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequenceFrame">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequenceFrame</h2>
        <code>Scene.SetTileAnimSequenceFrame(tileID, index)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current frame of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        <li>index (Integer): The frame index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerVisible">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerVisible</h2>
        <code>Scene.SetLayerVisible(layerIndex, isVisible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the visibility of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>isVisible (Boolean): Whether or not the layer can be seen.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerCollidable">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerCollidable</h2>
        <code>Scene.SetLayerCollidable(layerIndex, isVisible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not the specified layer's tiles can be collided with.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>isVisible (Boolean): Whether or not the layer can be collided with.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerInternalSize">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerInternalSize</h2>
        <code>Scene.SetLayerInternalSize()</code>
        <div style="margin-top: 8px; font-size: 14px;">Do not use this.</div>
        </p>
        <p id="Reference_functions_Scene_SetLayerOffsetPosition">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOffsetPosition</h2>
        <code>Scene.SetLayerOffsetPosition(layerIndex, offsetX, offsetY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the camera offset position of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>offsetX (Number): Offset X position.</li>
        <li>offsetY (Number): Offset Y position.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerOffsetX">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOffsetX</h2>
        <code>Scene.SetLayerOffsetX(layerIndex, offsetX)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the camera offset X value of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>offsetX (Number): Offset X position.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerOffsetY">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOffsetY</h2>
        <code>Scene.SetLayerOffsetY(layerIndex, offsetY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the camera offset Y value of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>offsetY (Number): Offset Y position.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDrawGroup">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDrawGroup</h2>
        <code>Scene.SetLayerDrawGroup(layerIndex, drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the draw group of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>drawGroup (Integer): Number from 0 to 15. (0 = Back, 15 = Front)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDrawBehavior">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDrawBehavior</h2>
        <code>Scene.SetLayerDrawBehavior(layerIndex, drawBehavior)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the parallax direction of the layer. See <code><a href="#Reference_DrawBehavior_*">DrawBehavior_*</a></code> for a list of accepted draw behaviors.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>drawBehavior (Integer): The <a href="#Reference_DrawBehavior_*">draw behavior</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerRepeat">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerRepeat</h2>
        <code>Scene.SetLayerRepeat(layerIndex, doesRepeat)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not the specified layer repeats.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>doesRepeat (Boolean): Whether or not the layer repeats.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetDrawGroupEntityDepthSorting">
        <h2 style="margin-bottom: 8px;">Scene.SetDrawGroupEntityDepthSorting</h2>
        <code>Scene.SetDrawGroupEntityDepthSorting(drawGroup, useEntityDepth)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified draw group to sort objects by depth.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): Number from 0 to 15. (0 = Back, 15 = Front)</li>
        <li>useEntityDepth (Boolean): Whether or not to sort objects by depth.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerBlend">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerBlend</h2>
        <code>Scene.SetLayerBlend(layerIndex, doBlend[, blendMode])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use color and alpha blending on this layer. See <code><a href="#Reference_BlendMode_*">BlendMode_*</a></code> for a list of accepted blend modes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>doBlend (Boolean): Whether or not to use blending.</li>
        <li>blendMode (Integer): The desired <a href="#Reference_BlendMode_*">blend mode</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerOpacity">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOpacity</h2>
        <code>Scene.SetLayerOpacity(layerIndex, opacity)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the opacity of the layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>opacity (Decimal): Opacity from 0.0 to 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerScroll">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerScroll</h2>
        <code>Scene.SetLayerScroll(layerIndex, relative, constant)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the scroll values of the layer. (Horizontal Parallax = Up/Down values, Vertical Parallax = Left/Right values)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>relative (Decimal): How much to move the layer relative to the camera. (0.0 = no movement, 1.0 = moves opposite to speed of camera, 2.0 = moves twice the speed opposite to camera)</li>
        <li>constant (Decimal): How many pixels to move the layer per frame.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerSetParallaxLinesBegin">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerSetParallaxLinesBegin</h2>
        <code>Scene.SetLayerSetParallaxLinesBegin(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Begins setup for changing the parallax lines.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerSetParallaxLines">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerSetParallaxLines</h2>
        <code>Scene.SetLayerSetParallaxLines(lineStart, lineEnd, relative, constant, canDeform)</code>
        <div style="margin-top: 8px; font-size: 14px;">Set the parallax lines.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>lineStart (Integer): Start line.</li>
        <li>lineEnd (Integer): End line.</li>
        <li>relative (Number): How much to move the scroll line relative to the camera. (0.0 = no movement, 1.0 = moves opposite to speed of camera, 2.0 = moves twice the speed opposite to camera)</li>
        <li>constant (Number): How many pixels to move the layer per frame.</li>
        <li>canDeform (Boolean): Whether the parallax lines can be deformed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerSetParallaxLinesEnd">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerSetParallaxLinesEnd</h2>
        <code>Scene.SetLayerSetParallaxLinesEnd()</code>
        <div style="margin-top: 8px; font-size: 14px;">Ends setup for changing the parallax lines and submits the changes.</div>
        </p>
        <p id="Reference_functions_Scene_SetLayerTileDeforms">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerTileDeforms</h2>
        <code>Scene.SetLayerTileDeforms(layerIndex, deformIndex, deformA, deformB)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile deforms of the layer at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformIndex (Integer): Index of deform value.</li>
        <li>deformA (Number): Deform value above the Deform Split Line.</li>
        <li>deformB (Number): Deform value below the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerTileDeformSplitLine">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerTileDeformSplitLine</h2>
        <code>Scene.SetLayerTileDeformSplitLine(layerIndex, deformPosition)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the Deform Split Line.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformPosition (Number): The position on screen where the Deform Split Line should be. (Y when horizontal parallax, X when vertical.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerTileDeformOffsets">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerTileDeformOffsets</h2>
        <code>Scene.SetLayerTileDeformOffsets(layerIndex, deformAOffset, deformBOffset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the Deform Split Line.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformAOffset (Number): Offset for the deforms above the Deform Split Line.</li>
        <li>deformBOffset (Number): Offset for the deforms below the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDeformOffsetA">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDeformOffsetA</h2>
        <code>Scene.SetLayerDeformOffsetA(layerIndex, deformA)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile deform offset A of the layer at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformA (Number): Deform value above the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDeformOffsetB">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDeformOffsetB</h2>
        <code>Scene.SetLayerDeformOffsetB(layerIndex, deformA)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile deform offset B of the layer at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformA (Number): Deform value below the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerCustomScanlineFunction">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerCustomScanlineFunction</h2>
        <code>Scene.SetLayerCustomScanlineFunction(layerIndex, function)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the function to be used for generating custom tile scanlines.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>function (Function): Function to be used before tile drawing for generating scanlines. (Use <code>null</code> to reset functionality.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileScanline">
        <h2 style="margin-bottom: 8px;">Scene.SetTileScanline</h2>
        <code>Scene.SetTileScanline(scanline, srcX, srcY, deltaX, deltaY[, opacity, maxHorzCells, maxVertCells])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile scanline (for use only inside a Custom Scanline Function).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scanline (Integer): Index of scanline to edit.</li>
        <li>srcX (Number):</li>
        <li>srcY (Number):</li>
        <li>deltaX (Number):</li>
        <li>deltaY (Number):</li>
        <li>opacity (Decimal):</li>
        <li>maxHorzCells (Number):</li>
        <li>maxVertCells (Number):</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetObjectViewRender">
        <h2 style="margin-bottom: 8px;">Scene.SetObjectViewRender</h2>
        <code>Scene.SetObjectViewRender(viewIndex, enableViewRender)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not objects can render on the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>enableViewRender (Boolean):</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileViewRender">
        <h2 style="margin-bottom: 8px;">Scene.SetTileViewRender</h2>
        <code>Scene.SetTileViewRender(viewIndex, enableViewRender)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not tiles can render on the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>enableViewRender (Boolean):</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_Create">
        <h2 style="margin-bottom: 8px;">Scene3D.Create</h2>
        <code>Scene3D.Create(unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>unloadPolicy (Integer): Whether or not to delete the 3D scene at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The index of the created 3D scene.</div>
        </p>
        <p id="Reference_functions_Scene3D_Delete">
        <h2 style="margin-bottom: 8px;">Scene3D.Delete</h2>
        <code>Scene3D.Delete(scene3DIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deletes a 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene to delete.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetDrawMode">
        <h2 style="margin-bottom: 8px;">Scene3D.SetDrawMode</h2>
        <code>Scene3D.SetDrawMode(scene3DIndex, drawMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_DrawMode_*">draw mode</a> of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>drawMode (Integer): The type of drawing to use for the vertices in the 3D scene. See <code><a href="#Reference_DrawMode_*">DrawMode_*</a></code> for a list of accepted draw modes.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFaceCullMode">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFaceCullMode</h2>
        <code>Scene3D.SetFaceCullMode(scene3DIndex, cullMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_FaceCull_*">face culling mode</a> of the 3D scene. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>cullMode (Integer): The type of face culling to use for the vertices in the 3D scene. See <code><a href="#Reference_FaceCull_*">FaceCull_*</a></code> for a list of accepted face cull modes.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFieldOfView">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFieldOfView</h2>
        <code>Scene3D.SetFieldOfView(scene3DIndex, fieldOfView)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the field of view of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>fieldOfView (Matrix): The field of view value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFarClippingPlane">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFarClippingPlane</h2>
        <code>Scene3D.SetFarClippingPlane(scene3DIndex, farClippingPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the far clipping plane of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>farClippingPlane (Matrix): The far clipping plane value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetNearClippingPlane">
        <h2 style="margin-bottom: 8px;">Scene3D.SetNearClippingPlane</h2>
        <code>Scene3D.SetNearClippingPlane(scene3DIndex, farClippingPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the near clipping plane of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>farClippingPlane (Matrix): The near clipping plane value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetViewMatrix">
        <h2 style="margin-bottom: 8px;">Scene3D.SetViewMatrix</h2>
        <code>Scene3D.SetViewMatrix(scene3DIndex, viewMatrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the view matrix of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>viewMatrix (Matrix): The view matrix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetCustomProjectionMatrix">
        <h2 style="margin-bottom: 8px;">Scene3D.SetCustomProjectionMatrix</h2>
        <code>Scene3D.SetCustomProjectionMatrix(scene3DIndex, projMatrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a custom projection matrix.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>projMatrix (Matrix): The projection matrix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetAmbientLighting">
        <h2 style="margin-bottom: 8px;">Scene3D.SetAmbientLighting</h2>
        <code>Scene3D.SetAmbientLighting(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the ambient lighting of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetDiffuseLighting">
        <h2 style="margin-bottom: 8px;">Scene3D.SetDiffuseLighting</h2>
        <code>Scene3D.SetDiffuseLighting(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the diffuse lighting of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetSpecularLighting">
        <h2 style="margin-bottom: 8px;">Scene3D.SetSpecularLighting</h2>
        <code>Scene3D.SetSpecularLighting(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specular lighting of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogEquation">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogEquation</h2>
        <code>Scene3D.SetFogEquation(scene3DIndex, fogEquation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_FogEquation_*">fog equation</a> of the 3D scene. (software-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>fogEquation (Integer): The <a href="#Reference_FogEquation_*">fog equation</a> to use.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogStart">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogStart</h2>
        <code>Scene3D.SetFogStart(scene3DIndex, start)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the near distance used in the linear equation of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>start (Number): The start value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogEnd">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogEnd</h2>
        <code>Scene3D.SetFogEnd(scene3DIndex, end)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the far distance used in the linear equation of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>end (Number): The end value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogDensity">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogDensity</h2>
        <code>Scene3D.SetFogDensity(scene3DIndex, density)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the density used in the exponential equation of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>density (Number): The fog density.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogColor">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogColor</h2>
        <code>Scene3D.SetFogColor(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the fog color of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogSmoothness">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogSmoothness</h2>
        <code>Scene3D.SetFogSmoothness(scene3DIndex, smoothness)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the smoothness of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>smoothness (Number): The smoothness, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetPointSize">
        <h2 style="margin-bottom: 8px;">Scene3D.SetPointSize</h2>
        <code>Scene3D.SetPointSize(scene3DIndex, pointSize)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the point size of the 3D scene. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>pointSize (Decimal): The point size.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_Clear">
        <h2 style="margin-bottom: 8px;">Scene3D.Clear</h2>
        <code>Scene3D.Clear(scene3DIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes all previously drawn elements out of a 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_Serializer_WriteToStream">
        <h2 style="margin-bottom: 8px;">Serializer.WriteToStream</h2>
        <code>Serializer.WriteToStream(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Serializes a value into a stream.<br/></br>Supported types:<ul><li>Integer</li><li>Decimal</li><li><code>null</code></li><li>String</li><li>Array</li><li>Map</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (any type): The value to serialize.</li>
        </ul>
        </p>
        <p id="Reference_functions_Serializer_ReadFromStream">
        <h2 style="margin-bottom: 8px;">Serializer.ReadFromStream</h2>
        <code>Serializer.ReadFromStream(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deserializes a value from a stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The deserialized value.</div>
        </p>
        <p id="Reference_functions_Settings_Load">
        <h2 style="margin-bottom: 8px;">Settings.Load</h2>
        <code>Settings.Load(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads the config from the specified filename. Calling this does not save the current settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filepath of config.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_Save">
        <h2 style="margin-bottom: 8px;">Settings.Save</h2>
        <code>Settings.Save([filename])</code>
        <div style="margin-top: 8px; font-size: 14px;">Saves the settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filepath of config. This does not change the filepath of the current settings (Use <code><a href="#Reference_functions_Settings_SetFilename">Settings.SetFilename</a></code> to do that.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetFilename">
        <h2 style="margin-bottom: 8px;">Settings.SetFilename</h2>
        <code>Settings.SetFilename(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the filepath of the settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filepath of config. This does not save the current settings.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_GetString">
        <h2 style="margin-bottom: 8px;">Settings.GetString</h2>
        <code>Settings.GetString(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as a string.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as a string, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_GetNumber">
        <h2 style="margin-bottom: 8px;">Settings.GetNumber</h2>
        <code>Settings.GetNumber(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as a number.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as a number, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_GetInteger">
        <h2 style="margin-bottom: 8px;">Settings.GetInteger</h2>
        <code>Settings.GetInteger(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as an integer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as an integer, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_GetBool">
        <h2 style="margin-bottom: 8px;">Settings.GetBool</h2>
        <code>Settings.GetBool(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as a boolean.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as a boolean, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_SetString">
        <h2 style="margin-bottom: 8px;">Settings.SetString</h2>
        <code>Settings.SetString(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to a string value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (String): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetNumber">
        <h2 style="margin-bottom: 8px;">Settings.SetNumber</h2>
        <code>Settings.SetNumber(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to a Decimal value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (Number): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetInteger">
        <h2 style="margin-bottom: 8px;">Settings.SetInteger</h2>
        <code>Settings.SetInteger(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to an integer value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (Integer): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetBool">
        <h2 style="margin-bottom: 8px;">Settings.SetBool</h2>
        <code>Settings.SetBool(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to a boolean value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (Boolean): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_AddSection">
        <h2 style="margin-bottom: 8px;">Settings.AddSection</h2>
        <code>Settings.AddSection(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section name.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_RemoveSection">
        <h2 style="margin-bottom: 8px;">Settings.RemoveSection</h2>
        <code>Settings.RemoveSection(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes a section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section name.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SectionExists">
        <h2 style="margin-bottom: 8px;">Settings.SectionExists</h2>
        <code>Settings.SectionExists(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a section exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the section exists, <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Settings_GetSectionCount">
        <h2 style="margin-bottom: 8px;">Settings.GetSectionCount</h2>
        <code>Settings.GetSectionCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many sections exist in the settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The total section count, as an integer.</div>
        </p>
        <p id="Reference_functions_Settings_PropertyExists">
        <h2 style="margin-bottom: 8px;">Settings.PropertyExists</h2>
        <code>Settings.PropertyExists(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the property exists, <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Settings_RemoveProperty">
        <h2 style="margin-bottom: 8px;">Settings.RemoveProperty</h2>
        <code>Settings.RemoveProperty(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes a property from a section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to remove.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_GetPropertyCount">
        <h2 style="margin-bottom: 8px;">Settings.GetPropertyCount</h2>
        <code>Settings.GetPropertyCount(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many properties exist in the section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section. If this is <code>null</code>, the global section is used instead.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The total section count, as an integer.</div>
        </p>
        <p id="Reference_functions_Shader_Set">
        <h2 style="margin-bottom: 8px; color: red;">Shader.Set</h2>
        <code>Shader.Set()</code>
        </p>
        <p id="Reference_functions_Shader_Unset">
        <h2 style="margin-bottom: 8px; color: red;">Shader.Unset</h2>
        <code>Shader.Unset()</code>
        </p>
        <p id="Reference_functions_SocketClient_Open">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.Open</h2>
        <code>SocketClient.Open()</code>
        </p>
        <p id="Reference_functions_SocketClient_Close">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.Close</h2>
        <code>SocketClient.Close()</code>
        </p>
        <p id="Reference_functions_SocketClient_IsOpen">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.IsOpen</h2>
        <code>SocketClient.IsOpen()</code>
        </p>
        <p id="Reference_functions_SocketClient_Poll">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.Poll</h2>
        <code>SocketClient.Poll()</code>
        </p>
        <p id="Reference_functions_SocketClient_BytesToRead">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.BytesToRead</h2>
        <code>SocketClient.BytesToRead()</code>
        </p>
        <p id="Reference_functions_SocketClient_ReadDecimal">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.ReadDecimal</h2>
        <code>SocketClient.ReadDecimal()</code>
        </p>
        <p id="Reference_functions_SocketClient_ReadInteger">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.ReadInteger</h2>
        <code>SocketClient.ReadInteger()</code>
        </p>
        <p id="Reference_functions_SocketClient_ReadString">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.ReadString</h2>
        <code>SocketClient.ReadString()</code>
        </p>
        <p id="Reference_functions_SocketClient_WriteDecimal">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.WriteDecimal</h2>
        <code>SocketClient.WriteDecimal()</code>
        </p>
        <p id="Reference_functions_SocketClient_WriteInteger">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.WriteInteger</h2>
        <code>SocketClient.WriteInteger()</code>
        </p>
        <p id="Reference_functions_SocketClient_WriteString">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.WriteString</h2>
        <code>SocketClient.WriteString()</code>
        </p>
        <p id="Reference_functions_Sound_Play">
        <h2 style="margin-bottom: 8px;">Sound.Play</h2>
        <code>Sound.Play(sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound once.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play.</div>
        </p>
        <p id="Reference_functions_Sound_Loop">
        <h2 style="margin-bottom: 8px;">Sound.Loop</h2>
        <code>Sound.Loop(sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound, looping back when it ends.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play.</div>
        </p>
        <p id="Reference_functions_Sound_Stop">
        <h2 style="margin-bottom: 8px;">Sound.Stop</h2>
        <code>Sound.Stop(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops an actively playing sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to stop.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_Pause">
        <h2 style="margin-bottom: 8px;">Sound.Pause</h2>
        <code>Sound.Pause(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses an actively playing sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to pause.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_Resume">
        <h2 style="margin-bottom: 8px;">Sound.Resume</h2>
        <code>Sound.Resume(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Unpauses a paused sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to resume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_StopAll">
        <h2 style="margin-bottom: 8px;">Sound.StopAll</h2>
        <code>Sound.StopAll()</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops all actively playing sounds.</div>
        </p>
        <p id="Reference_functions_Sound_PauseAll">
        <h2 style="margin-bottom: 8px;">Sound.PauseAll</h2>
        <code>Sound.PauseAll()</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses all actively playing sounds.</div>
        </p>
        <p id="Reference_functions_Sound_ResumeAll">
        <h2 style="margin-bottom: 8px;">Sound.ResumeAll</h2>
        <code>Sound.ResumeAll()</code>
        <div style="margin-top: 8px; font-size: 14px;">Resumes all actively playing sounds.</div>
        </p>
        <p id="Reference_functions_Sound_IsPlaying">
        <h2 style="margin-bottom: 8px;">Sound.IsPlaying</h2>
        <code>Sound.IsPlaying(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether a sound is currently playing or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_PlayMultiple">
        <h2 style="margin-bottom: 8px;">Sound.PlayMultiple</h2>
        <code>Sound.PlayMultiple(sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound once, without interrupting channels playing the same sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play.</div>
        </p>
        <p id="Reference_functions_Sound_LoopMultiple">
        <h2 style="margin-bottom: 8px;">Sound.LoopMultiple</h2>
        <code>Sound.LoopMultiple(sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound, looping back when it ends, without interrupting channels playing the same sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play.</div>
        </p>
        <p id="Reference_functions_Sound_PlayAtChannel">
        <h2 style="margin-bottom: 8px;">Sound.PlayAtChannel</h2>
        <code>Sound.PlayAtChannel(channel, sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound at the specified channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index.</li>
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_LoopAtChannel">
        <h2 style="margin-bottom: 8px;">Sound.LoopAtChannel</h2>
        <code>Sound.LoopAtChannel(channel, sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound at the specified channel, looping back when it ends.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index.</li>
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_StopChannel">
        <h2 style="margin-bottom: 8px;">Sound.StopChannel</h2>
        <code>Sound.StopChannel(channel)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops a channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to stop.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_PauseChannel">
        <h2 style="margin-bottom: 8px;">Sound.PauseChannel</h2>
        <code>Sound.PauseChannel(channel)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses a channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to pause.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_ResumeChannel">
        <h2 style="margin-bottom: 8px;">Sound.ResumeChannel</h2>
        <code>Sound.ResumeChannel(channel)</code>
        <div style="margin-top: 8px; font-size: 14px;">Unpauses a paused channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to resume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_AlterChannel">
        <h2 style="margin-bottom: 8px;">Sound.AlterChannel</h2>
        <code>Sound.AlterChannel(channel, panning, speed, volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Alters the playback conditions of the specified channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to resume.</li>
        <li>panning (Decimal): Control the panning of the sound. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it.</li>
        <li>speed (Decimal): Control the speed of the sound. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed.</li>
        <li>volume (Decimal): Controls the volume of the sound. 0.0 is muted, 1.0 is normal volume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_GetFreeChannel">
        <h2 style="margin-bottom: 8px;">Sound.GetFreeChannel</h2>
        <code>Sound.GetFreeChannel()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the first channel index that is not currently playing any sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the available channel index, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_functions_Sound_IsChannelFree">
        <h2 style="margin-bottom: 8px;">Sound.IsChannelFree</h2>
        <code>Sound.IsChannelFree(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether a channel is currently playing any sound or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The channel index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sprite_GetAnimationCount">
        <h2 style="margin-bottom: 8px;">Sprite.GetAnimationCount</h2>
        <code>Sprite.GetAnimationCount(sprite)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of animations in the sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of animations in the sprite.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameLoopIndex">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameLoopIndex</h2>
        <code>Sprite.GetFrameLoopIndex(sprite, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the index of the frame that the specified animation will loop back to when it finishes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame loop index.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameCount">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameCount</h2>
        <code>Sprite.GetFrameCount(sprite, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of frames in the specified animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame count in the specified animation.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameDuration">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameDuration</h2>
        <code>Sprite.GetFrameDuration(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame duration of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame duration (in game frames) of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameSpeed">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameSpeed</h2>
        <code>Sprite.GetFrameSpeed(sprite, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the animation speed of the specified animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameWidth">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameWidth</h2>
        <code>Sprite.GetFrameWidth(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame width of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame width (in pixels) of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameHeight">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameHeight</h2>
        <code>Sprite.GetFrameHeight(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame height of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame height (in pixels) of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameID">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameID</h2>
        <code>Sprite.GetFrameID(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame ID of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame ID of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameOffsetX">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameOffsetX</h2>
        <code>Sprite.GetFrameOffsetX(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the X offset of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the X offset of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameOffsetY">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameOffsetY</h2>
        <code>Sprite.GetFrameOffsetY(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the Y offset of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Y offset of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetHitbox">
        <h2 style="margin-bottom: 8px;">Sprite.GetHitbox</h2>
        <code>Sprite.GetHitbox(sprite, animationID, frame, hitboxID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the hitbox of an animation and frame of a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animationID (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        <li>hitboxID (Integer): The index number of the hitbox.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a reference value to a hitbox array.</div>
        </p>
        <p id="Reference_functions_Stream_FromResource">
        <h2 style="margin-bottom: 8px;">Stream.FromResource</h2>
        <code>Stream.FromResource(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Opens a stream from a resource.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the newly opened stream.</div>
        </p>
        <p id="Reference_functions_Stream_FromFile">
        <h2 style="margin-bottom: 8px;">Stream.FromFile</h2>
        <code>Stream.FromFile(filename, mode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Opens a stream from a file. See <code><a href="#Reference_FileStream_*">FileStream_*</a></code> for a list of accepted file access modes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Path of the file.</li>
        <li>mode (Integer): <a href="#Reference_FileStream_*">File access mode</a>.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the newly opened stream.</div>
        </p>
        <p id="Reference_functions_Stream_Close">
        <h2 style="margin-bottom: 8px;">Stream.Close</h2>
        <code>Stream.Close(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Closes a stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to close.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_Seek">
        <h2 style="margin-bottom: 8px;">Stream.Seek</h2>
        <code>Stream.Seek(stream, offset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Seeks a stream, relative to the start of the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to seek.</li>
        <li>offset (Integer): Offset to seek to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_SeekEnd">
        <h2 style="margin-bottom: 8px;">Stream.SeekEnd</h2>
        <code>Stream.SeekEnd(stream, offset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Seeks a stream, relative to the end.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to seek.</li>
        <li>offset (Integer): Offset to seek to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_Skip">
        <h2 style="margin-bottom: 8px;">Stream.Skip</h2>
        <code>Stream.Skip(stream, offset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Seeks a stream, relative to the current position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to skip.</li>
        <li>offset (Integer): How many bytes to skip.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_Position">
        <h2 style="margin-bottom: 8px;">Stream.Position</h2>
        <code>Stream.Position(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the current position of the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The current position of the stream.</div>
        </p>
        <p id="Reference_functions_Stream_Length">
        <h2 style="margin-bottom: 8px;">Stream.Length</h2>
        <code>Stream.Length(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the length of the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The length of the stream.</div>
        </p>
        <p id="Reference_functions_Stream_ReadByte">
        <h2 style="margin-bottom: 8px;">Stream.ReadByte</h2>
        <code>Stream.ReadByte(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 8-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 8-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt16">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt16</h2>
        <code>Stream.ReadUInt16(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt16BE</h2>
        <code>Stream.ReadUInt16BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned big-endian 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned big-endian 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt32">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt32</h2>
        <code>Stream.ReadUInt32(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt32BE</h2>
        <code>Stream.ReadUInt32BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned big-endian 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned big-endian 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt64">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt64</h2>
        <code>Stream.ReadUInt64(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 64-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 64-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt16">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt16</h2>
        <code>Stream.ReadInt16(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt16BE</h2>
        <code>Stream.ReadInt16BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed big-endian 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed big-endian 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt32">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt32</h2>
        <code>Stream.ReadInt32(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt32BE</h2>
        <code>Stream.ReadInt32BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed big-endian 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed big-endian 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt64">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt64</h2>
        <code>Stream.ReadInt64(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed 64-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed 64-bit Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadFloat">
        <h2 style="margin-bottom: 8px;">Stream.ReadFloat</h2>
        <code>Stream.ReadFloat(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a floating point number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadString">
        <h2 style="margin-bottom: 8px;">Stream.ReadString</h2>
        <code>Stream.ReadString(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a null-terminated string from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadLine">
        <h2 style="margin-bottom: 8px;">Stream.ReadLine</h2>
        <code>Stream.ReadLine(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a line from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Stream_WriteByte">
        <h2 style="margin-bottom: 8px;">Stream.WriteByte</h2>
        <code>Stream.WriteByte(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 8-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt16">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt16</h2>
        <code>Stream.WriteUInt16(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt16BE</h2>
        <code>Stream.WriteUInt16BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned big-endian 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt32">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt32</h2>
        <code>Stream.WriteUInt32(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt32BE</h2>
        <code>Stream.WriteUInt32BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned big-endian 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt64">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt64</h2>
        <code>Stream.WriteUInt64(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 64-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt16">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt16</h2>
        <code>Stream.WriteInt16(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt16BE</h2>
        <code>Stream.WriteInt16BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed big-endian 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt32">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt32</h2>
        <code>Stream.WriteInt32(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt32BE</h2>
        <code>Stream.WriteInt32BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed big-endian 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt64">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt64</h2>
        <code>Stream.WriteInt64(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed 64-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteFloat">
        <h2 style="margin-bottom: 8px;">Stream.WriteFloat</h2>
        <code>Stream.WriteFloat(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a floating point number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Decimal): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteString">
        <h2 style="margin-bottom: 8px;">Stream.WriteString</h2>
        <code>Stream.WriteString(stream, string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a null-terminated string to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>string (String): The string to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_String_Split">
        <h2 style="margin-bottom: 8px; color: red;">String.Split</h2>
        <code>String.Split()</code>
        </p>
        <p id="Reference_functions_String_CharAt">
        <h2 style="margin-bottom: 8px;">String.CharAt</h2>
        <code>String.CharAt(string, index)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the UTF8 value of the character at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>index (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the UTF8 value as an Integer.</div>
        </p>
        <p id="Reference_functions_String_Length">
        <h2 style="margin-bottom: 8px;">String.Length</h2>
        <code>String.Length(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the length of the String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the length of the String value as an Integer.</div>
        </p>
        <p id="Reference_functions_String_Compare">
        <h2 style="margin-bottom: 8px;">String.Compare</h2>
        <code>String.Compare(stringA, stringB)</code>
        <div style="margin-top: 8px; font-size: 14px;">Compare two Strings and retrieve a numerical difference.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stringA (String):</li>
        <li>stringB (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the comparison result as an Integer.</div>
        </p>
        <p id="Reference_functions_String_IndexOf">
        <h2 style="margin-bottom: 8px;">String.IndexOf</h2>
        <code>String.IndexOf(string, substring)</code>
        <div style="margin-top: 8px; font-size: 14px;">Get the first index at which the substring occurs in the string.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>substring (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index as an Integer.</div>
        </p>
        <p id="Reference_functions_String_Contains">
        <h2 style="margin-bottom: 8px;">String.Contains</h2>
        <code>String.Contains(string, substring)</code>
        <div style="margin-top: 8px; font-size: 14px;">Searches for whether or not a substring is within a String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>substring (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_String_Substring">
        <h2 style="margin-bottom: 8px;">String.Substring</h2>
        <code>String.Substring(string, startIndex, length)</code>
        <div style="margin-top: 8px; font-size: 14px;">Get a String value from a portion of a larger String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>startIndex (Integer):</li>
        <li>length (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_String_ToUpperCase">
        <h2 style="margin-bottom: 8px;">String.ToUpperCase</h2>
        <code>String.ToUpperCase(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Convert a String value to its uppercase representation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a uppercase String value.</div>
        </p>
        <p id="Reference_functions_String_ToLowerCase">
        <h2 style="margin-bottom: 8px;">String.ToLowerCase</h2>
        <code>String.ToLowerCase(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Convert a String value to its lowercase representation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a lowercase String value.</div>
        </p>
        <p id="Reference_functions_String_LastIndexOf">
        <h2 style="margin-bottom: 8px;">String.LastIndexOf</h2>
        <code>String.LastIndexOf(string, substring)</code>
        <div style="margin-top: 8px; font-size: 14px;">Get the last index at which the substring occurs in the string.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>substring (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index as an Integer.</div>
        </p>
        <p id="Reference_functions_String_ParseInteger">
        <h2 style="margin-bottom: 8px;">String.ParseInteger</h2>
        <code>String.ParseInteger(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Convert a String value to an Integer value if possible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the value as an Integer.</div>
        </p>
        <p id="Reference_functions_String_ParseDecimal">
        <h2 style="margin-bottom: 8px;">String.ParseDecimal</h2>
        <code>String.ParseDecimal(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Convert a String value to an Decimal value if possible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the value as an Decimal.</div>
        </p>
        <p id="Reference_functions_Texture_Create">
        <h2 style="margin-bottom: 8px; color: red;">Texture.Create</h2>
        <code>Texture.Create()</code>
        </p>
        <p id="Reference_functions_Texture_Copy">
        <h2 style="margin-bottom: 8px; color: red;">Texture.Copy</h2>
        <code>Texture.Copy()</code>
        </p>
        <p id="Reference_functions_Thread_RunEvent">
        <h2 style="margin-bottom: 8px; color: red;">Thread.RunEvent</h2>
        <code>Thread.RunEvent()</code>
        </p>
        <p id="Reference_functions_Thread_Sleep">
        <h2 style="margin-bottom: 8px; color: red;">Thread.Sleep</h2>
        <code>Thread.Sleep()</code>
        </p>
        <p id="Reference_functions_TileCollision_Point">
        <h2 style="margin-bottom: 8px;">TileCollision.Point</h2>
        <code>TileCollision.Point(x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks for a tile collision at a specified point, returning <code>true</code> if successful, <code>false</code> if otherwise.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position to check.</li>
        <li>y (Number): Y position to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_TileCollision_PointExtended">
        <h2 style="margin-bottom: 8px;">TileCollision.PointExtended</h2>
        <code>TileCollision.PointExtended(x, y, collisionField, collisionSide)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks for a tile collision at a specified point, returning the angle value if successful, <code>-1</code> if otherwise.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position to check.</li>
        <li>y (Number): Y position to check.</li>
        <li>collisionField (Integer): Low (0) or high (1) field to check.</li>
        <li>collisionSide (Integer): Which side of the tile to check for collision. (TOP = 1, RIGHT = 2, BOTTOM = 4, LEFT = 8, ALL = 15)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle of the ground as an Integer value.</div>
        </p>
        <p id="Reference_functions_TileCollision_Line">
        <h2 style="margin-bottom: 8px;">TileCollision.Line</h2>
        <code>TileCollision.Line(x, y, directionType, length, collisionField, compareAngle, instance)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks for a tile collision in a straight line, returning the angle value if successful, <code>-1</code> if otherwise.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position to start checking from.</li>
        <li>y (Number): Y position to start checking from.</li>
        <li>directionType (Integer): Ordinal direction to check in. (0: Down, 1: Right, 2: Up, 3: Left, or one of the enums: SensorDirection_Up, SensorDirection_Left, SensorDirection_Down, SensorDirection_Right)</li>
        <li>length (Integer): How many pixels to check.</li>
        <li>collisionField (Integer): Low (0) or high (1) field to check.</li>
        <li>compareAngle (Integer): Only return a collision if the angle is within 0x20 this value, otherwise if angle comparison is not desired, set this value to -1.</li>
        <li>instance (Instance): Instance to write the values to.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>false</code> if no tile collision, but if <code>true</code>: <br/><pre class="code"><br/>instance.SensorX: (Number), // X Position where the sensor collided if it did. <br/>instance.SensorY: (Number), // Y Position where the sensor collided if it did. <br/>instance.SensorCollided: (Boolean), // Whether or not the sensor collided. <br/>instance.SensorAngle: (Integer) // Tile angle at the collision. <br/></pre></div>
        </p>
        <p id="Reference_functions_TileInfo_SetSpriteInfo">
        <h2 style="margin-bottom: 8px;">TileInfo.SetSpriteInfo</h2>
        <code>TileInfo.SetSpriteInfo(tileID, spriteIndex, animationIndex, frameIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sprite, animation, and frame to use for specified tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of tile to check.</li>
        <li>spriteIndex (Integer): Sprite index. (-1 for default tile sprite)</li>
        <li>animationIndex (Integer): Animation index.</li>
        <li>frameIndex (Integer): Frame index. (-1 for default tile frame)</li>
        </ul>
        </p>
        <p id="Reference_functions_TileInfo_IsEmptySpace">
        <h2 style="margin-bottom: 8px;">TileInfo.IsEmptySpace</h2>
        <code>TileInfo.IsEmptySpace(tileID, collisionPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if a tile at the ID is empty.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of tile to check.</li>
        <li>collisionPlane (Integer): The collision plane of the tile to check for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the tile is empty space, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetEmptyTile">
        <h2 style="margin-bottom: 8px;">TileInfo.GetEmptyTile</h2>
        <code>TileInfo.GetEmptyTile()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the scene's empty tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the ID of the scene's empty tile space.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetCollision">
        <h2 style="margin-bottom: 8px;">TileInfo.GetCollision</h2>
        <code>TileInfo.GetCollision(tileID, collisionField, directionType, position[, flipX, flipY])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the collision value at the pixel position of the desired tile, -1 if no collision.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to get the value of.</li>
        <li>collisionField (Integer): The collision plane of the tile to get the collision from.</li>
        <li>directionType (Integer): Ordinal direction to check in. (0: Down, 1: Right, 2: Up, 3: Left, or one of the enums: SensorDirection_Up, SensorDirection_Left, SensorDirection_Down, SensorDirection_Right)</li>
        <li>position (Integer): Position on the tile to check, X position if the directionType is Up/Down, Y position if the directionType is Left/Right.</li>
        <li>flipX (Boolean): Whether or not to check the collision with the tile horizontally flipped.</li>
        <li>flipY (Boolean): Whether or not to check the collision with the tile vertically flipped.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Collision position (Integer) on the tile, X position if the directionType is Left/Right, Y position if the directionType is Up/Down, -1 if there was no collision.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetAngle">
        <h2 style="margin-bottom: 8px;">TileInfo.GetAngle</h2>
        <code>TileInfo.GetAngle(tileID, collisionField, directionType[, flipX, flipY])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the angle value of the desired tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to get the value of.</li>
        <li>collisionField (Integer): The collision plane of the tile to get the angle from.</li>
        <li>directionType (Integer): Ordinal direction to check in. (0: Down, 1: Right, 2: Up, 3: Left, or one of the enums: SensorDirection_Up, SensorDirection_Left, SensorDirection_Down, SensorDirection_Right)</li>
        <li>flipX (Boolean): Whether or not to check the angle with the tile horizontally flipped.</li>
        <li>flipY (Boolean): Whether or not to check the angle with the tile vertically flipped.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Angle value between 0x00 to 0xFF at the specified direction.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetBehaviorFlag">
        <h2 style="margin-bottom: 8px;">TileInfo.GetBehaviorFlag</h2>
        <code>TileInfo.GetBehaviorFlag(tileID, collisionPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the behavior value of the desired tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to get the value of.</li>
        <li>collisionPlane (Integer): The collision plane of the tile to get the behavior from.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Behavior flag (Integer) of the tile.</div>
        </p>
        <p id="Reference_functions_TileInfo_IsCeiling">
        <h2 style="margin-bottom: 8px;">TileInfo.IsCeiling</h2>
        <code>TileInfo.IsCeiling(tileID, collisionPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the desired tile is a ceiling tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to check.</li>
        <li>collisionPlane (Integer): The collision plane of the tile to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the tile is a ceiling tile, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Touch_GetX">
        <h2 style="margin-bottom: 8px;">Touch.GetX</h2>
        <code>Touch.GetX(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the X position of a touch.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Touch_GetY">
        <h2 style="margin-bottom: 8px;">Touch.GetY</h2>
        <code>Touch.GetY(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the Y position of a touch.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Touch_IsDown">
        <h2 style="margin-bottom: 8px;">Touch.IsDown</h2>
        <code>Touch.IsDown(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a touch is currently down on the screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Touch_IsPressed">
        <h2 style="margin-bottom: 8px;">Touch.IsPressed</h2>
        <code>Touch.IsPressed(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a touch just pressed down on the screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Touch_IsReleased">
        <h2 style="margin-bottom: 8px;">Touch.IsReleased</h2>
        <code>Touch.IsReleased(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a touch just released from the screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_VertexBuffer_Create">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Create</h2>
        <code>VertexBuffer.Create(numVertices, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Create a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>numVertices (Integer): The initial capacity of this vertex buffer.</li>
        <li>unloadPolicy (Integer): Whether or not to delete the vertex buffer at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The index of the created vertex buffer.</div>
        </p>
        <p id="Reference_functions_VertexBuffer_Resize">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Resize</h2>
        <code>VertexBuffer.Resize(vertexBufferIndex, numVertices)</code>
        <div style="margin-top: 8px; font-size: 14px;">Resizes a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to resize.</li>
        <li>numVertices (Integer): The amount of vertices that this vertex buffer will hold.</li>
        </ul>
        </p>
        <p id="Reference_functions_VertexBuffer_Clear">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Clear</h2>
        <code>VertexBuffer.Clear(vertexBufferIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Clears a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to clear.</li>
        </ul>
        </p>
        <p id="Reference_functions_VertexBuffer_Delete">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Delete</h2>
        <code>VertexBuffer.Delete(vertexBufferIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deletes a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to delete.</li>
        </ul>
        </p>
        <p id="Reference_functions_Video_Play">
        <h2 style="margin-bottom: 8px; color: red;">Video.Play</h2>
        <code>Video.Play()</code>
        </p>
        <p id="Reference_functions_Video_Pause">
        <h2 style="margin-bottom: 8px; color: red;">Video.Pause</h2>
        <code>Video.Pause()</code>
        </p>
        <p id="Reference_functions_Video_Resume">
        <h2 style="margin-bottom: 8px; color: red;">Video.Resume</h2>
        <code>Video.Resume()</code>
        </p>
        <p id="Reference_functions_Video_Stop">
        <h2 style="margin-bottom: 8px; color: red;">Video.Stop</h2>
        <code>Video.Stop()</code>
        </p>
        <p id="Reference_functions_Video_Close">
        <h2 style="margin-bottom: 8px; color: red;">Video.Close</h2>
        <code>Video.Close()</code>
        </p>
        <p id="Reference_functions_Video_IsBuffering">
        <h2 style="margin-bottom: 8px; color: red;">Video.IsBuffering</h2>
        <code>Video.IsBuffering()</code>
        </p>
        <p id="Reference_functions_Video_IsPlaying">
        <h2 style="margin-bottom: 8px; color: red;">Video.IsPlaying</h2>
        <code>Video.IsPlaying()</code>
        </p>
        <p id="Reference_functions_Video_IsPaused">
        <h2 style="margin-bottom: 8px; color: red;">Video.IsPaused</h2>
        <code>Video.IsPaused()</code>
        </p>
        <p id="Reference_functions_Video_SetPosition">
        <h2 style="margin-bottom: 8px; color: red;">Video.SetPosition</h2>
        <code>Video.SetPosition()</code>
        </p>
        <p id="Reference_functions_Video_SetBufferDuration">
        <h2 style="margin-bottom: 8px; color: red;">Video.SetBufferDuration</h2>
        <code>Video.SetBufferDuration()</code>
        </p>
        <p id="Reference_functions_Video_SetTrackEnabled">
        <h2 style="margin-bottom: 8px; color: red;">Video.SetTrackEnabled</h2>
        <code>Video.SetTrackEnabled()</code>
        </p>
        <p id="Reference_functions_Video_GetPosition">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetPosition</h2>
        <code>Video.GetPosition()</code>
        </p>
        <p id="Reference_functions_Video_GetDuration">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDuration</h2>
        <code>Video.GetDuration()</code>
        </p>
        <p id="Reference_functions_Video_GetBufferDuration">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetBufferDuration</h2>
        <code>Video.GetBufferDuration()</code>
        </p>
        <p id="Reference_functions_Video_GetBufferEnd">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetBufferEnd</h2>
        <code>Video.GetBufferEnd()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackCount">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackCount</h2>
        <code>Video.GetTrackCount()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackEnabled">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackEnabled</h2>
        <code>Video.GetTrackEnabled()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackName">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackName</h2>
        <code>Video.GetTrackName()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackLanguage">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackLanguage</h2>
        <code>Video.GetTrackLanguage()</code>
        </p>
        <p id="Reference_functions_Video_GetDefaultVideoTrack">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDefaultVideoTrack</h2>
        <code>Video.GetDefaultVideoTrack()</code>
        </p>
        <p id="Reference_functions_Video_GetDefaultAudioTrack">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDefaultAudioTrack</h2>
        <code>Video.GetDefaultAudioTrack()</code>
        </p>
        <p id="Reference_functions_Video_GetDefaultSubtitleTrack">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDefaultSubtitleTrack</h2>
        <code>Video.GetDefaultSubtitleTrack()</code>
        </p>
        <p id="Reference_functions_Video_GetWidth">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetWidth</h2>
        <code>Video.GetWidth()</code>
        </p>
        <p id="Reference_functions_Video_GetHeight">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetHeight</h2>
        <code>Video.GetHeight()</code>
        </p>
        <p id="Reference_functions_View_SetX">
        <h2 style="margin-bottom: 8px;">View.SetX</h2>
        <code>View.SetX(viewIndex, x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the x-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X position.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetY">
        <h2 style="margin-bottom: 8px;">View.SetY</h2>
        <code>View.SetY(viewIndex, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the y-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>y (Number): Desired Y position.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetZ">
        <h2 style="margin-bottom: 8px;">View.SetZ</h2>
        <code>View.SetZ(viewIndex, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the z-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>z (Number): Desired Z position.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetPosition">
        <h2 style="margin-bottom: 8px;">View.SetPosition</h2>
        <code>View.SetPosition(viewIndex, x, y[, z])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X position.</li>
        <li>y (Number): Desired Y position.</li>
        <li>z (Number): Desired Z position.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetAngle">
        <h2 style="margin-bottom: 8px;">View.SetAngle</h2>
        <code>View.SetAngle(viewIndex, x, y, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the angle of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X angle.</li>
        <li>y (Number): Desired Y angle.</li>
        <li>z (Number): Desired Z angle.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetSize">
        <h2 style="margin-bottom: 8px;">View.SetSize</h2>
        <code>View.SetSize(viewIndex, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the size of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>width (Number): Desired width.</li>
        <li>height (Number): Desired height.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputX">
        <h2 style="margin-bottom: 8px;">View.SetOutputX</h2>
        <code>View.SetOutputX(viewIndex, x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the x-axis output position of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired output X position.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputY">
        <h2 style="margin-bottom: 8px;">View.SetOutputY</h2>
        <code>View.SetOutputY(viewIndex, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the y-axis output position of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>y (Number): Desired output Y position.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputPosition">
        <h2 style="margin-bottom: 8px;">View.SetOutputPosition</h2>
        <code>View.SetOutputPosition(viewIndex, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the output position of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired output X position.</li>
        <li>y (Number): Desired output Y position.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputSize">
        <h2 style="margin-bottom: 8px;">View.SetOutputSize</h2>
        <code>View.SetOutputSize(viewIndex, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the output size of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>width (Number): Desired width.</li>
        <li>height (Number): Desired height.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_GetX">
        <h2 style="margin-bottom: 8px;">View.GetX</h2>
        <code>View.GetX(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the x-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetY">
        <h2 style="margin-bottom: 8px;">View.GetY</h2>
        <code>View.GetY(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the y-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetZ">
        <h2 style="margin-bottom: 8px;">View.GetZ</h2>
        <code>View.GetZ(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the z-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetWidth">
        <h2 style="margin-bottom: 8px;">View.GetWidth</h2>
        <code>View.GetWidth(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetHeight">
        <h2 style="margin-bottom: 8px;">View.GetHeight</h2>
        <code>View.GetHeight(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetCenterX">
        <h2 style="margin-bottom: 8px;">View.GetCenterX</h2>
        <code>View.GetCenterX(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the x center of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetCenterY">
        <h2 style="margin-bottom: 8px;">View.GetCenterY</h2>
        <code>View.GetCenterY(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the y center of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_IsUsingDrawTarget">
        <h2 style="margin-bottom: 8px;">View.IsUsingDrawTarget</h2>
        <code>View.IsUsingDrawTarget(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is using a draw target or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetUseDrawTarget">
        <h2 style="margin-bottom: 8px;">View.SetUseDrawTarget</h2>
        <code>View.SetUseDrawTarget(viewIndex, useDrawTarget)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to use a draw target.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>useDrawTarget (Boolean): Whether to use a draw target or not.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_GetDrawTarget">
        <h2 style="margin-bottom: 8px;">View.GetDrawTarget</h2>
        <code>View.GetDrawTarget(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the specified camera's draw target.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_IsUsingSoftwareRenderer">
        <h2 style="margin-bottom: 8px;">View.IsUsingSoftwareRenderer</h2>
        <code>View.IsUsingSoftwareRenderer(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is using the software renderer or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetUseSoftwareRenderer">
        <h2 style="margin-bottom: 8px;">View.SetUseSoftwareRenderer</h2>
        <code>View.SetUseSoftwareRenderer(viewIndex, useSoftwareRenderer)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to use the software renderer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>useSoftwareRenderer (Boolean):</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetUsePerspective">
        <h2 style="margin-bottom: 8px; color: red;">View.SetUsePerspective</h2>
        <code>View.SetUsePerspective()</code>
        </p>
        <p id="Reference_functions_View_IsEnabled">
        <h2 style="margin-bottom: 8px;">View.IsEnabled</h2>
        <code>View.IsEnabled(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is active or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetEnabled">
        <h2 style="margin-bottom: 8px;">View.SetEnabled</h2>
        <code>View.SetEnabled(viewIndex, enabled)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to be active.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>enabled (Boolean): Whether or not the camera should be enabled.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_IsVisible">
        <h2 style="margin-bottom: 8px;">View.IsVisible</h2>
        <code>View.IsVisible(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is visible or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetVisible">
        <h2 style="margin-bottom: 8px;">View.SetVisible</h2>
        <code>View.SetVisible(viewIndex, visible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to be visible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>visible (Boolean): Whether or not the camera should be visible.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetFieldOfView">
        <h2 style="margin-bottom: 8px; color: red;">View.SetFieldOfView</h2>
        <code>View.SetFieldOfView()</code>
        </p>
        <p id="Reference_functions_View_SetPriority">
        <h2 style="margin-bottom: 8px;">View.SetPriority</h2>
        <code>View.SetPriority(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified view's priority.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_GetPriority">
        <h2 style="margin-bottom: 8px;">View.GetPriority</h2>
        <code>View.GetPriority(viewIndex, priority)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the specified view's priority.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>priority (Integer):</li>
        </ul>
        </p>
        <p id="Reference_functions_View_GetCurrent">
        <h2 style="margin-bottom: 8px;">View.GetCurrent</h2>
        <code>View.GetCurrent()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current view index being drawn to.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_GetCount">
        <h2 style="margin-bottom: 8px;">View.GetCount</h2>
        <code>View.GetCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the total amount of views.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_GetActiveCount">
        <h2 style="margin-bottom: 8px;">View.GetActiveCount</h2>
        <code>View.GetActiveCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the total amount of views currently activated.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_CheckOnScreen">
        <h2 style="margin-bottom: 8px;">View.CheckOnScreen</h2>
        <code>View.CheckOnScreen(instance, rangeX, rangeY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether an instance is on screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to check.</li>
        <li>rangeX (Decimal): The x range to check, or null if an update region width should be used.</li>
        <li>rangeY (Decimal): The y range to check, or null if an update region height should be used.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether or not the instance is on screen on any view.</div>
        </p>
        <p id="Reference_functions_View_CheckPosOnScreen">
        <h2 style="margin-bottom: 8px;">View.CheckPosOnScreen</h2>
        <code>View.CheckPosOnScreen(posX, posY, rangeX, rangeY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether a position is on screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>posX (Decimal): The x position to check.</li>
        <li>posY (Decimal): The y position to check.</li>
        <li>rangeX (Decimal): The x range to check.</li>
        <li>rangeY (Decimal): The y range to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether or not the position is on screen on any view.</div>
        </p>
        <p id="Reference_functions_View_SetScene">
        <h2 style="margin-bottom: 8px;">View.SetScene</h2>
        <code>View.SetScene(viewIndex, sceneIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified view's scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>sceneIndex (Integer): Index of the scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetSize">
        <h2 style="margin-bottom: 8px;">Window.SetSize</h2>
        <code>Window.SetSize(width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the size of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>width (Number): Window width</li>
        <li>height (Number): Window height</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetFullscreen">
        <h2 style="margin-bottom: 8px;">Window.SetFullscreen</h2>
        <code>Window.SetFullscreen(isFullscreen)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the fullscreen state of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isFullscreen (Boolean): Whether or not the window should be fullscreen.</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetBorderless">
        <h2 style="margin-bottom: 8px;">Window.SetBorderless</h2>
        <code>Window.SetBorderless(isBorderless)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the bordered state of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isBorderless (Boolean): Whether or not the window should be borderless.</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetVSync">
        <h2 style="margin-bottom: 8px;">Window.SetVSync</h2>
        <code>Window.SetVSync(enableVsync)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables V-Sync for the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>enableVsync (Boolean): Whether or not the window should use V-Sync.</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetPosition">
        <h2 style="margin-bottom: 8px;">Window.SetPosition</h2>
        <code>Window.SetPosition(x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): Window x</li>
        <li>y (Number): Window y</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetPositionCentered">
        <h2 style="margin-bottom: 8px;">Window.SetPositionCentered</h2>
        <code>Window.SetPositionCentered()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the active window to the center of the display.</div>
        </p>
        <p id="Reference_functions_Window_SetTitle">
        <h2 style="margin-bottom: 8px;">Window.SetTitle</h2>
        <code>Window.SetTitle(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the title of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Window title</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_GetWidth">
        <h2 style="margin-bottom: 8px;">Window.GetWidth</h2>
        <code>Window.GetWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the width of the active window.</div>
        </p>
        <p id="Reference_functions_Window_GetHeight">
        <h2 style="margin-bottom: 8px;">Window.GetHeight</h2>
        <code>Window.GetHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the height of the active window.</div>
        </p>
        <p id="Reference_functions_Window_GetFullscreen">
        <h2 style="margin-bottom: 8px;">Window.GetFullscreen</h2>
        <code>Window.GetFullscreen()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the active window is currently fullscreen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the window is fullscreen, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Window_IsResizeable">
        <h2 style="margin-bottom: 8px;">Window.IsResizeable</h2>
        <code>Window.IsResizeable()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the active window is resizeable.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the window is resizeable, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_XML_Parse">
        <h2 style="margin-bottom: 8px;">XML.Parse</h2>
        <code>XML.Parse(xmlText)</code>
        <div style="margin-top: 8px; font-size: 14px;">Decodes a String value into a Map value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>xmlText (String): XML-compliant text.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value if the text can be decoded, otherwise returns <code>null</code>.</div>
        </p>
        <p>640 out of 700 functions have descriptions. </p>
        <hr/>
        <h3>Instance methods</h3>
        <p id="Reference_methods_instance_SetAnimation">
        <h2 style="margin-bottom: 8px;">instance.SetAnimation</h2>
        <code>instance.SetAnimation(animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the current animation of the entity, if the animation index differs from the entity's current animation index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_ResetAnimation">
        <h2 style="margin-bottom: 8px;">instance.ResetAnimation</h2>
        <code>instance.ResetAnimation(animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the current animation of the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_Animate">
        <h2 style="margin-bottom: 8px;">instance.Animate</h2>
        <code>instance.Animate()</code>
        <div style="margin-top: 8px; font-size: 14px;">Animates the entity.</div>
        </p>
        <p id="Reference_methods_instance_AddToRegistry">
        <h2 style="margin-bottom: 8px;">instance.AddToRegistry</h2>
        <code>instance.AddToRegistry(registry)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds the entity to a registry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>registry (String): The registry name.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_RemoveFromRegistry">
        <h2 style="margin-bottom: 8px;">instance.RemoveFromRegistry</h2>
        <code>instance.RemoveFromRegistry(registry)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the entity from a registry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>registry (String): The registry name.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_ApplyMotion">
        <h2 style="margin-bottom: 8px;">instance.ApplyMotion</h2>
        <code>instance.ApplyMotion()</code>
        <div style="margin-top: 8px; font-size: 14px;">Applies gravity and velocities to the entity.</div>
        </p>
        <p id="Reference_methods_instance_InView">
        <h2 style="margin-bottom: 8px;">instance.InView</h2>
        <code>instance.InView(viewIndex, x, y, w, h)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the specified positions and ranges are within the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): The view index.</li>
        <li>x (Decimal): The X position.</li>
        <li>y (Decimal): The Y position.</li>
        <li>w (Decimal): The width.</li>
        <li>h (Decimal): The height.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the specified positions and ranges are within the specified view, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_CollidedWithObject">
        <h2 style="margin-bottom: 8px;">instance.CollidedWithObject</h2>
        <code>instance.CollidedWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the entity collided with another entity, or any entity of the specified class name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance/String): The entity or class to collide with.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the entity that was collided with, or <code>null</code> if it did not collide with any entity.</div>
        </p>
        <p id="Reference_methods_instance_GetHitboxFromSprite">
        <h2 style="margin-bottom: 8px;">instance.GetHitboxFromSprite</h2>
        <code>instance.GetHitboxFromSprite(sprite, animation, frame, hitbox)</code>
        <div style="margin-top: 8px; font-size: 14px;">Updates the entity's hitbox with the hitbox in the specified sprite's animation, frame and hitbox ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Sprite): The sprite.</li>
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        <li>hitbox (Integer): The hitbox ID.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_GetHitboxFromSprite">
        <h2 style="margin-bottom: 8px;">instance.GetHitboxFromSprite</h2>
        <code>instance.GetHitboxFromSprite(sprite, animation, frame, hitbox)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the hitbox in the specified sprite's animation, frame and hitbox ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Sprite): The sprite.</li>
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        <li>hitbox (Integer): The hitbox ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an array containing the hitbox top, left, right and bottom sides in that order.</div>
        </p>
        <p id="Reference_methods_instance_CollideWithObject">
        <h2 style="margin-bottom: 8px;">instance.CollideWithObject</h2>
        <code>instance.CollideWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Does collision with another entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance): The other entity.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity collided, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_SolidCollideWithObject">
        <h2 style="margin-bottom: 8px;">instance.SolidCollideWithObject</h2>
        <code>instance.SolidCollideWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Does solid collision with another entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance): The other entity.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity collided, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_TopSolidCollideWithObject">
        <h2 style="margin-bottom: 8px;">instance.TopSolidCollideWithObject</h2>
        <code>instance.TopSolidCollideWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Does solid collision with another entity's top.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance): The other entity.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity collided, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_PropertyExists">
        <h2 style="margin-bottom: 8px;">instance.PropertyExists</h2>
        <code>instance.PropertyExists(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists in the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): The property name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the property exists, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_PropertyGet">
        <h2 style="margin-bottom: 8px;">instance.PropertyGet</h2>
        <code>instance.PropertyGet(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property exists from the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): The property name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property if it exists, and <code>null</code> if the property does not exist.</div>
        </p>
        <p id="Reference_methods_instance_SetViewVisibility">
        <h2 style="margin-bottom: 8px;">instance.SetViewVisibility</h2>
        <code>instance.SetViewVisibility(viewIndex, visible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether the entity is visible on a specific view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): The view index.</li>
        <li>visible (Boolean): Whether the entity will be visible or not on the specified view.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_SetViewOverride">
        <h2 style="margin-bottom: 8px;">instance.SetViewOverride</h2>
        <code>instance.SetViewOverride(viewIndex, visible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Toggles the bypass for each view's entity rendering toggle set by <code>Scene.SetObjectViewRender</code>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): The view index.</li>
        <li>visible (Boolean): Whether the entity will always be visible or not on the specified view.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_AddToDrawGroup">
        <h2 style="margin-bottom: 8px;">instance.AddToDrawGroup</h2>
        <code>instance.AddToDrawGroup(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds the entity into the specified draw group.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): The draw group.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_IsInDrawGroup">
        <h2 style="margin-bottom: 8px;">instance.IsInDrawGroup</h2>
        <code>instance.IsInDrawGroup(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the entity is in the specified draw group.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): The draw group.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity is in the specified draw group, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_RemoveFromDrawGroup">
        <h2 style="margin-bottom: 8px;">instance.RemoveFromDrawGroup</h2>
        <code>instance.RemoveFromDrawGroup(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the entity from the specified draw group.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): The draw group.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_PlaySound">
        <h2 style="margin-bottom: 8px;">instance.PlaySound</h2>
        <code>instance.PlaySound(sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound once from the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play.</div>
        </p>
        <p id="Reference_methods_instance_LoopSound">
        <h2 style="margin-bottom: 8px;">instance.LoopSound</h2>
        <code>instance.LoopSound(sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound from the entity, looping back when it ends.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play.</div>
        </p>
        <p id="Reference_methods_instance_StopSound">
        <h2 style="margin-bottom: 8px;">instance.StopSound</h2>
        <code>instance.StopSound(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops a specific sound that is being played from the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to interrupt.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_StopAllSounds">
        <h2 style="margin-bottom: 8px;">instance.StopAllSounds</h2>
        <code>instance.StopAllSounds()</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops all sounds the entity is playing.</div>
        </p>
        <p>24 out of 24 methods have descriptions. </p>
        <hr/>
        <h3>Instance fields</h3>
        <p id="Reference_fields_instance_X">
        <h3 style="margin-bottom: 8px;"><code>instance.X</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The X position of the entity.</div>
        </p>
        <p id="Reference_fields_instance_Y">
        <h3 style="margin-bottom: 8px;"><code>instance.Y</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The Y position of the entity.</div>
        </p>
        <p id="Reference_fields_instance_Z">
        <h3 style="margin-bottom: 8px;"><code>instance.Z</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The Z position of the entity.</div>
        </p>
        <p id="Reference_fields_instance_XSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.XSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal velocity of the entity.</div>
        </p>
        <p id="Reference_fields_instance_YSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.YSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical velocity of the entity.</div>
        </p>
        <p id="Reference_fields_instance_GroundSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.GroundSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The speed of the entity on the ground.</div>
        </p>
        <p id="Reference_fields_instance_Gravity">
        <h3 style="margin-bottom: 8px;"><code>instance.Gravity</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The gravity of the entity.</div>
        </p>
        <p id="Reference_fields_instance_AutoPhysics">
        <h3 style="margin-bottom: 8px;"><code>instance.AutoPhysics</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether <code><a href="#Reference_methods_instance_ApplyMotion">instance.ApplyMotion</a></code> is automatically called for this entity.</div>
        </p>
        <p id="Reference_fields_instance_Angle">
        <h3 style="margin-bottom: 8px;"><code>instance.Angle</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The angle of the entity on the ground, within the range of <code>0x00</code> - <code>0xFF</code>.</div>
        </p>
        <p id="Reference_fields_instance_AngleMode">
        <h3 style="margin-bottom: 8px;"><code>instance.AngleMode</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The angle mode of the entity on the ground, within the range of <code>0</code> - <code>3</code>.</div>
        </p>
        <p id="Reference_fields_instance_Ground">
        <h3 style="margin-bottom: 8px;"><code>instance.Ground</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity is on the ground.</div>
        </p>
        <p id="Reference_fields_instance_ScaleX">
        <h3 style="margin-bottom: 8px;"><code>instance.ScaleX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>1.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for scaling a sprite horizontally.</div>
        </p>
        <p id="Reference_fields_instance_ScaleY">
        <h3 style="margin-bottom: 8px;"><code>instance.ScaleY</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>1.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for scaling a sprite vertically.</div>
        </p>
        <p id="Reference_fields_instance_Rotation">
        <h3 style="margin-bottom: 8px;"><code>instance.Rotation</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal (radians)</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for rotating a sprite.</div>
        </p>
        <p id="Reference_fields_instance_Alpha">
        <h3 style="margin-bottom: 8px;"><code>instance.Alpha</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for changing the opacity of a sprite.</div>
        </p>
        <p id="Reference_fields_instance_Priority">
        <h3 style="margin-bottom: 8px;"><code>instance.Priority</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The priority, or draw group, where this entity is located.</div>
        </p>
        <p id="Reference_fields_instance_Depth">
        <h3 style="margin-bottom: 8px;"><code>instance.Depth</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The depth of the entity. Used for sorting entity draw order.</div>
        </p>
        <p id="Reference_fields_instance_Sprite">
        <h3 style="margin-bottom: 8px;"><code>instance.Sprite</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer (Resource)</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The sprite index of the entity.</div>
        </p>
        <p id="Reference_fields_instance_CurrentAnimation">
        <h3 style="margin-bottom: 8px;"><code>instance.CurrentAnimation</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The current sprite  animation index of the entity.</div>
        </p>
        <p id="Reference_fields_instance_CurrentFrame">
        <h3 style="margin-bottom: 8px;"><code>instance.CurrentFrame</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The current frame index of the entity's current animation.</div>
        </p>
        <p id="Reference_fields_instance_CurrentFrameCount">
        <h3 style="margin-bottom: 8px;"><code>instance.CurrentFrameCount</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The frame count of the entity's current animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The animation speed of the entity's animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationTimer">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationTimer</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The animation timer of the entity's animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationFrameDuration">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationFrameDuration</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The duration of the entity's current animation frame.</div>
        </p>
        <p id="Reference_fields_instance_AnimationLoopIndex">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationLoopIndex</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The loop index of entity's current animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationSpeedMult">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationSpeedMult</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>1.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The animation speed multiplier of the entity.</div>
        </p>
        <p id="Reference_fields_instance_AnimationSpeedAdd">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationSpeedAdd</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">This value is added to the result of <code><a href="#Reference_fields_instance_AnimationSpeed">instance.AnimationSpeed</a></code> * <code><a href="#Reference_fields_instance_AnimationSpeedMult">instance.AnimationSpeedMult</a></code> when the entity is being animated.</div>
        </p>
        <p id="Reference_fields_instance_AutoAnimate">
        <h3 style="margin-bottom: 8px;"><code>instance.AutoAnimate</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether <code><a href="#Reference_methods_instance_Animate">instance.Animate</a></code> is automatically called for this entity.</div>
        </p>
        <p id="Reference_fields_instance_OnScreen">
        <h3 style="margin-bottom: 8px;"><code>instance.OnScreen</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">See <code><a href="#Reference_fields_instance_InRange">instance.InRange</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_OnScreenHitboxW">
        <h3 style="margin-bottom: 8px;"><code>instance.OnScreenHitboxW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Alias for <code><a href="#Reference_fields_instance_UpdateRegionW">instance.UpdateRegionW</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_OnScreenHitboxH">
        <h3 style="margin-bottom: 8px;"><code>instance.OnScreenHitboxH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Alias for <code><a href="#Reference_fields_instance_UpdateRegionH">instance.UpdateRegionH</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_ViewRenderFlag">
        <h3 style="margin-bottom: 8px;"><code>instance.ViewRenderFlag</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>~0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A bitfield that indicates in which views the entity renders. By default, this is on for every view.</div>
        </p>
        <p id="Reference_fields_instance_ViewOverrideFlag">
        <h3 style="margin-bottom: 8px;"><code>instance.ViewOverrideFlag</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A bitfield similar to <code><a href="#Reference_fields_instance_ViewRenderFlag">instance.ViewRenderFlag</a></code>. Bypasses each view's entity rendering toggle set by <code>Scene.SetObjectViewRender</code>.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionW">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal on-screen range where the entity can update. If this and <code><a href="#Reference_fields_instance_UpdateRegionH">instance.UpdateRegionH</a></code> are set to <code>0.0</code>, the entity will update regardless of the camera's position.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionH">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical on-screen range where the entity can update. If this and <code><a href="#Reference_fields_instance_UpdateRegionW">instance.UpdateRegionW</a></code> are set to <code>0.0</code>, the entity will update regardless of the camera's position.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionW">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal on-screen range where the entity can render. If set to <code>0.0</code>, the entity will render regardless of the camera's horizontal position.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionH">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical on-screen range where the entity can render. If set to <code>0.0</code>, the entity will render regardless of the camera's vertical position.</div>
        </p>
        <p id="Reference_fields_instance_HitboxW">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The width of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxH">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The height of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxOffX">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxOffX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal offset of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxOffY">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxOffY</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical offset of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_FlipFlag">
        <h3 style="margin-bottom: 8px;"><code>instance.FlipFlag</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Bitfield that indicates whether the entity is X/Y flipped.</div>
        </p>
        <p id="Reference_fields_instance_VelocityX">
        <h3 style="margin-bottom: 8px;"><code>instance.VelocityX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_XSpeed">instance.XSpeed</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_VelocityX">
        <h3 style="margin-bottom: 8px;"><code>instance.VelocityX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_YSpeed">instance.YSpeed</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_GroundVel">
        <h3 style="margin-bottom: 8px;"><code>instance.GroundVel</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_GroundSpeed">instance.GroundSpeed</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_Direction">
        <h3 style="margin-bottom: 8px;"><code>instance.Direction</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_FlipFlag">instance.FlipFlag</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_OnGround">
        <h3 style="margin-bottom: 8px;"><code>instance.OnGround</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_Ground">instance.Ground</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_SlotID">
        <h3 style="margin-bottom: 8px;"><code>instance.SlotID</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">If this entity was spawned from a scene file, this field contains the slot ID in which it was placed. If not, this field contains the default value of <code>-1</code>.</div>
        </p>
        <p id="Reference_fields_instance_ZDepth">
        <h3 style="margin-bottom: 8px;"><code>instance.ZDepth</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        </p>
        <p id="Reference_fields_instance_CollisionLayers">
        <h3 style="margin-bottom: 8px;"><code>instance.CollisionLayers</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A bitfield containing which layers an entity is able to collide with.</div>
        </p>
        <p id="Reference_fields_instance_CollisionPlane">
        <h3 style="margin-bottom: 8px;"><code>instance.CollisionPlane</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        </p>
        <p id="Reference_fields_instance_CollisionMode">
        <h3 style="margin-bottom: 8px;"><code>instance.CollisionMode</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        </p>
        <p id="Reference_fields_instance_TileCollisions">
        <h3 style="margin-bottom: 8px;"><code>instance.TileCollisions</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        </p>
        <p id="Reference_fields_instance_Activity">
        <h3 style="margin-bottom: 8px;"><code>instance.Activity</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Enumeration</div>
        <div style="font-size: 14px;"><b>Default: </b><code>ACTIVE_BOUNDS</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The active status for this entity.</div>
        </p>
        <p id="Reference_fields_instance_InRange">
        <h3 style="margin-bottom: 8px;"><code>instance.InRange</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether this entity is within active range; see <code><a href="#Reference_fields_instance_Activity">instance.Activity</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_SensorX">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will contain the horizontal position of where the entity collided.</div>
        </p>
        <p id="Reference_fields_instance_SensorY">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorY</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will contain the vertical position of where the entity collided.</div>
        </p>
        <p id="Reference_fields_instance_SensorAngle">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorAngle</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will be <code>true</code> if the entity collided with a tile, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_fields_instance_SensorAngle">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorAngle</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will contain the angle of the tile within the range of <code>0x00</code> - <code>0xFF</code>.</div>
        </p>
        <p id="Reference_fields_instance_Active">
        <h3 style="margin-bottom: 8px;"><code>instance.Active</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity is active. If set to false, the entity is removed at the end of the frame.</div>
        </p>
        <p id="Reference_fields_instance_Pauseable">
        <h3 style="margin-bottom: 8px;"><code>instance.Pauseable</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity stops updating when the scene is paused.</div>
        </p>
        <p id="Reference_fields_instance_Persistent">
        <h3 style="margin-bottom: 8px;"><code>instance.Persistent</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">See <code><a href="#Reference_fields_instance_Persistence">instance.Persistence</a></code> instead.</div>
        </p>
        <p id="Reference_fields_instance_Interactable">
        <h3 style="margin-bottom: 8px;"><code>instance.Interactable</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity can be interacted with. If set to <code>false</code>, the entity will not be included in <code>with</code> iterations.</div>
        </p>
        <p id="Reference_fields_instance_Persistence">
        <h3 style="margin-bottom: 8px;"><code>instance.Persistence</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>Persistence_NONE</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity persists between scenes.</div>
        </p>
        <p>60 out of 64 fields have descriptions. </p>
        <hr/>
        <h3>Enums</h3>
        <p id="Reference_enums_ACTIVE_NEVER">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_NEVER</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity never updates. Object never runs GlobalUpdate.</div>
        </p>
        <p id="Reference_enums_ACTIVE_ALWAYS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_ALWAYS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity always updates. Object always runs GlobalUpdate.</div>
        </p>
        <p id="Reference_enums_ACTIVE_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity updates no matter where it is located on the scene if the scene is paused. Object runs GlobalUpdate if the scene is not paused.</div>
        </p>
        <p id="Reference_enums_ACTIVE_PAUSED">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_PAUSED</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates if the scene is paused. Object runs GlobalUpdate if the scene is paused.</div>
        </p>
        <p id="Reference_enums_ACTIVE_BOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_BOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates if it is within its bounds (uses UpdateRegionW and uses UpdateRegionH).</div>
        </p>
        <p id="Reference_enums_ACTIVE_XBOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_XBOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates within an X bound. (only uses UpdateRegionW)</div>
        </p>
        <p id="Reference_enums_ACTIVE_YBOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_YBOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates within a Y bound. (only uses UpdateRegionH)</div>
        </p>
        <p id="Reference_enums_ACTIVE_RBOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_RBOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity updates within a radius. (uses UpdateRegionW)</div>
        </p>
        <p id="Reference_enums_Axis_LEFTX">
        <h3 style="margin-bottom: 8px;"><code>Axis_LEFTX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller stick X.</div>
        </p>
        <p id="Reference_enums_Axis_LEFTY">
        <h3 style="margin-bottom: 8px;"><code>Axis_LEFTY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller stick Y.</div>
        </p>
        <p id="Reference_enums_Axis_RIGHTX">
        <h3 style="margin-bottom: 8px;"><code>Axis_RIGHTX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller stick X.</div>
        </p>
        <p id="Reference_enums_Axis_RIGHTY">
        <h3 style="margin-bottom: 8px;"><code>Axis_RIGHTY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller stick Y.</div>
        </p>
        <p id="Reference_enums_Axis_TRIGGERLEFT">
        <h3 style="margin-bottom: 8px;"><code>Axis_TRIGGERLEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller trigger.</div>
        </p>
        <p id="Reference_enums_Axis_TRIGGERRIGHT">
        <h3 style="margin-bottom: 8px;"><code>Axis_TRIGGERRIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller trigger.</div>
        </p>
        <p id="Reference_enums_BlendFactor_ZERO">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_ZERO</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (0, 0, 0, 0)</div>
        </p>
        <p id="Reference_enums_BlendFactor_ONE">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_ONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1, 1, 1, 1)</div>
        </p>
        <p id="Reference_enums_BlendFactor_SRC_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_SRC_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (Rs, Gs, Bs, As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_SRC_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_SRC_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-Rs, 1-Gs, 1-Bs, 1-As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_SRC_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_SRC_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (As, As, As, As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_SRC_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_SRC_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-As, 1-As, 1-As, 1-As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_DST_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_DST_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (Rd, Gd, Bd, Ad)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_DST_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_DST_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-Rd, 1-Gd, 1-Bd, 1-Ad)</div>
        </p>
        <p id="Reference_enums_BlendFactor_DST_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_DST_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (Ad, Ad, Ad, Ad)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_DST_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_DST_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-Ad, 1-Ad, 1-Ad, 1-Ad)</div>
        </p>
        <p id="Reference_enums_BlendMode_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Normal pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_ADD">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_ADD</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Additive pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_SUBTRACT">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_SUBTRACT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Subtractive pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_MAX">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_MAX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(hardware-renderer only) Maximum pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_MATCH_EQUAL">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_MATCH_EQUAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Draw pixels only where it matches the Comparison Color.</div>
        </p>
        <p id="Reference_enums_BlendMode_MATCH_NOT_EQUAL">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_MATCH_NOT_EQUAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Draw pixels only where it does not match the Comparison Color.</div>
        </p>
        <p id="Reference_enums_Button_A">
        <h3 style="margin-bottom: 8px;"><code>Button_A</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Bottom controller face button.</div>
        </p>
        <p id="Reference_enums_Button_B">
        <h3 style="margin-bottom: 8px;"><code>Button_B</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller face button.</div>
        </p>
        <p id="Reference_enums_Button_X">
        <h3 style="margin-bottom: 8px;"><code>Button_X</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller face button.</div>
        </p>
        <p id="Reference_enums_Button_Y">
        <h3 style="margin-bottom: 8px;"><code>Button_Y</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Top controller face button.</div>
        </p>
        <p id="Reference_enums_Button_BACK">
        <h3 style="margin-bottom: 8px;"><code>Button_BACK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller Back button.</div>
        </p>
        <p id="Reference_enums_Button_GUIDE">
        <h3 style="margin-bottom: 8px;"><code>Button_GUIDE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller Guide button.</div>
        </p>
        <p id="Reference_enums_Button_START">
        <h3 style="margin-bottom: 8px;"><code>Button_START</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller Start button.</div>
        </p>
        <p id="Reference_enums_Button_LEFTSTICK">
        <h3 style="margin-bottom: 8px;"><code>Button_LEFTSTICK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller left stick click.</div>
        </p>
        <p id="Reference_enums_Button_RIGHTSTICK">
        <h3 style="margin-bottom: 8px;"><code>Button_RIGHTSTICK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller right stick click.</div>
        </p>
        <p id="Reference_enums_Button_LEFTSHOULDER">
        <h3 style="margin-bottom: 8px;"><code>Button_LEFTSHOULDER</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller left shoulder.</div>
        </p>
        <p id="Reference_enums_Button_RIGHTSHOULDER">
        <h3 style="margin-bottom: 8px;"><code>Button_RIGHTSHOULDER</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller right shoulder.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_UP">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_UP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Up.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_DOWN">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_DOWN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Down.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_LEFT">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_LEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Left.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_RIGHT">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_RIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Right.</div>
        </p>
        <p id="Reference_enums_Button_SHARE">
        <h3 style="margin-bottom: 8px;"><code>Button_SHARE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Share/Capture controller button.</div>
        </p>
        <p id="Reference_enums_Button_MICROPHONE">
        <h3 style="margin-bottom: 8px;"><code>Button_MICROPHONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Microphone controller button.</div>
        </p>
        <p id="Reference_enums_Button_TOUCHPAD">
        <h3 style="margin-bottom: 8px;"><code>Button_TOUCHPAD</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Touchpad controller button.</div>
        </p>
        <p id="Reference_enums_Button_PADDLE1">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE1</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P1 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_PADDLE2">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE2</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P2 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_PADDLE3">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE3</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P3 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_PADDLE4">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE4</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P4 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_MISC1">
        <h3 style="margin-bottom: 8px;"><code>Button_MISC1</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller button for miscellaneous purposes.</div>
        </p>
        <p id="Reference_enums_CMODE_FLOOR">
        <h3 style="margin-bottom: 8px;"><code>CMODE_FLOOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with a floor.</div>
        </p>
        <p id="Reference_enums_CMODE_LWALL">
        <h3 style="margin-bottom: 8px;"><code>CMODE_LWALL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with the left side of a wall.</div>
        </p>
        <p id="Reference_enums_CMODE_ROOF">
        <h3 style="margin-bottom: 8px;"><code>CMODE_ROOF</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with a roof.</div>
        </p>
        <p id="Reference_enums_CMODE_RWALL">
        <h3 style="margin-bottom: 8px;"><code>CMODE_RWALL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with the right side of a wall.</div>
        </p>
        <p id="Reference_enums_C_NONE">
        <h3 style="margin-bottom: 8px;"><code>C_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">No collided side.</div>
        </p>
        <p id="Reference_enums_C_TOP">
        <h3 style="margin-bottom: 8px;"><code>C_TOP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Top collided side.</div>
        </p>
        <p id="Reference_enums_C_LEFT">
        <h3 style="margin-bottom: 8px;"><code>C_LEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left collided side.</div>
        </p>
        <p id="Reference_enums_C_RIGHT">
        <h3 style="margin-bottom: 8px;"><code>C_RIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right collided side.</div>
        </p>
        <p id="Reference_enums_C_BOTTOM">
        <h3 style="margin-bottom: 8px;"><code>C_BOTTOM</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Bottom collided side.</div>
        </p>
        <p id="Reference_enums_Controller_Xbox360">
        <h3 style="margin-bottom: 8px;"><code>Controller_Xbox360</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox 360 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_XboxOne">
        <h3 style="margin-bottom: 8px;"><code>Controller_XboxOne</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox One controller type.</div>
        </p>
        <p id="Reference_enums_Controller_XboxSeriesXS">
        <h3 style="margin-bottom: 8px;"><code>Controller_XboxSeriesXS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox Series XS controller type.</div>
        </p>
        <p id="Reference_enums_Controller_XboxElite">
        <h3 style="margin-bottom: 8px;"><code>Controller_XboxElite</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox Elite controller type.</div>
        </p>
        <p id="Reference_enums_Controller_PS3">
        <h3 style="margin-bottom: 8px;"><code>Controller_PS3</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation 3 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_PS4">
        <h3 style="margin-bottom: 8px;"><code>Controller_PS4</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation 4 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_PS5">
        <h3 style="margin-bottom: 8px;"><code>Controller_PS5</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation 5 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchJoyConPair">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchJoyConPair</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Joy-Con pair controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchJoyConLeft">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchJoyConLeft</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Joy-Con L controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchJoyConRight">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchJoyConRight</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Joy-Con R controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchPro">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchPro</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Pro Controller controller type.</div>
        </p>
        <p id="Reference_enums_Controller_Stadia">
        <h3 style="margin-bottom: 8px;"><code>Controller_Stadia</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Stadia Controller controller type.</div>
        </p>
        <p id="Reference_enums_Controller_AmazonLuna">
        <h3 style="margin-bottom: 8px;"><code>Controller_AmazonLuna</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Amazon Luna controller type.</div>
        </p>
        <p id="Reference_enums_Controller_NvidiaShield">
        <h3 style="margin-bottom: 8px;"><code>Controller_NvidiaShield</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nvidia Shield TV controller type.</div>
        </p>
        <p id="Reference_enums_Controller_Unknown">
        <h3 style="margin-bottom: 8px;"><code>Controller_Unknown</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Unknown or unrecognized controller type.</div>
        </p>
        <p id="Reference_enums_DrawBehavior_HorizontalParallax">
        <h3 style="margin-bottom: 8px;"><code>DrawBehavior_HorizontalParallax</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Horizontal parallax.</div>
        </p>
        <p id="Reference_enums_DrawBehavior_VerticalParallax">
        <h3 style="margin-bottom: 8px;"><code>DrawBehavior_VerticalParallax</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Do not use.</div>
        </p>
        <p id="Reference_enums_DrawBehavior_CustomTileScanLines">
        <h3 style="margin-bottom: 8px;"><code>DrawBehavior_CustomTileScanLines</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Custom scanline behavior.</div>
        </p>
        <p id="Reference_enums_DrawMode_LINES">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LINES</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Draws the faces with lines, using a solid color determined by the face's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_POLYGONS">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POLYGONS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Draws the faces with polygons, using a solid color determined by the face's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_POINTS">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POINTS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(hardware-renderer only) Draws the faces with points, using a solid color determined by the face's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_FLAT_LIGHTING">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FLAT_LIGHTING</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables lighting, using a color for the primitive calculated with the vertex normals, and the primitive's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_SMOOTH_LIGHTING">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_SMOOTH_LIGHTING</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables lighting, using a color smoothly spread across the primitive calculated with the vertex normals, and the primitive's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_TEXTURED">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_TEXTURED</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables texturing.</div>
        </p>
        <p id="Reference_enums_DrawMode_AFFINE">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_AFFINE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Uses affine texture mapping.</div>
        </p>
        <p id="Reference_enums_DrawMode_DEPTH_TEST">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_DEPTH_TEST</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables depth testing.</div>
        </p>
        <p id="Reference_enums_DrawMode_FOG">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FOG</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Enables fog.</div>
        </p>
        <p id="Reference_enums_DrawMode_ORTHOGRAPHIC">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_ORTHOGRAPHIC</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Uses orthographic perspective projection.</div>
        </p>
        <p id="Reference_enums_DrawMode_LINES_FLAT">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LINES_FLAT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></code> and <code><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_LINES_SMOOTH">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LINES_SMOOTH</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></code> and <code><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_POLYGONS_FLAT">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POLYGONS_FLAT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></code> and <code><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_POLYGONS_SMOOTH">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POLYGONS_SMOOTH</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></code> and <code><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_PrimitiveMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_PrimitiveMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_POINTS">DrawMode_POINTS</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_DrawMode_LightingMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LightingMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_DrawMode_FillTypeMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FillTypeMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code><a href="#Reference_enums_DrawMode_PrimitiveMask">DrawMode_PrimitiveMask</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_LightingMask">DrawMode_LightingMask</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_DrawMode_FlagsMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FlagsMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code>~</code><code><a href="#Reference_enums_DrawMode_FillTypeMask">DrawMode_FillTypeMask</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_FLIP_NONE">
        <h3 style="margin-bottom: 8px;"><code>FLIP_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">No flip.</div>
        </p>
        <p id="Reference_enums_FLIP_X">
        <h3 style="margin-bottom: 8px;"><code>FLIP_X</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Horizontal flip.</div>
        </p>
        <p id="Reference_enums_FLIP_Y">
        <h3 style="margin-bottom: 8px;"><code>FLIP_Y</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Vertical flip.</div>
        </p>
        <p id="Reference_enums_FLIP_XY">
        <h3 style="margin-bottom: 8px;"><code>FLIP_XY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Horizontal and vertical flip.</div>
        </p>
        <p id="Reference_enums_FaceCull_None">
        <h3 style="margin-bottom: 8px;"><code>FaceCull_None</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Disables face culling.</div>
        </p>
        <p id="Reference_enums_FaceCull_Back">
        <h3 style="margin-bottom: 8px;"><code>FaceCull_Back</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Culls back faces.</div>
        </p>
        <p id="Reference_enums_FaceCull_Front">
        <h3 style="margin-bottom: 8px;"><code>FaceCull_Front</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Culls front faces.</div>
        </p>
        <p id="Reference_enums_FileStream_READ_ACCESS">
        <h3 style="margin-bottom: 8px;"><code>FileStream_READ_ACCESS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Read file access mode. (<code>rb</code>)</div>
        </p>
        <p id="Reference_enums_FileStream_WRITE_ACCESS">
        <h3 style="margin-bottom: 8px;"><code>FileStream_WRITE_ACCESS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Write file access mode. (<code>wb</code>)</div>
        </p>
        <p id="Reference_enums_FileStream_APPEND_ACCESS">
        <h3 style="margin-bottom: 8px;"><code>FileStream_APPEND_ACCESS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Append file access mode. (<code>ab</code>)</div>
        </p>
        <p id="Reference_enums_Filter_NONE">
        <h3 style="margin-bottom: 8px;"><code>Filter_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Disables the current filter.</div>
        </p>
        <p id="Reference_enums_Filter_BLACK_AND_WHITE">
        <h3 style="margin-bottom: 8px;"><code>Filter_BLACK_AND_WHITE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Black and white filter.</div>
        </p>
        <p id="Reference_enums_Filter_INVERT">
        <h3 style="margin-bottom: 8px;"><code>Filter_INVERT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Invert filter.</div>
        </p>
        <p id="Reference_enums_FogEquation_Linear">
        <h3 style="margin-bottom: 8px;"><code>FogEquation_Linear</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Linear fog equation.</div>
        </p>
        <p id="Reference_enums_FogEquation_Exp">
        <h3 style="margin-bottom: 8px;"><code>FogEquation_Exp</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Exponential fog equation.</div>
        </p>
        <p id="Reference_enums_KeyBind_Fullscreen">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_Fullscreen</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Fullscreen keybind.</div>
        </p>
        <p id="Reference_enums_KeyBind_DevRestartApp">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevRestartApp</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">App restart keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevRestartScene">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevRestartScene</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Scene restart keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevRecompile">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevRecompile</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Script recompile keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevPerfSnapshot">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevPerfSnapshot</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Performance snapshot keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_Fullscreen">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_Fullscreen</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Scene layer info keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevFastForward">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevFastForward</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Fast forward keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevFrameStepper">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevFrameStepper</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Frame stepper keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevStepFrame">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevStepFrame</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Step frame keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevTileCol">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevTileCol</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Tile collision display keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevObjectRegions">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevObjectRegions</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Object regions display keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevQuit">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevQuit</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">App quit keybind. (dev)</div>
        </p>
        <p id="Reference_enums_Persistence_NONE">
        <h3 style="margin-bottom: 8px;"><code>Persistence_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Doesn't persist between scenes.</div>
        </p>
        <p id="Reference_enums_Persistence_SCENE">
        <h3 style="margin-bottom: 8px;"><code>Persistence_SCENE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Persists between scenes (unless a new scene is loaded through <code><a href="#Reference_functions_Scene_LoadNoPersistency">Scene.LoadNoPersistency</a></code>.)</div>
        </p>
        <p id="Reference_enums_Persistence_GAME">
        <h3 style="margin-bottom: 8px;"><code>Persistence_GAME</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Always persists, unless the game is restarted.</div>
        </p>
        <p id="Reference_enums_Platform_Windows">
        <h3 style="margin-bottom: 8px;"><code>Platform_Windows</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Windows platform.</div>
        </p>
        <p id="Reference_enums_Platform_MacOS">
        <h3 style="margin-bottom: 8px;"><code>Platform_MacOS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">MacOS platform.</div>
        </p>
        <p id="Reference_enums_Platform_Linux">
        <h3 style="margin-bottom: 8px;"><code>Platform_Linux</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Linux platform.</div>
        </p>
        <p id="Reference_enums_Platform_Switch">
        <h3 style="margin-bottom: 8px;"><code>Platform_Switch</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch platform.</div>
        </p>
        <p id="Reference_enums_Platform_PlayStation">
        <h3 style="margin-bottom: 8px;"><code>Platform_PlayStation</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation platform.</div>
        </p>
        <p id="Reference_enums_Platform_Xbox">
        <h3 style="margin-bottom: 8px;"><code>Platform_Xbox</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox platform.</div>
        </p>
        <p id="Reference_enums_Platform_Android">
        <h3 style="margin-bottom: 8px;"><code>Platform_Android</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Android platform.</div>
        </p>
        <p id="Reference_enums_Platform_iOS">
        <h3 style="margin-bottom: 8px;"><code>Platform_iOS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">iOS platform.</div>
        </p>
        <p id="Reference_enums_Platform_Unknown">
        <h3 style="margin-bottom: 8px;"><code>Platform_Unknown</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Unknown platform.</div>
        </p>
        <p id="Reference_enums_SCOPE_SCENE">
        <h3 style="margin-bottom: 8px;"><code>SCOPE_SCENE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Scene scope.</div>
        </p>
        <p id="Reference_enums_SCOPE_GAME">
        <h3 style="margin-bottom: 8px;"><code>SCOPE_GAME</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Game scope.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Down">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Down</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Down sensor direction.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Right">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Right</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right sensor direction.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Up">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Up</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Up sensor direction.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Left">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Left</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left sensor direction.</div>
        </p>
        <p id="Reference_enums_TILECOLLISION_NONE">
        <h3 style="margin-bottom: 8px;"><code>TILECOLLISION_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects no tile collision.</div>
        </p>
        <p id="Reference_enums_TILECOLLISION_DOWN">
        <h3 style="margin-bottom: 8px;"><code>TILECOLLISION_DOWN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects downward gravity for tile collision.</div>
        </p>
        <p id="Reference_enums_TILECOLLISION_UP">
        <h3 style="margin-bottom: 8px;"><code>TILECOLLISION_UP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects upward gravity for tile collision.</div>
        </p>
        <p id="Reference_enums_TintMode_SRC_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>TintMode_SRC_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Tints the source pixel with the tint color.</div>
        </p>
        <p id="Reference_enums_TintMode_DST_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>TintMode_DST_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Tints the destination pixel with the tint color.</div>
        </p>
        <p id="Reference_enums_TintMode_SRC_BLEND">
        <h3 style="margin-bottom: 8px;"><code>TintMode_SRC_BLEND</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blends the source pixel with the tint color.</div>
        </p>
        <p id="Reference_enums_TintMode_DST_BLEND">
        <h3 style="margin-bottom: 8px;"><code>TintMode_DST_BLEND</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blends the destination pixel with the tint color.</div>
        </p>
        <p>150 out of 165 enums have descriptions. </p>
        <hr/>
        <h3>Constants</h3>
        <p id="Reference_constants_NUM_CONTROLLER_BUTTONS">
        <h3 style="margin-bottom: 8px;"><code>NUM_CONTROLLER_BUTTONS</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">The amount of buttons in a controller.</div>
        </p>
        <p id="Reference_constants_NUM_CONTROLLER_AXES">
        <h3 style="margin-bottom: 8px;"><code>NUM_CONTROLLER_AXES</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">The amount of axes in a controller.</div>
        </p>
        <p id="Reference_constants_MAX_SCENE_VIEWS">
        <h3 style="margin-bottom: 8px;"><code>MAX_SCENE_VIEWS</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">The max amount of scene views.</div>
        </p>
        <p id="Reference_constants_Math_PI">
        <h3 style="margin-bottom: 8px;"><code>Math_PI</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The value of pi.</div>
        </p>
        <p id="Reference_constants_Math_PI_DOUBLE">
        <h3 style="margin-bottom: 8px;"><code>Math_PI_DOUBLE</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">Double of the value of pi.</div>
        </p>
        <p id="Reference_constants_Math_PI_HALF">
        <h3 style="margin-bottom: 8px;"><code>Math_PI_HALF</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">Half of the value of pi.</div>
        </p>
        <p id="Reference_constants_Math_R_PI">
        <h3 style="margin-bottom: 8px;"><code>Math_R_PI</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">A less precise value of pi.</div>
        </p>
        <p id="Reference_constants_NUM_KEYBOARD_KEYS">
        <h3 style="margin-bottom: 8px;"><code>NUM_KEYBOARD_KEYS</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Count of keyboard keys.</div>
        </p>
        <p>8 out of 8 constants have descriptions. </p>
        <hr/>
        <h3>Globals</h3>
        <p id="Reference_globals_CameraX">
        <h3 style="margin-bottom: 8px;"><code>CameraX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The X position of the first camera.</div>
        </p>
        <p id="Reference_globals_CameraY">
        <h3 style="margin-bottom: 8px;"><code>CameraY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The Y position of the first camera.</div>
        </p>
        <p id="Reference_globals_LowPassFilter">
        <h3 style="margin-bottom: 8px;"><code>LowPassFilter</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The low pass filter of the audio.</div>
        </p>
        <p id="Reference_globals_CurrentView">
        <h3 style="margin-bottom: 8px;"><code>CurrentView</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The current camera index.</div>
        </p>
        <p id="Reference_globals_Scene_Frame">
        <h3 style="margin-bottom: 8px;"><code>Scene_Frame</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The current scene frame.</div>
        </p>
        <p id="Reference_globals_Scene_TimeEnabled">
        <h3 style="margin-bottom: 8px;"><code>Scene_TimeEnabled</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Whether the scene timer is enabled or not.</div>
        </p>
        <p id="Reference_globals_Scene_TimeCounter">
        <h3 style="margin-bottom: 8px;"><code>Scene_TimeCounter</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The current scene timer counter.</div>
        </p>
        <p id="Reference_globals_Scene_Minutes">
        <h3 style="margin-bottom: 8px;"><code>Scene_Minutes</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The minutes value of the scene timer.</div>
        </p>
        <p id="Reference_globals_Scene_Seconds">
        <h3 style="margin-bottom: 8px;"><code>Scene_Seconds</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The seconds value of the scene timer.</div>
        </p>
        <p id="Reference_globals_Scene_Milliseconds">
        <h3 style="margin-bottom: 8px;"><code>Scene_Milliseconds</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The milliseconds value of the scene timer.</div>
        </p>
        <p id="Reference_globals_Scene_Filter">
        <h3 style="margin-bottom: 8px;"><code>Scene_Filter</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The scene's entity filter value.</div>
        </p>
        <p id="Reference_globals_Scene_ListPos">
        <h3 style="margin-bottom: 8px;"><code>Scene_ListPos</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The position of the current scene in the scene list.</div>
        </p>
        <p id="Reference_globals_Scene_ActiveCategory">
        <h3 style="margin-bottom: 8px;"><code>Scene_ActiveCategory</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The category number that contains the current scene.</div>
        </p>
        <p id="Reference_globals_Scene_DebugMode">
        <h3 style="margin-bottom: 8px;"><code>Scene_DebugMode</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Whether nor not Debug Mode has been turned on in the current scene</div>
        </p>
        <p>14 out of 14 globals have descriptions. </p>
        <hr/>
    </body>
</html>
